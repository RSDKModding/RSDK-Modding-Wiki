{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Retro Engine Wiki","text":"<p>Retro Engine Wiki (TODO: write an actual description)</p> <p>The structure of the repository is as shown below: (TODO: Maybe add icons?)</p> <ul> <li> <p>Introduction to RSDK</p> <p>General Information about Retro Engine</p> <p> Getting started</p> </li> <li> <p>Retro Engine v5</p> <p>Documentation, Tools &amp; Resources for RSDKv5</p> <p> RSDKv5</p> </li> <li> <p>Retro Engine v4</p> <p>Documentation, Tools &amp; Resources for RSDKv4</p> <p> RSDKv4</p> </li> <li> <p>Retro Engine v3</p> <p>Documentation, Tools &amp; Resources for RSDKv3</p> <p> RSDKv3</p> </li> <li> <p>Sonic Nexus</p> <p>Documentation, Tools &amp; Resources for Sonic Nexus</p> <p> Sonic Nexus</p> </li> <li> <p>Retro Sonic</p> <p>Documentation, Tools &amp; Resources for Retro Sonic</p> <p> Retro Sonic</p> </li> </ul>"},{"location":"Guides/RetroED-Guide/RetroED-ScnEditor/","title":"Scene Editor","text":""},{"location":"Guides/RetroED-Guide/RetroED-ScnEditor/#tools","title":"Tools","text":"Pre-v5v5 <ul> <li>Pan  :  Allows the user to adjust the view of the scene. Controls:<ul> <li>Left Click (Drag): Moves camera through the editor. Shortcuts:<ul></ul></li> <li>S: Selects the Pan Tool as the current tool.</li> <li>Middle Click (Drag): Lets the user move the camera as if using the pan tool regardless of the currently selected tool.</li> </ul> </li> <li>Pencil  : Draws Chunks on the stage.  Controls:<ul> <li>Left Click: Places chunk in the scene at the current layer.</li> <li>Right Click: Selects chunk from the current layer for future placement.</li> <li>C: Picks a tile hovered by the cursor for editing in the Tile Properties tab. Shortcuts:<ul></ul></li> <li>A: Selects the Pencil Tool as the current tool.</li> </ul> </li> <li>Eraser  :  Used for cleaning chunks on the layout with left click.  Shortcuts:<ul> <li>R: Selects the Eraser Tool as the current tool.</li> </ul> </li> <li>Entity  :  Select and move entities when in Select mode, or places entities when in Placement mode.  Controls (Select Mode):<ul> <li>Left Click: Selects an entity, hold to move it around the stage.</li> <li>Right Click: Selects an entity, will skip a previously selected entity if it's overlapping</li> <li>Ctrl+C: Copies the currently selected entity.</li> <li>Ctrl+V: Pastes an stored entity at cursor's position.</li> <li>Up | Down | Left | Right: Moves the selected entity 4 px in the chosen direction.</li> <li>Up | Down | Left | Right + Ctrl: Moves the selected entity 16 px in the chosen direction.</li> <li>Up | Down | Left | Right + Shift: Moves the selected entity 1 px in the chosen direction.</li> <li>Del | Backspace: Deletes the selected entity.  Controls (Placement Mode):<ul></ul></li> <li>Left Click: Places an entity at the cursor's position.</li> <li>Right Click: Clears selected object and returns to Select mode. Shortcuts:<ul></ul></li> <li>E: Selects the Entity Tool as the current tool.</li> </ul> </li> <li>Select  :  Selects and moves various entities.  Controls:<ul> <li>Left Click (Drag): Selects all entities inside the select box.</li> <li>Left Click (Hold &amp; Drag on selected entity): Moves all entities using the hovered entity as an anchor.</li> <li>Del | Backspace: Deletes all selected entities.</li> </ul> </li> </ul> <ul> <li>Pan  : Allows the user to adjust the view of the scene. Controls:<ul> <li>Left Click (Drag): Moves camera through the editor. Shortcuts:<ul></ul></li> <li>S: Selects the Pan Tool as the current tool.</li> <li>Middle Click (Drag): Lets the user move the camera as if using the pan tool regardless of the currently selected tool.</li> </ul> </li> <li>Pencil  : Draws tiles on the stage.  Controls:<ul> <li>Left Click: Places tile in the scene at the current layer.</li> <li>Right Click: Selects tile from the current layer for future placement.</li> <li>Z: Flips tile for placement horizontally.</li> <li>X: Flips tile for placement tile vertically. Shortcuts:<ul></ul></li> <li>A: Selects the Pencil Tool as the current tool.</li> </ul> </li> <li>Eraser  :  Used for cleaning tiles on the layout with left click.  Controls:<ul> <li>Left Click (Drag): Cleans tiles on the current layer at cursors position. Shortcuts:<ul></ul></li> <li>R: Selects the Eraser Tool as the current tool.</li> </ul> </li> <li>Stamp  :  Places on the stage a preset of tiles selected from the Stamp List tab.  Shortcuts:<ul> <li>K: Selects the Stamp Tool as the current tool.</li> </ul> </li> <li>Stamp Copy  :  Stores a preset of tiles from the stage in the Stamp List by dragging with left click.  Shortcuts:<ul> <li>L: Selects the Stamp Copy Tool as the current tool.</li> </ul> </li> <li>Entity  :  Select and move entities when in Select mode, or places entities when in Placement mode.  Controls (Select Mode):<ul> <li>Left Click: Selects an entity, hold to move it around the stage.</li> <li>Right Click: Selects an entity, will skip a previously selected entity if it's overlapping</li> <li>Ctrl+C: Copies the currently selected entity.</li> <li>Ctrl+V: Pastes an stored entity at cursor's position.</li> <li>Up | Down | Left | Right: Moves the selected entity 4 px in the chosen direction.</li> <li>Up | Down | Left | Right + Ctrl: Moves the selected entity 16 px in the chosen direction.</li> <li>Up | Down | Left | Right + Shift: Moves the selected entity 1 px in the chosen direction.</li> <li>Del | Backspace: Deletes the selected entity.  Controls (Placement Mode):<ul></ul></li> <li>Left Click: Places an entity at the cursor's position.</li> <li>Right Click: Clears selected object and returns to Select mode. Shortcuts:<ul></ul></li> <li>E : Selects the Entity Tool as the current tool.</li> </ul> </li> <li>Select  :  Selects and moves various entities.  Controls:<ul> <li>Left Click (Drag): Selects all entities inside the select box.</li> <li>Left Click (Hold &amp; Drag on selected entity): Moves all entities using the hovered entity as an anchor.</li> <li>Up | Down | Left | Right: Moves the selected entity 4 px in the chosen direction.</li> <li>Up | Down | Left | Right + Ctrl: Moves the selected entity 16 px in the chosen direction.</li> <li>Up | Down | Left | Right + Shift: Moves the selected entity 1 px in the chosen direction.</li> <li>Del | Backspace: Deletes all selected entities. Shortcuts:<ul></ul></li> <li>W: Selects the Entity Tool as the current tool.</li> </ul> </li> </ul>"},{"location":"Intro/","title":"Introduction to RSDK","text":"<p>TODO: this</p>"},{"location":"Nexus/","title":"Sonic Nexus","text":"<p>TODO: this</p>"},{"location":"Nexus/Decompilation/","title":"RSDKv2 Decompilation","text":"<p>TODO: everything</p>"},{"location":"Nexus/Decompilation/#tutorials","title":"Tutorials","text":""},{"location":"RSDKv3/","title":"Retro Engine v3","text":"<p>Retro Engine v3, debuting in 2011, is the version of RSDK used for the Sonic CD remaster. TODO: write info about RSDKv3 and anything relating to CD</p>"},{"location":"RSDKv3/#documentation","title":"Documentation","text":"<ul> <li>Overview</li> <li>Subs</li> <li>Functions</li> </ul>"},{"location":"RSDKv3/#tools","title":"Tools","text":"<ul> <li>RetroED</li> <li>RSDK Animation Editor</li> </ul>"},{"location":"RSDKv3/#tutorials","title":"Tutorials","text":""},{"location":"RSDKv3/#other-resources","title":"Other Resources","text":""},{"location":"RSDKv3/Decompilation/","title":"RSDKv3 Decompilation","text":"<p>TODO: everything</p>"},{"location":"RSDKv3/Decompilation/#tutorials","title":"Tutorials","text":""},{"location":"RSDKv3/Subs/","title":"RSDKv3 Subs","text":"<p>RetroScript v3, the scripting language used by RSDKv3, is comprised of four main subs, along with three optional editor subs. Subs are akin to \"default functions\" of sorts, and are called by the engine every frame to achieve a specific task. To define subs, <code>sub [name]</code> is used to open one and <code>end sub</code> is used to close one.</p>"},{"location":"RSDKv3/Subs/#objectmain","title":"ObjectMain","text":"<p>Called once every frame (if priority allows) to run a general update of the object, for things like movement and animation processing.</p> Example<pre><code>sub ObjectMain\n    Object.XPos += Object.Value0\n    Object.YPos += Object.Value1\n\n    Object.AnimationTimer++\n    if Object.AnimationTimer &gt;= 8\n        Object.Frame++\n        if Object.Frame &gt;= 4\n            Object.Frame = 0\n        end if\n        Object.AnimationTimer = 0\n    end if\nend sub\n</code></pre> <p>Note</p> <p><code>ObjectMain</code> is parallel to the <code>ObjectUpdate</code> event seen in RSDKv4, though there the name was changed to match better.</p>"},{"location":"RSDKv3/Subs/#objectplayerinteraction","title":"ObjectPlayerInteraction","text":"<p>Called after <code>ObjectMain</code> for each active player to handle interactions between the object and the player(s).</p> Example<pre><code>sub ObjectPlayerInteraction\n    PlayerObjectCollision(C_TOUCH, -8, -8, 8, 8)\n    if CheckResult == true\n        Object.State = 2\n    end if\nend sub\n</code></pre>"},{"location":"RSDKv3/Subs/#objectdraw","title":"ObjectDraw","text":"<p>Called once every frame (if priority allows) to draw the object. Although some objects in Sonic CD also have movement or animation processing code in this sub, it's strongly recommended to only include drawing code. Draw order is based on the object's <code>Object.DrawOrder</code> value.</p> Example<pre><code>sub ObjectDraw\n    DrawSprite(Object.Frame)\nend sub\n</code></pre>"},{"location":"RSDKv3/Subs/#objectstartup","title":"ObjectStartup","text":"<p>Called once per object type on stage startup. Used to load spritesheets and set up SpriteFrames, apply any starting values needed for the object type, or other initialization code.</p> Example<pre><code>sub ObjectStartup\n    LoadSpriteSheet(\"Global/Items.gif\")\n\n    SpriteFrame(-8, -8, 16, 16, 1, 1)\n    SpriteFrame(-8, -8, 16, 16, 1, 18)\n    SpriteFrame(-8, -8, 16, 16, 1, 35)\n    SpriteFrame(-8, -8, 16, 16, 1, 52)\n\n    TempValue0 = 32\n    while TempValue0 &lt; 1056\n        if Object[ArrayPos0].Type == TypeName[Object]\n            Object[ArrayPos0].DrawOrder = 4\n        end if\n        TempValue0++\n    loop\nend sub\n</code></pre>"},{"location":"RSDKv3/Subs/#rsdkedit","title":"RSDKEdit","text":"<p>Called whenever modifying an object's editor variable in an editor. This sub can be excluded from your script if the object doesn't have an editor variable.</p> Example<pre><code>sub RSDKEdit\n    if Editor.ReturnVariable == true\n        switch Editor.VariableID\n        case EDIT_VAR_PROPVAL // Property Value\n            CheckResult = Object.PropertyValue\n            break\n\n        case 0 // Alignment\n            CheckResult = Object.PropertyValue\n            break\n        end switch\n    else\n        switch Editor.VariableID\n        case EDIT_VAR_PROPVAL // Property Value\n            Object.PropertyValue = Editor.VariableValue\n            break\n\n        case 0 // Alignment\n            Object.PropertyValue = Editor.VariableValue\n            break\n        end switch\n    end if\nend sub\n</code></pre>"},{"location":"RSDKv3/Subs/#rsdkdraw","title":"RSDKDraw","text":"<p>Called once every frame to draw the object in an editor.</p> Example<pre><code>sub RSDKDraw\n    DrawSprite(0)\n    if Editor.ShowGizmos == true\n        DrawSprite(1)\n    end if\nend sub\n</code></pre>"},{"location":"RSDKv3/Subs/#rsdkload","title":"RSDKLoad","text":"<p>Called once per object type when game logic is (re)loaded in an editor. Used to load spritesheets, set up SpriteFrames, and add editor variables and aliases.</p> Example<pre><code>sub RSDKLoad\n    LoadSpriteSheet(\"Global/Items.gif\")\n    SpriteFrame(-8, -8, 16, 16, 1, 1)\n    SpriteFrame(-8, -8, 16, 16, 1, 18)\n\n    AddEditorVariable(\"Alignment\")\n    SetActiveVariable(\"Alignment\")\n    AddEnumVariable(\"Left\", 0)\n    AddEnumVariable(\"Center\", 1)\n    AddEnumVariable(\"Right\", 2)\n\n    SetVariableAlias(ALIAS_VAR_VAL0, \"Width\")\nend sub\n</code></pre>"},{"location":"RSDKv3/Functions/","title":"RSDKv3 Functions","text":""},{"location":"RSDKv3/Functions/#3d","title":"3D","text":"<ul> <li>Draw3DScene</li> <li>MatrixMultiply</li> <li>MatrixRotate</li> <li>MatrixRotateXYZ</li> <li>MatrixTranslateXYZ</li> <li>ScaleMatrixXYZ</li> <li>SetIdentityMatrix</li> <li>TransformVertices</li> </ul>"},{"location":"RSDKv3/Functions/#audio","title":"Audio","text":"<ul> <li>SetMusicTrack</li> <li>PlayMusic</li> <li>StopMusic</li> <li>PauseMusic</li> <li>ResumeMusic</li> <li>PlaySfx</li> <li>PlayStageSfx</li> <li>StopSfx</li> <li>StopStageSfx</li> <li>SetSfxAttributes</li> </ul>"},{"location":"RSDKv3/Functions/#drawing","title":"Drawing","text":"<ul> <li>AddDrawListEntityRef</li> <li>ClearDrawList</li> <li>ClearScreen</li> <li>CopyPalette</li> <li>DrawRect</li> <li>DrawTintRect</li> <li>GetDrawListEntityRef</li> <li>LoadPalette</li> <li>RotatePalette</li> <li>SetActivePalette</li> <li>SetDrawListEntityRef</li> <li>SetPaletteFade</li> <li>SetScreenFade</li> </ul>"},{"location":"RSDKv3/Functions/#math","title":"Math","text":"<ul> <li>ATan2</li> <li>Cos</li> <li>Cos256</li> <li>GetBit</li> <li>Interpolate</li> <li>InterpolateXY</li> <li>Not</li> <li>Rand</li> <li>SetBit</li> <li>Sin</li> <li>Sin256</li> </ul>"},{"location":"RSDKv3/Functions/#miscellaneous","title":"Miscellaneous","text":"<ul> <li>AddMenuEntry</li> <li>CheckTouchRect</li> <li>DrawMenu</li> <li>DrawText</li> <li>EditMenuEntry</li> <li>EngineCallback</li> <li>GetTextInfo</li> <li>GetVersionNumber</li> <li>LoadOnlineMenu</li> <li>LoadTextFile</li> <li>LoadTextFont</li> <li>LoadVideo</li> <li>NextVideoFrame</li> <li>ReadSaveRAM</li> <li>SetAchievement</li> <li>SetLeaderboard</li> <li>SetupMenu</li> <li>WriteSaveRAM</li> </ul>"},{"location":"RSDKv3/Functions/#object","title":"Object","text":"<ul> <li>CreateTempObject</li> <li>ObjectTileCollision</li> <li>ObjectTileGrip</li> <li>PlayerObjectCollision</li> <li>PlayerTileCollision</li> <li>ProcessPlayerControl</li> <li>ResetObjectEntity</li> </ul>"},{"location":"RSDKv3/Functions/#sprites-animations","title":"Sprites &amp; Animations","text":"<ul> <li>DrawObjectAnimation</li> <li>DrawPlayerAnimation</li> <li>DrawSprite</li> <li>DrawSpriteFX</li> <li>DrawSpriteScreenFX</li> <li>DrawSpriteScreenXY</li> <li>DrawSpriteXY</li> <li>EditFrame</li> <li>LoadAnimation</li> <li>LoadSpriteSheet</li> <li>RemoveSpriteSheet</li> <li>SpriteFrame</li> </ul>"},{"location":"RSDKv3/Functions/#stages","title":"Stages","text":"<ul> <li>Copy16x16Tile</li> <li>Get16x16TileInfo</li> <li>GetTileLayerEntry</li> <li>LoadStage</li> <li>Set16x16TileInfo</li> <li>SetLayerDeformation</li> <li>SetTileLayerEntry</li> </ul>"},{"location":"RSDKv3/Functions/3D/Draw3DScene/","title":"Draw3DScene","text":""},{"location":"RSDKv3/Functions/3D/Draw3DScene/#description","title":"Description","text":"<p>Draws the active 3DScene data to the screen.</p>"},{"location":"RSDKv3/Functions/3D/Draw3DScene/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/3D/Draw3DScene/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/3D/Draw3DScene/#syntax","title":"Syntax","text":"<pre><code>Draw3DScene()\n</code></pre>"},{"location":"RSDKv3/Functions/3D/MatrixMultiply/","title":"MatrixMultiply","text":""},{"location":"RSDKv3/Functions/3D/MatrixMultiply/#description","title":"Description","text":"<p>Multiplies <code>MatrixA</code> by <code>MatrixB</code>.</p>"},{"location":"RSDKv3/Functions/3D/MatrixMultiply/#parameters","title":"Parameters","text":"<ul> <li><code>MatrixA</code> First factor of the multiplication.</li> <li><code>MatrixB</code> Second factor of the multiplication.</li> </ul> <p>Valid Matrices for both factors are MAT_WORLD, MAT_VIEW and MAT_TEMP.</p>"},{"location":"RSDKv3/Functions/3D/MatrixMultiply/#return-value","title":"Return Value","text":"<p>The result will be stored in <code>MatrixA</code>.</p>"},{"location":"RSDKv3/Functions/3D/MatrixMultiply/#syntax","title":"Syntax","text":"<pre><code>MatrixMultiply(mat MatrixA, mat MatrixB)\n</code></pre>"},{"location":"RSDKv3/Functions/3D/MatrixMultiply/#examples","title":"Examples","text":"<pre><code>MatrixMultiply(mat MatrixA, mat MatrixB)\n</code></pre>"},{"location":"RSDKv3/Functions/3D/MatrixRotate/","title":"MatrixRotate X/Y/Z","text":""},{"location":"RSDKv3/Functions/3D/MatrixRotate/#description","title":"Description","text":"<p>Rotates <code>Matrix</code> to <code>Angle</code> on the specified axis.</p>"},{"location":"RSDKv3/Functions/3D/MatrixRotate/#parameters","title":"Parameters","text":"<ul> <li><code>Matrix</code> The selected matrix for rotation, valid Matrices are MAT_WORLD, MAT_VIEW and MAT_TEMP.</li> <li><code>Angle</code> Angle of the rotation, values are 512-based.</li> </ul>"},{"location":"RSDKv3/Functions/3D/MatrixRotate/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/3D/MatrixRotate/#syntax","title":"Syntax","text":"<p><pre><code>MatrixRotateX(mat Matrix, int Angle)\n</code></pre> <pre><code>MatrixRotateY(mat Matrix, int Angle)\n</code></pre> <pre><code>MatrixRotateZ(mat Matrix, int Angle)\n</code></pre></p>"},{"location":"RSDKv3/Functions/3D/MatrixRotate/#examples","title":"Examples","text":"<p><pre><code>MatrixRotateX(MAT_WORLD, 43)\n</code></pre> <pre><code>MatrixRotateY(MAT_VIEW,  76)\n</code></pre> <pre><code>MatrixRotateZ(MAT_TEMP,  22)\n</code></pre></p>"},{"location":"RSDKv3/Functions/3D/MatrixRotateXYZ/","title":"MatrixRotateXYZ","text":""},{"location":"RSDKv3/Functions/3D/MatrixRotateXYZ/#description","title":"Description","text":"<p>Rotates <code>Matrix</code> to <code>AngleX</code>, <code>AngleY</code> and <code>AngleZ</code>.</p>"},{"location":"RSDKv3/Functions/3D/MatrixRotateXYZ/#parameters","title":"Parameters","text":"<ul> <li><code>Matrix</code> The selected matrix for rotation, valid Matrices are MAT_WORLD, MAT_VIEW and MAT_TEMP.</li> <li><code>AngleX</code>, <code>AngleY</code>, <code>AngleZ</code> Angle of the rotation, values are 512-based.</li> </ul>"},{"location":"RSDKv3/Functions/3D/MatrixRotateXYZ/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/3D/MatrixRotateXYZ/#syntax","title":"Syntax","text":"<pre><code>MatrixRotateXYZ(mat Matrix, int AngleX, int AngleY, int AngleZ)\n</code></pre>"},{"location":"RSDKv3/Functions/3D/MatrixRotateXYZ/#examples","title":"Examples","text":"<pre><code>MatrixRotateXYZ(MAT_WORLD, 43, 85, 29)\n</code></pre>"},{"location":"RSDKv3/Functions/3D/MatrixTranslateXYZ/","title":"MatrixTranslateXYZ","text":""},{"location":"RSDKv3/Functions/3D/MatrixTranslateXYZ/#description","title":"Description","text":"<p>Translates <code>Matrix</code> to <code>TranslateX</code>, <code>TranslateY</code> and <code>TranslateZ</code>.</p>"},{"location":"RSDKv3/Functions/3D/MatrixTranslateXYZ/#parameters","title":"Parameters","text":"<ul> <li><code>Matrix</code> The selected matrix to translate, valid Matrices are MAT_WORLD, MAT_VIEW and MAT_TEMP.</li> <li><code>TranslateX</code>, <code>TranslateY</code>, <code>TranslateZ</code> Translate value for the matrix, all shifted 8 bits (0x100 = 1.0)</li> </ul>"},{"location":"RSDKv3/Functions/3D/MatrixTranslateXYZ/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/3D/MatrixTranslateXYZ/#syntax","title":"Syntax","text":"<pre><code>MatrixTranslateXYZ(mat Matrix, int TranslateX, int TranslateY, int TranslateZ)\n</code></pre>"},{"location":"RSDKv3/Functions/3D/MatrixTranslateXYZ/#examples","title":"Examples","text":"<pre><code>MatrixTranslateXYZ(MAT_WORLD, -512, 720, TempValue0)\n</code></pre>"},{"location":"RSDKv3/Functions/3D/ScaleMatrixXYZ/","title":"MatrixScaleXYZ","text":""},{"location":"RSDKv3/Functions/3D/ScaleMatrixXYZ/#description","title":"Description","text":"<p>Scales <code>Matrix</code> to <code>ScaleX</code>, <code>ScaleY</code> and <code>ScaleZ</code>.</p>"},{"location":"RSDKv3/Functions/3D/ScaleMatrixXYZ/#parameters","title":"Parameters","text":"<ul> <li><code>Matrix</code> The selected matrix for scalling, valid Matrices are MAT_WORLD, MAT_VIEW and MAT_TEMP.</li> <li><code>ScaleX</code>, <code>ScaleY</code>, <code>ScaleZ</code> Scale value for the matrix, all shifted 8 bits (0x100 = 1.0)</li> </ul>"},{"location":"RSDKv3/Functions/3D/ScaleMatrixXYZ/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/3D/ScaleMatrixXYZ/#syntax","title":"Syntax","text":"<pre><code>MatrixScaleXYZ(mat Matrix, int ScaleX, int ScaleY, int ScaleZ)\n</code></pre>"},{"location":"RSDKv3/Functions/3D/ScaleMatrixXYZ/#examples","title":"Examples","text":"<pre><code>MatrixScaleXYZ(MAT_VIEW, 0x200, 0x1A0, 0x180)\n</code></pre>"},{"location":"RSDKv3/Functions/3D/SetIdentityMatrix/","title":"SetIdentityMatrix","text":""},{"location":"RSDKv3/Functions/3D/SetIdentityMatrix/#description","title":"Description","text":"<p>Sets the matrix of <code>MatID</code> to the identity state.</p>"},{"location":"RSDKv3/Functions/3D/SetIdentityMatrix/#parameters","title":"Parameters","text":"<ul> <li><code>MatID</code> The matrix to set the identity, valid matrices are MAT_WORLD, MAT_VIEW and MAT_TEMP.</li> </ul>"},{"location":"RSDKv3/Functions/3D/SetIdentityMatrix/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/3D/SetIdentityMatrix/#syntax","title":"Syntax","text":"<pre><code>SetIdentityMatrix(mat MatID)\n</code></pre>"},{"location":"RSDKv3/Functions/3D/SetIdentityMatrix/#examples","title":"Examples","text":"<pre><code>SetIdentityMatrix(MAT_WORLD)\n</code></pre>"},{"location":"RSDKv3/Functions/3D/TransformVertices/","title":"TransformVertices","text":""},{"location":"RSDKv3/Functions/3D/TransformVertices/#description","title":"Description","text":"<p>Transform all vertices from <code>StartIndex</code> to <code>EndIndex</code> using <code>Matrix</code>.</p>"},{"location":"RSDKv3/Functions/3D/TransformVertices/#parameters","title":"Parameters","text":"<ul> <li><code>Matrix</code> The matrix used to transform the vertices, valid matrices are MAT_WORLD, MAT_VIEW and MAT_TEMP.</li> <li><code>StartIndex</code> The start of the range of tranforming vertices.</li> <li><code>EndIndex</code> The end of the range of tranforming vertices.</li> </ul>"},{"location":"RSDKv3/Functions/3D/TransformVertices/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/3D/TransformVertices/#syntax","title":"Syntax","text":"<pre><code>TransformVertices(mat Matrix, int StartIndex, int EndIndex)\n</code></pre>"},{"location":"RSDKv3/Functions/3D/TransformVertices/#examples","title":"Examples","text":"<pre><code>TransformVertices(MAT_VIEW, 0xFFE, 0x1000)\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawObjectAnimation/","title":"DrawObjectAnimation","text":""},{"location":"RSDKv3/Functions/Animations-Sprites/DrawObjectAnimation/#description","title":"Description","text":"<p>Draws the object at it's X and Y position, based on the loaded animation file and current <code>Object.Frame</code> and <code>Object.Animation</code> values.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawObjectAnimation/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawObjectAnimation/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawObjectAnimation/#syntax","title":"Syntax","text":"<pre><code>DrawObjectAnimation()\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawObjectAnimation/#notes","title":"Notes","text":"<p>Objects that use animation files cannot use transparency, scale or rotation.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawPlayerAnimation/","title":"DrawPlayerAnimation","text":""},{"location":"RSDKv3/Functions/Animations-Sprites/DrawPlayerAnimation/#description","title":"Description","text":"<p>Draws the player at it's X and Y position, based on the loaded animation file and current <code>Player.Frame</code> and <code>Player.Animation</code> values.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawPlayerAnimation/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawPlayerAnimation/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawPlayerAnimation/#syntax","title":"Syntax","text":"<pre><code>DrawPlayerAnimation()\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawPlayerAnimation/#notes","title":"Notes","text":"<p>Player animations cannot use transparency or scale.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSprite/","title":"DrawSprite","text":""},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSprite/#description","title":"Description","text":"<p>Draws <code>Frame</code> at the object's X and Y position.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSprite/#parameters","title":"Parameters","text":"<ul> <li><code>Frame</code> The ID of the sprite to draw.</li> </ul>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSprite/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSprite/#syntax","title":"Syntax","text":"<pre><code>DrawSprite(int Frame)\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSprite/#examples","title":"Examples","text":"<pre><code>DrawSprite(0)\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteFX/","title":"DrawSpriteFX","text":""},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteFX/#description","title":"Description","text":"<p>Draws <code>Frame</code> to a specified X and Y position with visual effects.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteFX/#parameters","title":"Parameters","text":"<ul> <li><code>Frame</code> The ID of the sprite to draw.</li> <li><code>DrawFXFlag</code> The flag for the visual effect.</li> <li><code>XPos</code> The position of the sprite on the horizontal axis in world-space.</li> <li><code>YPos</code> The position of the sprite on the vertical axis in world-space.</li> </ul>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteFX/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteFX/#syntax","title":"Syntax","text":"<pre><code>DrawSpriteFX(int Frame, int DrawFXFlag, int XPos, int YPos)\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteFX/#examples","title":"Examples","text":"<pre><code>DrawSpriteFX(2, FX_FLIP, Object.Value0, Object.YPos)\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteFX/#note","title":"Note","text":"<p>The flags for visual effects are. - FX_SCALE Allows the scaling of the sprite via <code>Object.Scale</code>. - FX_ROTATE Allows the rotation of the sprite via <code>Object.Rotation</code>. - FX_ROTOZOOM Allows for rotation and scaling w/ <code>Object.Scale</code> and <code>Object.Rotation</code>. - FX_INK Allows the usage of <code>Object.InkEffect</code> to alter transparency.     the values for InkEffect are:     - 0 : INK_NONE, nothing happens     - 1 : INK_BLEND, 50% transparency     - 2 : INK_ALPHA, transparency based on <code>Object.Alpha</code> on a range of 0-255 (255 being no transparency)     - 3 : INK_ADD, additive transparency     - 4 : INK_SUB, subtractive transparency - FX_TINT Tints the sprite on a grayscale if <code>Object.InkEffect</code> is set to INK_ALPHA, otherwise it acts like FX_SCALE. (Note, there isn't an alias by default for this, it's equivalent value is 4) - FX_FLIP Flips the sprite depending of <code>Object.Direction</code>.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteScreenFX/","title":"DrawSpriteScreenFX","text":""},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteScreenFX/#description","title":"Description","text":"<p>Draws <code>Frame</code> to a specified X and Y position in the screen with visual effects.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteScreenFX/#parameters","title":"Parameters","text":"<ul> <li><code>Frame</code> The ID of the sprite to draw.</li> <li><code>DrawFXFlag</code> The flag for the visual effect.</li> <li><code>iXPos</code> The position of the sprite on the horizontal axis in screen-space.</li> <li><code>iYPos</code> The position of the sprite on the vertical axis in screen-space.</li> </ul>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteScreenFX/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteScreenFX/#syntax","title":"Syntax","text":"<pre><code>DrawSpriteScreenFX(int Frame, int DrawFXFlag, int iXPos, int iYPos)\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteScreenFX/#examples","title":"Examples","text":"<pre><code>DrawSpriteScreenFX(2, FX_FLIP, 20, 200)\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteScreenFX/#note","title":"Note","text":"<p>The flags for visual effects are. - FX_SCALE Allows the scaling of the sprite via <code>Object.Scale</code>. - FX_ROTATE Allows the rotation of the sprite via <code>Object.Rotation</code>. - FX_ROTOZOOM Allows for rotation and scaling w/ <code>Object.Scale</code> and <code>Object.Rotation</code>. - FX_INK Allows the usage of <code>Object.InkEffect</code> to alter transparency.     the values for InkEffect are:     - 0 : INK_NONE, nothing happens     - 1 : INK_BLEND, 50% transparency     - 2 : INK_ALPHA, transparency based on <code>Object.Alpha</code> on a range of 0-255 (255 being no transparency)     - 3 : INK_ADD, additive transparency     - 4 : INK_SUB, subtractive transparency - FX_TINT Tints the sprite on a grayscale if <code>Object.InkEffect</code> is set to INK_ALPHA, otherwise it acts like FX_SCALE. (Note, there isn't an alias by default for this, it's equivalent value is 4) - FX_FLIP Flips the sprite depending of <code>Object.Direction</code>.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteScreenXY/","title":"DrawSpriteScreenXY","text":""},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteScreenXY/#description","title":"Description","text":"<p>Draws <code>Frame</code> to a specified X and Y position in the screen.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteScreenXY/#parameters","title":"Parameters","text":"<ul> <li><code>Frame</code> The ID of the sprite to draw.</li> <li><code>iXPos</code> The position of the sprite on the horizontal axis in screen-space.</li> <li><code>iYPos</code> The position of the sprite on the vertical axis in screen-space.</li> </ul>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteScreenXY/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteScreenXY/#syntax","title":"Syntax","text":"<pre><code>DrawSpriteScreenXY(int Frame, int iXPos, int iYPos)\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteScreenXY/#examples","title":"Examples","text":"<pre><code>DrawSpriteScreenXY(0, 200, 15)\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteXY/","title":"DrawSpriteXY","text":""},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteXY/#description","title":"Description","text":"<p>Draws <code>Frame</code> to a specified X and Y position.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteXY/#parameters","title":"Parameters","text":"<ul> <li><code>Frame</code> The ID of the sprite to draw.</li> <li><code>XPos</code> The position of the sprite on the horizontal axis in world-space.</li> <li><code>YPos</code> The position of the sprite on the vertical axis in world-space.</li> </ul>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteXY/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteXY/#syntax","title":"Syntax","text":"<pre><code>DrawSpriteXY(int Frame, int XPos, int YPos)\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/DrawSpriteXY/#examples","title":"Examples","text":"<pre><code>DrawSpriteXY(0, Object.Value0, Object.YPos)\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/EditFrame/","title":"EditFrame","text":""},{"location":"RSDKv3/Functions/Animations-Sprites/EditFrame/#description","title":"Description","text":"<p>Edits pivots, width, height and sheet coordinates of a spriteFrame with matching <code>ID</code>.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/EditFrame/#parameters","title":"Parameters","text":"<ul> <li><code>ID</code> The ID of the spriteFrame to edit.</li> <li><code>xPivot</code> The horizontal offset of the sprite, negative values will move it to the left, while positive values will move it to the right.</li> <li><code>yPivot</code> The vertical offset of the sprite, negative values will move it upwards, and positive values downwards.</li> <li><code>Width</code> The width of the sprite.</li> <li><code>Height</code> The height of the sprite.</li> <li><code>SheetXPos</code> The position of the upper-left border of the sprite, on the X axis.</li> <li><code>SheetYPos</code> The position of the upper-left border of the sprite, on the Y axis.</li> </ul>"},{"location":"RSDKv3/Functions/Animations-Sprites/EditFrame/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/EditFrame/#syntax","title":"Syntax","text":"<pre><code>EditFrame(int ID, int xPivot, int yPivot, int Width, int Height, int SheetXPos, int SheetYPos)\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/EditFrame/#examples","title":"Examples","text":"<pre><code>EditFrame(2, -8, -8, 8, 8, 1, 35)\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/EditFrame/#notes","title":"Notes","text":"<p>This function is not available in Blit releases of Sonic CD.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/LoadAnimation/","title":"LoadAnimation","text":""},{"location":"RSDKv3/Functions/Animations-Sprites/LoadAnimation/#description","title":"Description","text":"<p>Loads an animation for the object to use.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/LoadAnimation/#parameters","title":"Parameters","text":"<ul> <li><code>Path</code> The file path to load the animation from, relative to <code>Data/Animations/</code>.</li> </ul>"},{"location":"RSDKv3/Functions/Animations-Sprites/LoadAnimation/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/LoadAnimation/#syntax","title":"Syntax","text":"<pre><code>LoadAnimation(string Path)\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/LoadAnimation/#examples","title":"Examples","text":"<pre><code>LoadAnimation(\"Tails.Ani\")\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/LoadSpriteSheet/","title":"LoadSpriteSheet","text":""},{"location":"RSDKv3/Functions/Animations-Sprites/LoadSpriteSheet/#description","title":"Description","text":"<p>Loads a GIF formatted Sprite Sheet and assigns the id to <code>Object.SpriteSheet</code>.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/LoadSpriteSheet/#parameters","title":"Parameters","text":"<ul> <li><code>Path</code> The file path to load the sprite sheet from, relative to <code>Data/Sprites/</code>.</li> </ul>"},{"location":"RSDKv3/Functions/Animations-Sprites/LoadSpriteSheet/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/LoadSpriteSheet/#syntax","title":"Syntax","text":"<pre><code>LoadSpriteSheet(\"string Path\")\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/LoadSpriteSheet/#examples","title":"Examples","text":"<pre><code>LoadSpriteSheet(\"Test/Objects.gif\")\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/LoadSpriteSheet/#note","title":"Note","text":"<p>Lite versions of CD could load PVR format.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/RemoveSpriteSheet/","title":"RemoveSpriteSheet","text":""},{"location":"RSDKv3/Functions/Animations-Sprites/RemoveSpriteSheet/#description","title":"Description","text":"<p>Removes a Sprite Sheet if it's loaded in the object.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/RemoveSpriteSheet/#parameters","title":"Parameters","text":"<ul> <li><code>Path</code> The file path to the sprite sheet to remove, relative to <code>Data/Sprites/</code>.</li> </ul>"},{"location":"RSDKv3/Functions/Animations-Sprites/RemoveSpriteSheet/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/RemoveSpriteSheet/#syntax","title":"Syntax","text":"<pre><code>RemoveSpriteSheet(\"string Path\")\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/RemoveSpriteSheet/#examples","title":"Examples","text":"<pre><code>RemoveSpriteSheet(\"Test/Objects.gif\")\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/SpriteFrame/","title":"SpriteFrame","text":""},{"location":"RSDKv3/Functions/Animations-Sprites/SpriteFrame/#description","title":"Description","text":"<p>Adds a Sprite with the specified values.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/SpriteFrame/#parameters","title":"Parameters","text":"<ul> <li><code>xPivot</code> The horizontal offset of the sprite, negative values will move it to the left, while positive values will move it to the right.</li> <li><code>yPivot</code> The vertical offset of the sprite, negative values will move it upwards, and positive values downwards.</li> <li><code>Width</code> The width of the sprite.</li> <li><code>Height</code> The height of the sprite.</li> <li><code>SheetXPos</code> The position of the upper-left border of the sprite, on the X axis.</li> <li><code>SheetYPos</code> The position of the upper-left border of the sprite, on the Y axis.</li> </ul>"},{"location":"RSDKv3/Functions/Animations-Sprites/SpriteFrame/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Animations-Sprites/SpriteFrame/#syntax","title":"Syntax","text":"<pre><code>SpriteFrame(int xPivot, int yPivot, int Width, int Height, int SheetXPos, int SheetYPos)\n</code></pre>"},{"location":"RSDKv3/Functions/Animations-Sprites/SpriteFrame/#examples","title":"Examples","text":"<pre><code>SpriteFrame(-16, -16, 32, 32, 75, 129)\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/PauseMusic/","title":"PauseMusic","text":""},{"location":"RSDKv3/Functions/Audio/PauseMusic/#description","title":"Description","text":"<p>Pauses the currently playing music track, if one is playing. The track can be resumed with <code>ResumeMusic()</code>.</p>"},{"location":"RSDKv3/Functions/Audio/PauseMusic/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Audio/PauseMusic/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Audio/PauseMusic/#syntax","title":"Syntax","text":"<pre><code>PauseMusic()\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/PauseMusic/#examples","title":"Examples","text":"<pre><code>PauseMusic()\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/PlayMusic/","title":"PlayMusic","text":""},{"location":"RSDKv3/Functions/Audio/PlayMusic/#description","title":"Description","text":"<p>Plays the music currently loaded in the given track slot.</p>"},{"location":"RSDKv3/Functions/Audio/PlayMusic/#parameters","title":"Parameters","text":"<ul> <li><code>trackID</code> The trackList slot the music is loaded in.</li> </ul>"},{"location":"RSDKv3/Functions/Audio/PlayMusic/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Audio/PlayMusic/#syntax","title":"Syntax","text":"<pre><code>PlayMusic(int trackID)\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/PlayMusic/#examples","title":"Examples","text":"<pre><code>PlayMusic(0)\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/PlaySfx/","title":"PlaySfx","text":""},{"location":"RSDKv3/Functions/Audio/PlaySfx/#description","title":"Description","text":"<p>Plays the sound effect in the given slot in the GameConfig, looping it if set to do so.</p>"},{"location":"RSDKv3/Functions/Audio/PlaySfx/#parameters","title":"Parameters","text":"<ul> <li><code>sfx</code> The slot of the sound effect in the GameConfig.</li> <li><code>loop</code> Determines whether or not the sound effect should loop.</li> </ul>"},{"location":"RSDKv3/Functions/Audio/PlaySfx/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Audio/PlaySfx/#syntax","title":"Syntax","text":"<pre><code>PlaySfx(int sfx, bool loop)\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/PlaySfx/#examples","title":"Examples","text":"<pre><code>PlaySfx(0, false)\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/PlayStageSfx/","title":"PlayStageSfx","text":""},{"location":"RSDKv3/Functions/Audio/PlayStageSfx/#description","title":"Description","text":"<p>Plays the sound effect in the given slot in the StageConfig, looping it if set to do so.</p>"},{"location":"RSDKv3/Functions/Audio/PlayStageSfx/#parameters","title":"Parameters","text":"<ul> <li><code>sfx</code> The slot of the sound effect in the StageConfig.</li> <li><code>loop</code> Determines whether or not the sound effect should loop.</li> </ul>"},{"location":"RSDKv3/Functions/Audio/PlayStageSfx/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Audio/PlayStageSfx/#syntax","title":"Syntax","text":"<pre><code>PlayStageSfx(int sfx, bool loop)\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/PlayStageSfx/#examples","title":"Examples","text":"<pre><code>PlayStageSfx(0, false)\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/ResumeMusic/","title":"ResumeMusic","text":""},{"location":"RSDKv3/Functions/Audio/ResumeMusic/#description","title":"Description","text":"<p>If a track has been paused with <code>PauseMusic()</code>, resumes playing the track.</p>"},{"location":"RSDKv3/Functions/Audio/ResumeMusic/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Audio/ResumeMusic/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Audio/ResumeMusic/#syntax","title":"Syntax","text":"<pre><code>ResumeMusic()\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/ResumeMusic/#examples","title":"Examples","text":"<pre><code>ResumeMusic()\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/SetMusicTrack/","title":"SetMusicTrack","text":""},{"location":"RSDKv3/Functions/Audio/SetMusicTrack/#description","title":"Description","text":"<p>Loads a music file in the given track slot with the given loop point. The music file must be in OGG format.</p>"},{"location":"RSDKv3/Functions/Audio/SetMusicTrack/#parameters","title":"Parameters","text":"<ul> <li><code>path</code> The file path to load the music file from, relative to <code>Data/Music/</code>.</li> <li><code>trackID</code> The trackList slot to load the music in.</li> <li><code>loopPoint</code> The track's loop point, in samples. 0 will disable looping, 1 will loop from the beginning of the track, and anything else is the sample to loop from.</li> </ul>"},{"location":"RSDKv3/Functions/Audio/SetMusicTrack/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Audio/SetMusicTrack/#syntax","title":"Syntax","text":"<pre><code>SetMusicTrack(string path, int trackID, int loopPoint)\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/SetMusicTrack/#examples","title":"Examples","text":"<pre><code>SetMusicTrack(\"Test.ogg\", 0, 1)\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/SetSfxAttributes/","title":"SetSfxAttributes","text":""},{"location":"RSDKv3/Functions/Audio/SetSfxAttributes/#description","title":"Description","text":"<p>Sets the loop count and panning of the given sound effect slot in the GameConfig to the given values. Unlike <code>PlaySfx</code> and <code>StopSfx</code>, this function does not have an equivalent for sound effects in the StageConfig.</p>"},{"location":"RSDKv3/Functions/Audio/SetSfxAttributes/#parameters","title":"Parameters","text":"<ul> <li><code>sfx</code> The slot of the sound effect in the GameConfig.</li> <li><code>loopCount</code> The number of times the sound effect should loop, if it's set to play on loop. Setting this to -1 will leave the loop count unchanged.</li> <li><code>panning</code> The panning of the sound effect. The minimum and maximum values are -100 and 100 respectively, with 0 being balanced.</li> </ul>"},{"location":"RSDKv3/Functions/Audio/SetSfxAttributes/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Audio/SetSfxAttributes/#syntax","title":"Syntax","text":"<pre><code>SetSfxAttributes(int sfx, int loopCount, int panning)\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/SetSfxAttributes/#examples","title":"Examples","text":"<pre><code>SetSfxAttributes(0, 5, -50)\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/StopMusic/","title":"StopMusic","text":""},{"location":"RSDKv3/Functions/Audio/StopMusic/#description","title":"Description","text":"<p>Stops playing the currently playing music track, if one is playing.</p>"},{"location":"RSDKv3/Functions/Audio/StopMusic/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Audio/StopMusic/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Audio/StopMusic/#syntax","title":"Syntax","text":"<pre><code>StopMusic()\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/StopMusic/#examples","title":"Examples","text":"<pre><code>StopMusic()\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/StopSfx/","title":"StopSfx","text":""},{"location":"RSDKv3/Functions/Audio/StopSfx/#description","title":"Description","text":"<p>Stops all instances of the given sound effect slot in the GameConfig playing.</p>"},{"location":"RSDKv3/Functions/Audio/StopSfx/#parameters","title":"Parameters","text":"<ul> <li><code>sfx</code> The slot of the sound effect in the GameConfig.</li> </ul>"},{"location":"RSDKv3/Functions/Audio/StopSfx/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Audio/StopSfx/#syntax","title":"Syntax","text":"<pre><code>StopSfx(int sfx)\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/StopSfx/#examples","title":"Examples","text":"<pre><code>StopSfx(0)\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/StopStageSfx/","title":"StopStageSfx","text":""},{"location":"RSDKv3/Functions/Audio/StopStageSfx/#description","title":"Description","text":"<p>Stops all instances of the given sound effect slot in the StageConfig playing.</p>"},{"location":"RSDKv3/Functions/Audio/StopStageSfx/#parameters","title":"Parameters","text":"<ul> <li><code>sfx</code> The slot of the sound effect in the StageConfig.</li> </ul>"},{"location":"RSDKv3/Functions/Audio/StopStageSfx/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Audio/StopStageSfx/#syntax","title":"Syntax","text":"<pre><code>StopStageSfx(int sfx)\n</code></pre>"},{"location":"RSDKv3/Functions/Audio/StopStageSfx/#examples","title":"Examples","text":"<pre><code>StopStageSfx(0)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/AddDrawListEntityRef/","title":"AddDrawListEntityRef","text":""},{"location":"RSDKv3/Functions/Drawing/AddDrawListEntityRef/#description","title":"Description","text":"<p>Adds <code>ObjectPos</code> to the drawList layer.</p>"},{"location":"RSDKv3/Functions/Drawing/AddDrawListEntityRef/#parameters","title":"Parameters","text":"<ul> <li><code>Layer</code> Layer of the drawList to add the reference, indices 0-7 are valid, additionally 8 is available in V5U.</li> <li><code>ObjectPos</code> The position of the object to add.</li> </ul>"},{"location":"RSDKv3/Functions/Drawing/AddDrawListEntityRef/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Drawing/AddDrawListEntityRef/#syntax","title":"Syntax","text":"<pre><code>AddDrawListEntityRef(int Layer, int ObjectPos)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/AddDrawListEntityRef/#examples","title":"Examples","text":"<pre><code>AddDrawListEntityRef(4, Object.EntityNo)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/ClearDrawList/","title":"ClearDrawList","text":""},{"location":"RSDKv3/Functions/Drawing/ClearDrawList/#description","title":"Description","text":"<p>Removes all entries in drawList <code>Layer</code>.</p>"},{"location":"RSDKv3/Functions/Drawing/ClearDrawList/#parameters","title":"Parameters","text":"<ul> <li><code>Layer</code> Layer of the drawList to clean.</li> </ul>"},{"location":"RSDKv3/Functions/Drawing/ClearDrawList/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Drawing/ClearDrawList/#syntax","title":"Syntax","text":"<pre><code>ClearDrawList(int Layer)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/ClearDrawList/#examples","title":"Examples","text":"<pre><code>ClearDrawList(3)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/ClearScreen/","title":"ClearScreen","text":""},{"location":"RSDKv3/Functions/Drawing/ClearScreen/#description","title":"Description","text":"<p>Clears all pixels on screen with <code>ClearIndex</code> color from the active palette.</p>"},{"location":"RSDKv3/Functions/Drawing/ClearScreen/#parameters","title":"Parameters","text":"<ul> <li><code>ClearIndex</code> The color that will override the pixels on the screen.</li> </ul>"},{"location":"RSDKv3/Functions/Drawing/ClearScreen/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Drawing/ClearScreen/#syntax","title":"Syntax","text":"<pre><code>ClearScreen(int ClearIndex)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/ClearScreen/#examples","title":"Examples","text":"<pre><code>ClearScreen(5)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/CopyPalette/","title":"CopyPalette","text":""},{"location":"RSDKv3/Functions/Drawing/CopyPalette/#description","title":"Description","text":"<p>Copies <code>SrcPal</code> into <code>DestPal</code>.</p>"},{"location":"RSDKv3/Functions/Drawing/CopyPalette/#parameters","title":"Parameters","text":"<ul> <li><code>SrcPal</code> The palette bank to copy, indices 0-7 are valid.</li> <li><code>DestPal</code> The palette bank to paste, indices 0-7 are valid.</li> </ul>"},{"location":"RSDKv3/Functions/Drawing/CopyPalette/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Drawing/CopyPalette/#syntax","title":"Syntax","text":"<pre><code>CopyPalette(int ScrPal, int DestPal)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/CopyPalette/#examples","title":"Examples","text":"<pre><code>CopyPalette(0, 7)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/DrawRect/","title":"DrawRect","text":""},{"location":"RSDKv3/Functions/Drawing/DrawRect/#description","title":"Description","text":"<p>Draws a rectangle to a specified X and Y position in the screen with a color based on combination of red, green, blue and transparency.</p>"},{"location":"RSDKv3/Functions/Drawing/DrawRect/#parameters","title":"Parameters","text":"<ul> <li><code>iXPos</code> The position of the rectangle on the horizontal axis in screen-space.</li> <li><code>iYPos</code> The position of the rectangle on the vertical axis in screen-space.</li> <li><code>Width</code> The width of the rectangle.</li> <li><code>Height</code> The height of the rectangle.</li> <li><code>R</code> A value range of 0-255 for the color red.</li> <li><code>G</code> A value range of 0-255 for the color green.</li> <li><code>B</code> A value range of 0-255 for the color blue.</li> <li><code>A</code> A value range of 0-255 for transparency (255 being no transparency)</li> </ul>"},{"location":"RSDKv3/Functions/Drawing/DrawRect/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Drawing/DrawRect/#syntax","title":"Syntax","text":"<pre><code>DrawTintRect(int iXPos, int iYPos, int Width, int Height, int R, int G, int B, int A)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/DrawRect/#examples","title":"Examples","text":"<pre><code>DrawRect(30, 220, 60, 20, 255, 128, 128, 255)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/DrawTintRect/","title":"DrawTintRect","text":""},{"location":"RSDKv3/Functions/Drawing/DrawTintRect/#description","title":"Description","text":"<p>Draws a tinted rectangle to a specified X and Y position in the screen.</p>"},{"location":"RSDKv3/Functions/Drawing/DrawTintRect/#parameters","title":"Parameters","text":"<ul> <li><code>iXPos</code> The position of the rectangle on the horizontal axis in screen-space.</li> <li><code>iYPos</code> The position of the rectangle on the vertical axis in screen-space.</li> <li><code>Width</code> The width of the rectangle.</li> <li><code>Height</code> The height of the rectangle.</li> </ul>"},{"location":"RSDKv3/Functions/Drawing/DrawTintRect/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Drawing/DrawTintRect/#syntax","title":"Syntax","text":"<pre><code>DrawTintRect(int iXPos, int iYPos, int Width, int Height)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/DrawTintRect/#examples","title":"Examples","text":"<pre><code>DrawTintRect(30, 220, 60, 20)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/GetDrawListEntityRef/","title":"GetDrawListEntityRef","text":""},{"location":"RSDKv3/Functions/Drawing/GetDrawListEntityRef/#description","title":"Description","text":"<p>Gets <code>ObjectPos</code> in the drawList layer and stores it in <code>Store</code>.</p>"},{"location":"RSDKv3/Functions/Drawing/GetDrawListEntityRef/#parameters","title":"Parameters","text":"<ul> <li><code>Layer</code> Layer of the drawList to add the reference, indices 0-7 are valid, additionally 8 is available in V5U.</li> <li><code>ObjectPos</code> The position of the object to add.</li> <li><code>Store</code> The variable where <code>ObjectPos</code> will be stored.</li> </ul>"},{"location":"RSDKv3/Functions/Drawing/GetDrawListEntityRef/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Drawing/GetDrawListEntityRef/#syntax","title":"Syntax","text":"<pre><code>GetDrawListEntityRef(var Store, int Layer, int ObjectPos)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/GetDrawListEntityRef/#examples","title":"Examples","text":"<pre><code>GetDrawListEntityRef(Object.Value0, 4, Object.EntityNo)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/LoadPalette/","title":"LoadPalette","text":""},{"location":"RSDKv3/Functions/Drawing/LoadPalette/#description","title":"Description","text":"<p>Loads a palette into a <code>palBank</code> starting from <code>startPalIndex</code>, with an offset of <code>startIndex</code> and reading all colors through to <code>endIndex</code>.</p>"},{"location":"RSDKv3/Functions/Drawing/LoadPalette/#parameters","title":"Parameters","text":"<ul> <li><code>Path</code> The path to the palette file, relative to <code>Data/Palettes/</code>.</li> <li><code>PalBank</code> The ID of the palette bank for the palette to load, indices 0-7 are valid.</li> <li><code>StartPalIndex</code> The starting index of the loaded palette.</li> <li><code>StartIndex</code> The starting index of the palette bank from which the loaded palette will override.</li> <li><code>EndIndex</code> The ending index of the palette bank from which the loaded palette will override.</li> </ul>"},{"location":"RSDKv3/Functions/Drawing/LoadPalette/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Drawing/LoadPalette/#syntax","title":"Syntax","text":"<pre><code>LoadPalette(\"string Path\", int PalBank, int StartPalIndex, int StartIndex, int EndIndex)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/LoadPalette/#examples","title":"Examples","text":"<pre><code>LoadPalette(\"Masterpalette.act\", 2, 16, 24, 32)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/LoadPalette/#note","title":"Note","text":"<p>HW Renderer cannot use this function.</p>"},{"location":"RSDKv3/Functions/Drawing/RotatePalette/","title":"RotatePalette","text":""},{"location":"RSDKv3/Functions/Drawing/RotatePalette/#description","title":"Description","text":"<p>Rotates all colors in <code>palBank</code> starting from <code>startIndex</code> through to <code>endIndex</code>, moving left or right depending of <code>RotDir</code>.</p>"},{"location":"RSDKv3/Functions/Drawing/RotatePalette/#parameters","title":"Parameters","text":"<ul> <li><code>PalBank</code> The ID of the palette bank for the palette to rotate, indices 0-7 are valid.</li> <li><code>StartIndex</code> The starting index of the palette bank for the rotation.</li> <li><code>EndIndex</code> The ending index of the palette bank for the rotation.</li> <li><code>RotDir</code> The direction of the rotation.</li> </ul>"},{"location":"RSDKv3/Functions/Drawing/RotatePalette/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Drawing/RotatePalette/#syntax","title":"Syntax","text":"<pre><code>RotatePalette(int PalBank, int StartIndex, int EndIndex, int RotDir)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/RotatePalette/#examples","title":"Examples","text":"<pre><code>RotatePalette(2, 16, 24, 1)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/RotatePalette/#note","title":"Note","text":"<p>HW Renderer cannot use this function.</p>"},{"location":"RSDKv3/Functions/Drawing/SetActivePalette/","title":"SetActivePalette","text":""},{"location":"RSDKv3/Functions/Drawing/SetActivePalette/#description","title":"Description","text":"<p>Sets the active palette for <code>PalBank</code> for all screen lines from <code>StartLine</code> through to <code>EndLine</code>.</p>"},{"location":"RSDKv3/Functions/Drawing/SetActivePalette/#parameters","title":"Parameters","text":"<ul> <li><code>PalBank</code> The ID of the new active palette, indices 0-7 are valid.</li> <li><code>StartLine</code> The starting screen-line for the new active palette.</li> <li><code>EndLine</code> The final screen-line for the new active palette.</li> </ul>"},{"location":"RSDKv3/Functions/Drawing/SetActivePalette/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Drawing/SetActivePalette/#syntax","title":"Syntax","text":"<pre><code>SetActivePalette(int PalBank, int StartLine, int EndLine)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/SetActivePalette/#examples","title":"Examples","text":"<pre><code>SetActivePalette(0, 76, Screen.YSize)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/SetDrawListEntityRef/","title":"SetDrawListEntityRef","text":""},{"location":"RSDKv3/Functions/Drawing/SetDrawListEntityRef/#setdrawlistentityref","title":"SetDrawListEntityRef","text":""},{"location":"RSDKv3/Functions/Drawing/SetDrawListEntityRef/#description","title":"Description","text":"<p>Sets <code>ObjectPos</code> in the drawList layer to the value of <code>NewValue</code>.</p>"},{"location":"RSDKv3/Functions/Drawing/SetDrawListEntityRef/#parameters","title":"Parameters","text":"<ul> <li><code>Layer</code> The Layer of the drawList to add the reference, indices 0-7 are valid, additionally 8 is available in V5U.</li> <li><code>ObjectPos</code> The position of the object to add.</li> <li><code>NewValue</code> The new value for <code>ObjectPos</code>.</li> </ul>"},{"location":"RSDKv3/Functions/Drawing/SetDrawListEntityRef/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Drawing/SetDrawListEntityRef/#syntax","title":"Syntax","text":"<pre><code>SetDrawListEntityRef(int NewValue, int Layer, int ObjectPos)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/SetDrawListEntityRef/#examples","title":"Examples","text":"<pre><code>SetDrawListEntityRef(Object.Value0, 4, Object.EntityNo)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/SetPaletteFade/","title":"SetPaletteFade","text":""},{"location":"RSDKv3/Functions/Drawing/SetPaletteFade/#description","title":"Description","text":"<p>Blends the currectly active palette, starting at <code>PalIndex</code> through to <code>EndIndex</code>. With a mix based on <code>R</code>, <code>G</code>, <code>B</code> by <code>BlendAmount</code>, and stores it in <code>DestPalBank</code>.</p>"},{"location":"RSDKv3/Functions/Drawing/SetPaletteFade/#parameters","title":"Parameters","text":"<ul> <li><code>DestPalBank</code> The ID of the palette for store, indices 0-7 are valid.</li> <li><code>R</code> A value range of 0-255 for the color red.</li> <li><code>G</code> A value range of 0-255 for the color green.</li> <li><code>B</code> A value range of 0-255 for the color blue.</li> <li><code>BlendAmount</code> A value range of 0-255 for blending.</li> <li><code>StartIndex</code> The starting index of the palette bank to blend.</li> <li><code>EndIndex</code> The ending index of the palette bank to blend.</li> </ul>"},{"location":"RSDKv3/Functions/Drawing/SetPaletteFade/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Drawing/SetPaletteFade/#syntax","title":"Syntax","text":"<pre><code>SetPaletteFade(int DestPalBank, int R, int G, int B, int BlendAmount, int StartIndex, int EndIndex)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/SetPaletteFade/#examples","title":"Examples","text":"<pre><code>SetPaletteFade(1, 128, 128, 128, 255, 64, 144)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/SetScreenFade/","title":"SetScreenFade","text":""},{"location":"RSDKv3/Functions/Drawing/SetScreenFade/#description","title":"Description","text":"<p>Sets the fade-out effect based on <code>R</code>, <code>G</code>, <code>B</code> and <code>Alpha</code> values.</p>"},{"location":"RSDKv3/Functions/Drawing/SetScreenFade/#parameters","title":"Parameters","text":"<ul> <li><code>R</code> A value range of 0-255 for the color red.</li> <li><code>G</code> A value range of 0-255 for the color green.</li> <li><code>B</code> A value range of 0-255 for the color blue.</li> <li><code>Alpha</code> A value range of 0-255 for transparency (255 being no transparency)</li> </ul>"},{"location":"RSDKv3/Functions/Drawing/SetScreenFade/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Drawing/SetScreenFade/#syntax","title":"Syntax","text":"<pre><code>SetScreenFade(int R, int G, int B, int Alpha)\n</code></pre>"},{"location":"RSDKv3/Functions/Drawing/SetScreenFade/#examples","title":"Examples","text":"<pre><code>SetScreenFade(255, 0, 0, object.alpha)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/ATan2/","title":"ATan2","text":""},{"location":"RSDKv3/Functions/Math/ATan2/#description","title":"Description","text":"<p>Performs an arctan operation using <code>x</code> and <code>y</code>, storing the result in <code>Store</code>.</p>"},{"location":"RSDKv3/Functions/Math/ATan2/#parameters","title":"Parameters","text":"<ul> <li><code>Store</code> The variable to store the result.</li> <li><code>x</code>, <code>y</code> The values used in the arctan operation.</li> </ul>"},{"location":"RSDKv3/Functions/Math/ATan2/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Math/ATan2/#syntax","title":"Syntax","text":"<pre><code>ATan2(var Store, int x, int y)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/ATan2/#examples","title":"Examples","text":"<pre><code>ATan2(TempValue1, Object.Value5, TempValue0)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/Cos/","title":"Cos","text":""},{"location":"RSDKv3/Functions/Math/Cos/#description","title":"Description","text":"<p>Gets the value from lookup table <code>Cos512</code> based on <code>Angle</code> and sets it in <code>Store</code>.</p>"},{"location":"RSDKv3/Functions/Math/Cos/#parameters","title":"Parameters","text":"<ul> <li><code>Store</code> The variable to store the result.</li> <li><code>Angle</code> The value of angle.</li> </ul>"},{"location":"RSDKv3/Functions/Math/Cos/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Math/Cos/#syntax","title":"Syntax","text":"<pre><code>Cos(var Store, int Angle)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/Cos/#examples","title":"Examples","text":"<pre><code>Cos(TempValue0, Object.Value2)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/Cos256/","title":"Cos256","text":""},{"location":"RSDKv3/Functions/Math/Cos256/#description","title":"Description","text":"<p>Gets the value from lookup table <code>Cos256</code> based on <code>Angle</code> and sets it in <code>Store</code>.</p>"},{"location":"RSDKv3/Functions/Math/Cos256/#parameters","title":"Parameters","text":"<ul> <li><code>Store</code> The variable to store the result.</li> <li><code>Angle</code> The value of angle.</li> </ul>"},{"location":"RSDKv3/Functions/Math/Cos256/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Math/Cos256/#syntax","title":"Syntax","text":"<pre><code>Cos256(var Store, int Angle)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/Cos256/#examples","title":"Examples","text":"<pre><code>Cos256(TempValue0, Object.Value2)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/GetBit/","title":"GetBit","text":""},{"location":"RSDKv3/Functions/Math/GetBit/#description","title":"Description","text":"<p>Gets bit at index <code>BitPos</code> from <code>Value</code> and stores it in <code>Store</code>.</p>"},{"location":"RSDKv3/Functions/Math/GetBit/#parameters","title":"Parameters","text":"<ul> <li><code>Store</code> The variable to store the bit.</li> <li><code>Value</code> The variable from where to search the required Bit.</li> <li><code>BitPos</code> The position of the bit to get, indices 0-7 are valid.</li> </ul>"},{"location":"RSDKv3/Functions/Math/GetBit/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Math/GetBit/#syntax","title":"Syntax","text":"<pre><code>GetBit(var Store, var Value, int BitPos)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/GetBit/#examples","title":"Examples","text":"<pre><code>GetBit(ArrayPos0, TempValue3, 6)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/Interpolate/","title":"Interpolate","text":""},{"location":"RSDKv3/Functions/Math/Interpolate/#description","title":"Description","text":"<p>Linearly interpolates (LERPs) <code>x</code> and <code>y</code> by <code>Percent</code> and stores the result in <code>Store</code>.</p>"},{"location":"RSDKv3/Functions/Math/Interpolate/#parameters","title":"Parameters","text":"<ul> <li><code>Store</code> The variable to store the result.</li> <li><code>x</code>,<code>y</code> The values used for the interpolation.</li> <li><code>Percent</code> Percentage of interpolation, can go from 0 to 256.</li> </ul>"},{"location":"RSDKv3/Functions/Math/Interpolate/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Math/Interpolate/#syntax","title":"Syntax","text":"<pre><code>Interpolate(var Store, int x, int y, int Percent)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/Interpolate/#examples","title":"Examples","text":"<pre><code>Interpolate(Object.Value2, 26, 29, 128)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/InterpolateXY/","title":"Interpolate","text":""},{"location":"RSDKv3/Functions/Math/InterpolateXY/#description","title":"Description","text":"<p>Linearly interpolates two points at once, <code>aX</code> with <code>aY</code>, and <code>bX</code> with <code>bY</code>. By <code>Percent</code> and stores the result in <code>StoreX</code> and <code>StoreY</code>, respectively.</p>"},{"location":"RSDKv3/Functions/Math/InterpolateXY/#parameters","title":"Parameters","text":"<ul> <li><code>StoreX</code>, <code>StoreY</code> The variables to store the results.</li> <li><code>aX</code>, <code>aY</code>, <code>bX</code>, <code>bY</code> The values used for the interpolations.</li> <li><code>Percent</code> Percentage of interpolation, can go from 0 to 256.</li> </ul>"},{"location":"RSDKv3/Functions/Math/InterpolateXY/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Math/InterpolateXY/#syntax","title":"Syntax","text":"<pre><code>InterpolateXY(var StoreX, var StoreY, int aX, int aY, int bX, int bY, int Percent)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/InterpolateXY/#examples","title":"Examples","text":"<pre><code>InterpolateXY(Object.Value2, Object.Value3, 26, 29, 33, 37, 220)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/Not/","title":"Not","text":""},{"location":"RSDKv3/Functions/Math/Not/#description","title":"Description","text":"<p>Performs a NOT operation on <code>Value</code> and updates it (<code>Value</code> = <code>~Value</code>)</p>"},{"location":"RSDKv3/Functions/Math/Not/#parameters","title":"Parameters","text":"<ul> <li><code>Value</code> The variable to negate.</li> </ul>"},{"location":"RSDKv3/Functions/Math/Not/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Math/Not/#syntax","title":"Syntax","text":"<pre><code>Not(var Value)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/Not/#examples","title":"Examples","text":"<pre><code>Not(TempValue4)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/Rand/","title":"Rand","text":""},{"location":"RSDKv3/Functions/Math/Rand/#description","title":"Description","text":"<p>Gets a random value from 0 to <code>Max</code>(not included) and stores it in <code>Store</code>.</p>"},{"location":"RSDKv3/Functions/Math/Rand/#parameters","title":"Parameters","text":"<ul> <li><code>Store</code> Variable from where to store the result.</li> <li><code>Max</code> Exclusive maximum for the random value to get.</li> </ul>"},{"location":"RSDKv3/Functions/Math/Rand/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Math/Rand/#syntax","title":"Syntax","text":"<pre><code>Rand(var Store, int Max)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/Rand/#examples","title":"Examples","text":"<pre><code>Rand(Object.Value3, 8)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/SetBit/","title":"SetBit","text":""},{"location":"RSDKv3/Functions/Math/SetBit/#description","title":"Description","text":"<p>Sets index <code>BitPos</code> of <code>Value</code> to <code>Bit</code> and updates <code>Value</code> accordingly.</p>"},{"location":"RSDKv3/Functions/Math/SetBit/#parameters","title":"Parameters","text":"<ul> <li><code>Value</code> The variable to update.</li> <li><code>BitPos</code> The position of the bit to set, indices 0-7 are valid.</li> <li><code>Bit</code> Updated boolean value.</li> </ul>"},{"location":"RSDKv3/Functions/Math/SetBit/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Math/SetBit/#syntax","title":"Syntax","text":"<pre><code>SetBit(var Value, int BitPos, bool Bit)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/SetBit/#examples","title":"Examples","text":"<pre><code>SetBit(Object.Value7, 3, 1)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/Sin/","title":"Sin","text":""},{"location":"RSDKv3/Functions/Math/Sin/#description","title":"Description","text":"<p>Gets the value from lookup table <code>Sin512</code> based on <code>Angle</code> and sets it in <code>Store</code>.</p>"},{"location":"RSDKv3/Functions/Math/Sin/#parameters","title":"Parameters","text":"<ul> <li><code>Store</code> The variable to store the result.</li> <li><code>Angle</code> The value of angle.</li> </ul>"},{"location":"RSDKv3/Functions/Math/Sin/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Math/Sin/#syntax","title":"Syntax","text":"<pre><code>Sin(var Store, int Angle)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/Sin/#examples","title":"Examples","text":"<pre><code>Sin(Object.Value3, TempValue0)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/Sin256/","title":"Sin256","text":""},{"location":"RSDKv3/Functions/Math/Sin256/#description","title":"Description","text":"<p>Gets the value from lookup table <code>Sin256</code> based on <code>Angle</code> and sets it in <code>Store</code>.</p>"},{"location":"RSDKv3/Functions/Math/Sin256/#parameters","title":"Parameters","text":"<ul> <li><code>Store</code> The variable to store the result.</li> <li><code>Angle</code> The value of angle.</li> </ul>"},{"location":"RSDKv3/Functions/Math/Sin256/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Math/Sin256/#syntax","title":"Syntax","text":"<pre><code>Sin256(var Store, int Angle)\n</code></pre>"},{"location":"RSDKv3/Functions/Math/Sin256/#examples","title":"Examples","text":"<pre><code>Sin256(Object.Value3, TempValue0)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/AddMenuEntry/","title":"AddMenuEntry","text":""},{"location":"RSDKv3/Functions/Misc/AddMenuEntry/#description","title":"Description","text":"<p>Adds an entry to <code>Menu</code> with the contents of <code>Text</code>, The text will display highlighted if <code>HighlightEntry</code> is set to true.</p>"},{"location":"RSDKv3/Functions/Misc/AddMenuEntry/#parameters","title":"Parameters","text":"<ul> <li><code>Menu</code> The menu to setup, MENU_1 or MENU_2 are valid.</li> <li><code>Text</code> New text to add in the menu.</li> <li><code>HighlightEntry</code> Boolean that determines if the text will be highlighted always.</li> </ul>"},{"location":"RSDKv3/Functions/Misc/AddMenuEntry/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Misc/AddMenuEntry/#syntax","title":"Syntax","text":"<pre><code>AddMenuEntry(int Menu, \"string Text\", bool HighlightEntry)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/AddMenuEntry/#examples","title":"Examples","text":"<pre><code>AddMenuEntry(MENU_1, \"WELCOME TO THE SECRET SPECIAL STAGE\", true)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/CheckTouchRect/","title":"CheckTouchRect","text":""},{"location":"RSDKv3/Functions/Misc/CheckTouchRect/#description","title":"Description","text":"<p>Check if there was a touch input between the inputted coordinates.</p>"},{"location":"RSDKv3/Functions/Misc/CheckTouchRect/#parameters","title":"Parameters","text":"<ul> <li><code>X1</code> Left side of the rectangle.</li> <li><code>X2</code> Right side of the rectangle.</li> <li><code>Y1</code> Top side of the rectangle.</li> <li><code>Y2</code> Bottom side of the rectangle.</li> </ul>"},{"location":"RSDKv3/Functions/Misc/CheckTouchRect/#return-value","title":"Return Value","text":"<p>Will set <code>CheckResult</code> to <code>true</code> if there was a touch press inside the rectangle.</p>"},{"location":"RSDKv3/Functions/Misc/CheckTouchRect/#syntax","title":"Syntax","text":"<pre><code>CheckTouchRect(int X1, int Y1, int X2, int Y2)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/CheckTouchRect/#examples","title":"Examples","text":"<pre><code>CheckTouchRect(0, 0, Screen.XSize, Screen.YSize)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/DrawMenu/","title":"DrawMenu","text":""},{"location":"RSDKv3/Functions/Misc/DrawMenu/#description","title":"Description","text":"<p>Draws <code>Menu</code> at <code>XPos</code> and <code>YPos</code> relative to the screen.</p>"},{"location":"RSDKv3/Functions/Misc/DrawMenu/#parameters","title":"Parameters","text":"<ul> <li><code>Menu</code> The menu to draw, MENU_1 or MENU_2 are valid.</li> <li><code>XPos</code> Position of the menu on the horizontal axis.</li> <li><code>YPos</code> Position of the menu on the vertical axis.</li> </ul>"},{"location":"RSDKv3/Functions/Misc/DrawMenu/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Misc/DrawMenu/#syntax","title":"Syntax","text":"<pre><code>DrawMenu(int Menu, int XPos, int YPos)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/DrawMenu/#examples","title":"Examples","text":"<pre><code>DrawMenu(MENU_1, Screen.CenterX, Screen.CenterY)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/DrawText/","title":"DrawText","text":""},{"location":"RSDKv3/Functions/Misc/DrawText/#description","title":"Description","text":"<p>Draws the contents of <code>RowCount</code> rows, starting from <code>RowStart</code> in <code>Menu</code> at <code>XPos</code> and <code>YPos</code> relative to the screen. Using <code>Spacing</code> pixels between them and scalling it with <code>Scale</code>.</p>"},{"location":"RSDKv3/Functions/Misc/DrawText/#parameters","title":"Parameters","text":"<ul> <li><code>Menu</code> The menu from where to read the text, MENU_1 or MENU_2 are valid.</li> <li><code>XPos</code> Position of the text on the horizontal axis.</li> <li><code>YPos</code> Position of the text on the vertical axis.</li> <li><code>Scale</code> Scale of the text.</li> <li><code>Spacing</code> Space between each letter.</li> <li><code>RowStart</code> The starting index from where to read.</li> <li><code>RowCount</code> The amount of rows to draw.</li> </ul>"},{"location":"RSDKv3/Functions/Misc/DrawText/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Misc/DrawText/#syntax","title":"Syntax","text":"<pre><code>DrawText(int Menu, int XPos, int YPos, int Scale, int Spacing, int RowStart, int RowCount)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/DrawText/#examples","title":"Examples","text":"<pre><code>DrawText(MENU_1, TempValue0, TempValue1, 192, 0, 0, 1)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/EditMenuEntry/","title":"EditMenuEntry","text":""},{"location":"RSDKv3/Functions/Misc/EditMenuEntry/#description","title":"Description","text":"<p>Edits an entry of <code>Menu</code> with the contents of <code>Text</code> in <code>RowID</code>, The text will display highlighted if <code>HighlightEntry</code> is set to true.</p>"},{"location":"RSDKv3/Functions/Misc/EditMenuEntry/#parameters","title":"Parameters","text":"<ul> <li><code>Menu</code> The menu to setup, MENU_1 or MENU_2 are valid.</li> <li><code>Text</code> New text to add in the menu.</li> <li><code>RowID</code> The row to edit.</li> <li><code>HighlightEntry</code> Boolean that determines if the text will be highlighted always.</li> </ul>"},{"location":"RSDKv3/Functions/Misc/EditMenuEntry/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Misc/EditMenuEntry/#syntax","title":"Syntax","text":"<pre><code>EditMenuEntry(int Menu, \"string Text\", bool HighlightEntry)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/EditMenuEntry/#examples","title":"Examples","text":"<pre><code>EditMenuEntry(MENU_1, \"THIS IS AN EXAMPLE\", 0, true)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/EngineCallback/","title":"EngineCallback","text":""},{"location":"RSDKv3/Functions/Misc/EngineCallback/#description","title":"Description","text":"<p>Sends a callback to the engine.</p>"},{"location":"RSDKv3/Functions/Misc/EngineCallback/#parameters","title":"Parameters","text":"<ul> <li><code>CallbackFuncID</code> The index value of the callback.</li> </ul>"},{"location":"RSDKv3/Functions/Misc/EngineCallback/#return-value","title":"Return Value","text":"<p>Normally not, but some Origins functions will return a value to <code>game.callbackResult</code>.</p>"},{"location":"RSDKv3/Functions/Misc/EngineCallback/#syntax","title":"Syntax","text":"<pre><code>EngineCallback(int CallbackFunctID)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/EngineCallback/#examples","title":"Examples","text":"<pre><code>EngineCallback(4)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/EngineCallback/#notes","title":"Notes","text":"<p>Origins functions may use <code>game.callbackParam</code> from 0 to 3 to replicate v4's <code>CallNativeFunction2/4</code> function.</p>"},{"location":"RSDKv3/Functions/Misc/GetTextInfo/","title":"GetTextInfo","text":""},{"location":"RSDKv3/Functions/Misc/GetTextInfo/#description","title":"Description","text":"<p>Gets the data of <code>Type</code> from <code>Menu</code> using <code>Index</code>, and stores it in <code>Store</code>.</p>"},{"location":"RSDKv3/Functions/Misc/GetTextInfo/#parameters","title":"Parameters","text":"<ul> <li><code>Store</code> Variable where the data will be saved.</li> <li><code>Menu</code> The menu from where to get the data, MENU_1 or MENU_2 are valid.</li> <li><code>Type</code> The type of data to read, valid values are 0(TEXTINFO_TEXTDATA), 1(TEXTINFO_TEXTSIZE) or 2(TEXTINFO_ROWCOUNT)</li> <li><code>Index</code> Index of the text row from where to get the data.</li> <li><code>Offset</code> Offset for the text at <code>Index</code>, only used if <code>Type</code> is TEXTINFO_TEXTDATA.</li> </ul>"},{"location":"RSDKv3/Functions/Misc/GetTextInfo/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Misc/GetTextInfo/#syntax","title":"Syntax","text":"<pre><code>GetTextInfo(var Store, int Menu, int Type, int Index, int Offset)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/GetTextInfo/#examples","title":"Examples","text":""},{"location":"RSDKv3/Functions/Misc/GetVersionNumber/","title":"GetVersionNumber","text":""},{"location":"RSDKv3/Functions/Misc/GetVersionNumber/#description","title":"Description","text":"<p>Adds a text entry to <code>Menu</code> with the game's version as the text, The text will display highlighted if <code>HighlightEntry</code> is set to true.</p>"},{"location":"RSDKv3/Functions/Misc/GetVersionNumber/#parameters","title":"Parameters","text":"<ul> <li><code>Menu</code> The menu to add the text to, MENU_1 or MENU_2 are valid.</li> <li><code>HighlightEntry</code> Boolean that determines if the text will be highlighted always.</li> </ul>"},{"location":"RSDKv3/Functions/Misc/GetVersionNumber/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Misc/GetVersionNumber/#syntax","title":"Syntax","text":"<pre><code>GetVersionNumber(int Menu, bool highlightEntry)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/GetVersionNumber/#examples","title":"Examples","text":"<pre><code>GetVersionNumber(MENU_2, true)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/LoadOnlineMenu/","title":"LoadOnlineMenu","text":""},{"location":"RSDKv3/Functions/Misc/LoadOnlineMenu/#description","title":"Description","text":"<p>Loads the data for the specified online menu.</p>"},{"location":"RSDKv3/Functions/Misc/LoadOnlineMenu/#parameters","title":"Parameters","text":"<ul> <li><code>MenuID</code> The ID of the called menu, valid values are 0(ONLINEMENU_ACHIEVEMENTS) and 1(ONLINEMENU_LEADERBOARDS)</li> </ul>"},{"location":"RSDKv3/Functions/Misc/LoadOnlineMenu/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Misc/LoadOnlineMenu/#syntax","title":"Syntax","text":"<pre><code>LoadOnlineMenu(int MenuID)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/LoadOnlineMenu/#examples","title":"Examples","text":"<pre><code>LoadOnlineMenu(0)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/LoadOnlineMenu/#notes","title":"Notes","text":"<p>This function is only functional on <code>Blit</code> releases of Sonic CD.</p>"},{"location":"RSDKv3/Functions/Misc/LoadTextFile/","title":"LoadTextFile","text":""},{"location":"RSDKv3/Functions/Misc/LoadTextFile/#description","title":"Description","text":"<p>Loads a <code>Menu</code> based on the file loaded from <code>FilePath</code>.</p>"},{"location":"RSDKv3/Functions/Misc/LoadTextFile/#parameters","title":"Parameters","text":"<ul> <li><code>Menu</code> The menu to which the file will load, MENU_1 or MENU_2 are valid.</li> <li><code>FilePath</code> The path to the text file.</li> </ul>"},{"location":"RSDKv3/Functions/Misc/LoadTextFile/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Misc/LoadTextFile/#syntax","title":"Syntax","text":"<pre><code>LoadTextFile(int Menu, \"string FilePath\")\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/LoadTextFile/#examples","title":"Examples","text":"<pre><code>LoadTextFile(MENU_1, \"Data/Game/Credits_Mobile.txt\")\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/LoadTextFont/","title":"LoadTextFont","text":""},{"location":"RSDKv3/Functions/Misc/LoadTextFont/#description","title":"Description","text":"<p>Loads a bitmap font from <code>FilePath</code> for use with text menus.</p>"},{"location":"RSDKv3/Functions/Misc/LoadTextFont/#parameters","title":"Parameters","text":"<ul> <li><code>FilePath</code> The path to the font.</li> </ul>"},{"location":"RSDKv3/Functions/Misc/LoadTextFont/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Misc/LoadTextFont/#syntax","title":"Syntax","text":"<pre><code>LoadTextFont(\"string FilePath\")\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/LoadTextFont/#examples","title":"Examples","text":"<pre><code>LoadTextFont(\"Data/Game/SystemText.gif\")\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/LoadVideo/","title":"LoadVideo","text":""},{"location":"RSDKv3/Functions/Misc/LoadVideo/#description","title":"Description","text":"<p>Loads a video with the name of <code>VideoName</code>.</p>"},{"location":"RSDKv3/Functions/Misc/LoadVideo/#parameters","title":"Parameters","text":"<ul> <li><code>VideoName</code> The name of the video, from path <code>Videos/</code>.</li> </ul>"},{"location":"RSDKv3/Functions/Misc/LoadVideo/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Misc/LoadVideo/#syntax","title":"Syntax","text":"<pre><code>LoadVideo(\"string VideoName\")\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/LoadVideo/#examples","title":"Examples","text":"<pre><code>LoadVideo(\"Opening\")\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/LoadVideo/#notes","title":"Notes","text":"<p>The supported video formats are .rsv and .ogv, the original mobile version uses .mp4.</p>"},{"location":"RSDKv3/Functions/Misc/NextVideoFrame/","title":"NextVideoFrame","text":""},{"location":"RSDKv3/Functions/Misc/NextVideoFrame/#description","title":"Description","text":"<p>Advances the video frame from an RSV video.</p>"},{"location":"RSDKv3/Functions/Misc/NextVideoFrame/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Misc/NextVideoFrame/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Misc/NextVideoFrame/#syntax","title":"Syntax","text":"<pre><code>NextVideoFrame()\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/ReadSaveRAM/","title":"ReadSaveRAM","text":""},{"location":"RSDKv3/Functions/Misc/ReadSaveRAM/#description","title":"Description","text":"<p>Reads the contents of the save file on disk into SaveRAM.</p>"},{"location":"RSDKv3/Functions/Misc/ReadSaveRAM/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Misc/ReadSaveRAM/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Misc/ReadSaveRAM/#syntax","title":"Syntax","text":"<pre><code>ReadSaveRAM()\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/ReadSaveRAM/#notes","title":"Notes","text":"<p>ReadSaveRAM() will overwrite any current values.</p>"},{"location":"RSDKv3/Functions/Misc/SetAchievement/","title":"SetAchievement","text":""},{"location":"RSDKv3/Functions/Misc/SetAchievement/#description","title":"Description","text":"<p>Sets the status of the achievement with index of <code>ID</code> to <code>Status</code>.</p>"},{"location":"RSDKv3/Functions/Misc/SetAchievement/#parameters","title":"Parameters","text":"<ul> <li><code>ID</code> The ID of the achievement.</li> <li><code>Status</code> New status of the achievement, valid values are 0 for locked, and 100 for unlocked.</li> </ul>"},{"location":"RSDKv3/Functions/Misc/SetAchievement/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Misc/SetAchievement/#syntax","title":"Syntax","text":"<pre><code>SetAchievement(int ID, int Status)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/SetAchievement/#examples","title":"Examples","text":"<pre><code>SetAchievement(3, 100)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/SetLeaderboard/","title":"SetLeaderboard","text":""},{"location":"RSDKv3/Functions/Misc/SetLeaderboard/#description","title":"Description","text":"<p>Sets the entry of the leaderboard with index of <code>ID</code> to <code>Result</code>.</p>"},{"location":"RSDKv3/Functions/Misc/SetLeaderboard/#parameters","title":"Parameters","text":"<ul> <li><code>ID</code> The ID of the leaderboard to edit.</li> <li><code>Result</code> The new leaderboard record.</li> </ul>"},{"location":"RSDKv3/Functions/Misc/SetLeaderboard/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Misc/SetLeaderboard/#syntax","title":"Syntax","text":"<pre><code>SetLeaderboard(int ID, int Result)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/SetLeaderboard/#examples","title":"Examples","text":"<pre><code>SetLeaderboard(TempValue0, TempValue1)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/SetupMenu/","title":"SetupMenu","text":""},{"location":"RSDKv3/Functions/Misc/SetupMenu/#description","title":"Description","text":"<p>Sets up <code>Menu</code> with <code>RowCount</code> rows, <code>SelectionCount</code> active selections and aligning to <code>Alignment</code>.</p>"},{"location":"RSDKv3/Functions/Misc/SetupMenu/#parameters","title":"Parameters","text":"<ul> <li><code>Menu</code> The menu to setup, MENU_1 or MENU_2 are valid.</li> <li><code>RowCount</code> The amount of rows the menu starts with.</li> <li><code>SelectionCount</code> Selection of highlight.</li> <li><code>Alignment</code> Alignment of the text, 0 will be to the right, 1 to the left, and 2 centered.</li> </ul>"},{"location":"RSDKv3/Functions/Misc/SetupMenu/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Misc/SetupMenu/#syntax","title":"Syntax","text":"<pre><code>SetupMenu(int Menu, int RowCount, int SelectionCount, int Alignment)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/SetupMenu/#examples","title":"Examples","text":"<pre><code>SetupMenu(MENU_1, 0, 3, 1)\n</code></pre>"},{"location":"RSDKv3/Functions/Misc/WriteSaveRAM/","title":"WriteSaveRAM","text":""},{"location":"RSDKv3/Functions/Misc/WriteSaveRAM/#description","title":"Description","text":"<p>Writes the contents of the save file on disk.</p>"},{"location":"RSDKv3/Functions/Misc/WriteSaveRAM/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Misc/WriteSaveRAM/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Misc/WriteSaveRAM/#syntax","title":"Syntax","text":"<pre><code>WriteSaveRAM()\n</code></pre>"},{"location":"RSDKv3/Functions/Object/CreateTempObject/","title":"CreateTempObject","text":""},{"location":"RSDKv3/Functions/Object/CreateTempObject/#description","title":"Description","text":"<p>Creates a temporary object specified by <code>ObjectType</code>, <code>PropertyValue</code>, <code>XPos</code> and <code>YPos</code> near the end of the object list.</p>"},{"location":"RSDKv3/Functions/Object/CreateTempObject/#parameters","title":"Parameters","text":"<ul> <li><code>ObjectType</code> The type of object that will be created.</li> <li><code>PropertyValue</code> The Property Value of the object.</li> <li><code>XPos</code> The position of the object on the horizontal axis in world-space.</li> <li><code>YPos</code> The position of the object on the vertical axis in world-space.</li> </ul>"},{"location":"RSDKv3/Functions/Object/CreateTempObject/#return-value","title":"Return Value","text":"<p><code>TempObjectPos</code> is set to the created object's <code>SlotID</code>.</p>"},{"location":"RSDKv3/Functions/Object/CreateTempObject/#syntax","title":"Syntax","text":"<pre><code>CreateTempObject(int ObjectType, int PropertyValue, int XPos, int YPos)\n</code></pre>"},{"location":"RSDKv3/Functions/Object/CreateTempObject/#examples","title":"Examples","text":"<pre><code>CreateTempObject(TypeName[Invincibility], 0, Player.XPos, Player.YPos)\n</code></pre>"},{"location":"RSDKv3/Functions/Object/CreateTempObject/#notes","title":"Notes","text":"<p>This should only be used for misc objects that aren't required for too long in the stage.</p>"},{"location":"RSDKv3/Functions/Object/ObjectTileCollision/","title":"ObjectTileCollision","text":""},{"location":"RSDKv3/Functions/Object/ObjectTileCollision/#description","title":"Description","text":"<p>Tries to collide with the foreground layer based on the position of iXPos + xOffset, iYPos + yOffset.</p>"},{"location":"RSDKv3/Functions/Object/ObjectTileCollision/#parameters","title":"Parameters","text":"<ul> <li><code>CSide</code> Determines to which side of the tile the object has to collide, it can be 0(CSIDE_FLOOR), 1(CSIDE_LWALL), 2(CSIDE_RWALL) or 3(CSIDE_ROOF)</li> <li><code>xOffset</code> Horizontal offset of the object.</li> <li><code>yOffset</code> Vertical offset of the object.</li> <li><code>cPlane</code> Collision plane to take into account.</li> </ul>"},{"location":"RSDKv3/Functions/Object/ObjectTileCollision/#return-value","title":"Return Value","text":"<p>Sets CheckResult to true if there was collision, false otherwise.</p>"},{"location":"RSDKv3/Functions/Object/ObjectTileCollision/#syntax","title":"Syntax","text":"<pre><code>ObjectTileCollision(int CSide, int xOffset, int yOffset, int cPlane)\n</code></pre>"},{"location":"RSDKv3/Functions/Object/ObjectTileCollision/#examples","title":"Examples","text":"<pre><code>ObjectTileCollision(1, -15, -4, 0)\n</code></pre>"},{"location":"RSDKv3/Functions/Object/ObjectTileCollision/#notes","title":"Notes","text":"<p>This function is best used to check if a tile is there, not to move along it.</p>"},{"location":"RSDKv3/Functions/Object/ObjectTileGrip/","title":"ObjectTileGrip","text":""},{"location":"RSDKv3/Functions/Object/ObjectTileGrip/#description","title":"Description","text":"<p>Tries to collide with the foreground layer based on the position of iXPos + xOffset, iYPos + yOffset.</p>"},{"location":"RSDKv3/Functions/Object/ObjectTileGrip/#parameters","title":"Parameters","text":"<ul> <li><code>CSide</code> Determines to which side of the tile the object has to collide, it can be 0(CSIDE_FLOOR), 1(CSIDE_LWALL), 2(CSIDE_RWALL) or 3(CSIDE_ROOF)</li> <li><code>xOffset</code> Horizontal offset of the object.</li> <li><code>yOffset</code> Vertical offset of the object.</li> <li><code>cPlane</code> Collision plane to take into account.</li> </ul>"},{"location":"RSDKv3/Functions/Object/ObjectTileGrip/#return-value","title":"Return Value","text":"<p>Sets CheckResult to true if there was collision, false otherwise.</p>"},{"location":"RSDKv3/Functions/Object/ObjectTileGrip/#syntax","title":"Syntax","text":"<pre><code>ObjectTileGrip(int CSide, int xOffset, int yOffset, int cPlane)\n</code></pre>"},{"location":"RSDKv3/Functions/Object/ObjectTileGrip/#examples","title":"Examples","text":"<pre><code>ObjectTileGrip(2, 8, -12, 0)\n</code></pre>"},{"location":"RSDKv3/Functions/Object/ObjectTileGrip/#notes","title":"Notes","text":"<p>This function is best used to handle moving along surfaces.</p>"},{"location":"RSDKv3/Functions/Object/PlayerObjectCollision/","title":"PlayerObjectCollision","text":""},{"location":"RSDKv3/Functions/Object/PlayerObjectCollision/#description","title":"Description","text":"<p>Checks for collision of the player with an object, using the <code>HitBox</code> values passed.</p>"},{"location":"RSDKv3/Functions/Object/PlayerObjectCollision/#parameters","title":"Parameters","text":"<ul> <li><code>CollisionType</code> Type of collision with the object, can be C_TOUCH, C_BOX, C_BOX2 or C_PLATFORM.</li> <li><code>LeftHitbox</code> / <code>TopHitbox</code> / <code>RightHitbox</code> / <code>BottomHitbox</code> The values of the object's hitbox.</li> </ul>"},{"location":"RSDKv3/Functions/Object/PlayerObjectCollision/#return-value","title":"Return Value","text":"<p>If there wasn't any collision, <code>CheckResult</code> will be <code>false</code>. Depending of <code>CollisionType</code> used: - C_TOUCH : <code>CheckResult</code> will return <code>true</code> with any type of collision - C_BOX/C_BOX2 : <code>CheckResult</code> will return values 1(Floor), 2(LWall), 3(RWall) or 4(Roof) depending of which side of the object collided - C_PLATFORM: <code>CheckResult</code> will only be <code>true</code> if the top of the object was collided</p>"},{"location":"RSDKv3/Functions/Object/PlayerObjectCollision/#syntax","title":"Syntax","text":"<pre><code>PlayerObjectCollision(int CollisionType, int LeftHitbox, int TopHitbox, int RightHitbox, int BottomHitbox)\n</code></pre>"},{"location":"RSDKv3/Functions/Object/PlayerObjectCollision/#examples","title":"Examples","text":"<pre><code>PlayerObjectCollision(C_PLATFORM, -24, -8, 24, 8)\n</code></pre>"},{"location":"RSDKv3/Functions/Object/PlayerTileCollision/","title":"PlayerTileCollision","text":""},{"location":"RSDKv3/Functions/Object/PlayerTileCollision/#description","title":"Description","text":"<p>Handles tile collision of player.</p>"},{"location":"RSDKv3/Functions/Object/PlayerTileCollision/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Object/PlayerTileCollision/#return-value","title":"Return Value","text":"<ul> <li>Handles movement, both on ground and on air.</li> <li>Will return CMODE_FLOOR, CMODE_LWALL, CMODE_RWALL or CMODE_ROOF depending of the player's angle to <code>Player.CollisionMode</code>, along with updating <code>Player.Angle</code> based on the current tile stepped.</li> <li>It handles <code>Player.Speed</code>, along with <code>Player.XVelocity</code> and <code>Player.YVelocity</code>.</li> <li>Determines if the character is <code>flailing</code>, <code>pushing</code> or is now in the air.</li> </ul>"},{"location":"RSDKv3/Functions/Object/PlayerTileCollision/#syntax","title":"Syntax","text":"<pre><code>PlayerTileCollision()\n</code></pre>"},{"location":"RSDKv3/Functions/Object/ProcessPlayerControl/","title":"ProcessPlayerControl","text":""},{"location":"RSDKv3/Functions/Object/ProcessPlayerControl/#description","title":"Description","text":"<p>Handles control inputs.</p>"},{"location":"RSDKv3/Functions/Object/ProcessPlayerControl/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Object/ProcessPlayerControl/#return-value","title":"Return Value","text":"<p>Sets the value for Player.Up, Player.Down, Player.Left and Player.Right to true if their equivalent <code>KeyPress</code>/<code>KeyDown</code> is pressed. And Player.JumpPress or Player.JumpHold to true if ButtonA/ButtonB/ButtonC are pressed/held, the next frame will return to false if not pressed.</p>"},{"location":"RSDKv3/Functions/Object/ProcessPlayerControl/#syntax","title":"Syntax","text":"<pre><code>ProcessPlayerControl()\n</code></pre>"},{"location":"RSDKv3/Functions/Object/ResetObjectEntity/","title":"ResetObjectEntity","text":""},{"location":"RSDKv3/Functions/Object/ResetObjectEntity/#description","title":"Description","text":"<p>Resets an object in the <code>ObjectSlot</code> position to the <code>ObjectType</code>, <code>PropertyValue</code>, <code>XPos</code> and <code>YPos</code> specified.</p>"},{"location":"RSDKv3/Functions/Object/ResetObjectEntity/#parameters","title":"Parameters","text":"<ul> <li><code>ObjectSlot</code> The position of the object to reset.</li> <li><code>ObjectType</code> The updated type of object.</li> <li><code>PropertyValue</code> The new Property Value of the object.</li> <li><code>XPos</code> The new position of the object on the horizontal axis in world-space.</li> <li><code>YPos</code> The new position of the object on the vertical axis in world-space.</li> </ul>"},{"location":"RSDKv3/Functions/Object/ResetObjectEntity/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Object/ResetObjectEntity/#syntax","title":"Syntax","text":"<pre><code>ResetObjectEntity(int ObjectSlot, int ObjectType, int PropertyValue, int XPos, int YPos)\n</code></pre>"},{"location":"RSDKv3/Functions/Object/ResetObjectEntity/#examples","title":"Examples","text":"<pre><code>ResetObjectEntity(Object.EntityNo, TypeName[Flower], 0, Object.XPos, Object.YPos)\n</code></pre>"},{"location":"RSDKv3/Functions/Stage/Copy16x16Tile/","title":"Copy16x16Tile","text":""},{"location":"RSDKv3/Functions/Stage/Copy16x16Tile/#description","title":"Description","text":"<p>Copies the tileset image data of <code>SourceTile</code> into <code>DestTile</code>.</p>"},{"location":"RSDKv3/Functions/Stage/Copy16x16Tile/#parameters","title":"Parameters","text":"<ul> <li><code>DestTile</code> The tile that will be overwritten.</li> <li><code>SourceTile</code> The tile that will be copied.</li> </ul>"},{"location":"RSDKv3/Functions/Stage/Copy16x16Tile/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Stage/Copy16x16Tile/#syntax","title":"Syntax","text":"<pre><code>Copy16x16Tile(int DestTile, int SourceTile)\n</code></pre>"},{"location":"RSDKv3/Functions/Stage/Copy16x16Tile/#examples","title":"Examples","text":"<pre><code>Copy16x16Tile(174, 173)\n</code></pre>"},{"location":"RSDKv3/Functions/Stage/Copy16x16Tile/#notes","title":"Notes","text":"<p>Used for animated tiles.</p>"},{"location":"RSDKv3/Functions/Stage/Get16x16TileInfo/","title":"Get16x16TileInfo","text":""},{"location":"RSDKv3/Functions/Stage/Get16x16TileInfo/#description","title":"Description","text":"<p>Gets the info of <code>InfoTile</code> from a tile at <code>TileX</code>, <code>TileY</code>. And stores it in <code>ChunkStore</code>.</p>"},{"location":"RSDKv3/Functions/Stage/Get16x16TileInfo/#parameters","title":"Parameters","text":"<ul> <li><code>ChunkStore</code> The variable that will store the tile's specified <code>InfoType</code> data.</li> <li><code>TileX</code> Position of the 16x16 tile in the map on the horizontal axis.</li> <li><code>TileY</code> Position of the 16x16 tile in the map on the vertical axis.</li> <li><code>InfoType</code> The ID for the type of info read from the tile, valid values are:     0 - TILEINFO_INDEX     1 - TILEINFO_DIRECTION     2 - TILEINFO_VISUALPLANE     3 - TILEINFO_SOLIDITYA     4 - TILEINFO_SOLIDITYB     5 - TILEINFO_FLAGSA     6 - TILEINFO_ANGLEA     7 - TILEINFO_FLAGSB     8 - TILEINFO_ANGLEB</li> </ul>"},{"location":"RSDKv3/Functions/Stage/Get16x16TileInfo/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Stage/Get16x16TileInfo/#syntax","title":"Syntax","text":"<pre><code>Get16x16TileInfo(var ChunkStore, int TileX, int TileY, int InfoType)\n</code></pre>"},{"location":"RSDKv3/Functions/Stage/Get16x16TileInfo/#examples","title":"Examples","text":"<pre><code>Get16x16TileInfo(Object.Value2, 25, 24, 8)\n</code></pre>"},{"location":"RSDKv3/Functions/Stage/GetTileLayerEntry/","title":"GetTileLayerEntry","text":""},{"location":"RSDKv3/Functions/Stage/GetTileLayerEntry/#description","title":"Description","text":"<p>Gets the ChunkID of the chunk at <code>ChunkX</code>, <code>ChunkY</code> on tilelayer <code>Layer</code>. And stores it in <code>ChunkStore</code>.</p>"},{"location":"RSDKv3/Functions/Stage/GetTileLayerEntry/#parameters","title":"Parameters","text":"<ul> <li><code>ChunkStore</code> The variable that will store the chunk.</li> <li><code>Layer</code> The ID of the layer where the chunk comes from, valid values are:     0(DEFORM_FG)     1(DEFORM_FG_WATER)     2(DEFORM_BG)     3(DEFORM_BG_WATER)</li> <li><code>ChunkX</code> Position of the 128x128 chunk in the map on the horizontal axis.</li> <li><code>ChunkY</code> Position of the 128x128 chunk in the map on the vertical axis.</li> </ul>"},{"location":"RSDKv3/Functions/Stage/GetTileLayerEntry/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Stage/GetTileLayerEntry/#syntax","title":"Syntax","text":"<pre><code>GetTileLayerEntry(var ChunkStore, int Layer, int ChunkX, int ChunkY)\n</code></pre>"},{"location":"RSDKv3/Functions/Stage/GetTileLayerEntry/#examples","title":"Examples","text":"<pre><code>GetTileLayerEntry(Object.Value2, 0, 24, 96)\n</code></pre>"},{"location":"RSDKv3/Functions/Stage/LoadStage/","title":"LoadStage","text":""},{"location":"RSDKv3/Functions/Stage/LoadStage/#description","title":"Description","text":"<p>Loads a stage based on <code>Stage.ListPos</code> and <code>Stage.ActiveList</code>.</p>"},{"location":"RSDKv3/Functions/Stage/LoadStage/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Stage/LoadStage/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Stage/LoadStage/#syntax","title":"Syntax","text":"<pre><code>LoadStage()\n</code></pre>"},{"location":"RSDKv3/Functions/Stage/Set16x16TileInfo/","title":"Set16x16TileInfo","text":""},{"location":"RSDKv3/Functions/Stage/Set16x16TileInfo/#description","title":"Description","text":"<p>Sets the info for <code>InfoTile</code> from a tile at <code>TileX</code>, <code>TileY</code> to the new <code>Value</code>.</p>"},{"location":"RSDKv3/Functions/Stage/Set16x16TileInfo/#parameters","title":"Parameters","text":"<ul> <li><code>Value</code> The new value for the tile's specified <code>InfoType</code>.</li> <li><code>TileX</code> Position of the 16x16 tile in the map on the horizontal axis.</li> <li><code>TileY</code> Position of the 16x16 tile in the map on the vertical axis.</li> <li><code>InfoType</code> The ID for the type of info that will be overwritten from the tile, valid values are:     0 - TILEINFO_INDEX     1 - TILEINFO_DIRECTION     2 - TILEINFO_VISUALPLANE     3 - TILEINFO_SOLIDITYA     4 - TILEINFO_SOLIDITYB     5 - TILEINFO_FLAGSA     6 - TILEINFO_ANGLEA     7 - TILEINFO_FLAGSB     8 - TILEINFO_ANGLEB</li> </ul>"},{"location":"RSDKv3/Functions/Stage/Set16x16TileInfo/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Stage/Set16x16TileInfo/#syntax","title":"Syntax","text":"<pre><code>Set16x16TileInfo(int Value, int TileX, int TileY, int InfoType)\n</code></pre>"},{"location":"RSDKv3/Functions/Stage/Set16x16TileInfo/#examples","title":"Examples","text":"<pre><code>Set16x16TileInfo(3, TempValue0, TempValue1, 7)\n</code></pre>"},{"location":"RSDKv3/Functions/Stage/SetLayerDeformation/","title":"SetLayerDeformation","text":""},{"location":"RSDKv3/Functions/Stage/SetLayerDeformation/#description","title":"Description","text":"<p>Sets the deformation data array of <code>DeformID</code>, based on the <code>DeformA</code> and <code>DeformB</code> values.</p>"},{"location":"RSDKv3/Functions/Stage/SetLayerDeformation/#parameters","title":"Parameters","text":"<ul> <li><code>DeformID</code> The ID of the layer to deform, valid values are:     0(DEFORM_FG)     1(DEFORM_FG_WATER)     2(DEFORM_BG)     3(DEFORM_BG_WATER)</li> <li><code>WaveLength</code> Length of the wave.</li> <li><code>WaveWidth</code> Width of the wave.</li> <li><code>WaveType</code> Type of wave: 0 will affect the entire layer, 1 will use <code>YPos</code> and <code>WaveSize</code> to determine the area of effect.</li> <li><code>YPos</code> The offset from where the wave will start.</li> <li><code>WaveSize</code> The size of the wave.</li> </ul>"},{"location":"RSDKv3/Functions/Stage/SetLayerDeformation/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Stage/SetLayerDeformation/#syntax","title":"Syntax","text":"<pre><code>SetLayerDeformation(int DeformID, int WaveLength, int WaveWidth, int WaveType, int YPos, int WaveSize)\n</code></pre>"},{"location":"RSDKv3/Functions/Stage/SetLayerDeformation/#examples","title":"Examples","text":"<pre><code>SetLayerDeformation(0, 16, 2, 1, 96, 128)\n</code></pre>"},{"location":"RSDKv3/Functions/Stage/SetTileLayerEntry/","title":"SetTileLayerEntry","text":""},{"location":"RSDKv3/Functions/Stage/SetTileLayerEntry/#description","title":"Description","text":"<p>Sets the Chunk at <code>ChunkX</code>, <code>ChunkY</code> on tilelayer <code>Layer</code> to the index of <code>Value</code>.</p>"},{"location":"RSDKv3/Functions/Stage/SetTileLayerEntry/#parameters","title":"Parameters","text":"<ul> <li><code>Value</code> The index value of the new chunk.</li> <li><code>Layer</code> The ID of the layer where the chunk comes from, valid values are:     0(DEFORM_FG)     1(DEFORM_FG_WATER)     2(DEFORM_BG)     3(DEFORM_BG_WATER)</li> <li><code>ChunkX</code> Position of the 128x128 chunk in the map on the horizontal axis.</li> <li><code>ChunkY</code> Position of the 128x128 chunk in the map on the vertical axis.</li> </ul>"},{"location":"RSDKv3/Functions/Stage/SetTileLayerEntry/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv3/Functions/Stage/SetTileLayerEntry/#syntax","title":"Syntax","text":"<pre><code>SetTileLayerEntry(int Value, int Layer, int ChunkX, int ChunkY)\n</code></pre>"},{"location":"RSDKv3/Functions/Stage/SetTileLayerEntry/#examples","title":"Examples","text":"<pre><code>SetTileLayerEntry(35, 0, 24, 96)\n</code></pre>"},{"location":"RSDKv3/Overview/","title":"RSDKv3 Overview","text":"<p>TODO: this</p>"},{"location":"RSDKv4/","title":"Retro Engine v4","text":"<p>Retro Engine v4, debuting in 2013, is the version of RSDK used for the Sonic 1 and Sonic 2 remasters. TODO: write info about RSDKv4 and anything relating to S1/S2</p>"},{"location":"RSDKv4/#documentation","title":"Documentation","text":"<ul> <li>Overview</li> <li>Events</li> <li>Functions</li> </ul>"},{"location":"RSDKv4/#tools","title":"Tools","text":"<ul> <li>RetroED</li> <li>RSDK Animation Editor</li> </ul>"},{"location":"RSDKv4/#tutorials","title":"Tutorials","text":"<ul> <li>TODO: yo m</li> </ul>"},{"location":"RSDKv4/#other-resources","title":"Other Resources","text":""},{"location":"RSDKv4/Decompilation/","title":"RSDKv4 Decompilation","text":"<p>TODO: everything</p>"},{"location":"RSDKv4/Decompilation/#tutorials","title":"Tutorials","text":""},{"location":"RSDKv4/Events/","title":"RSDKv4 Events","text":"<p>RetroScript v4, the scripting language used by RSDKv4, is comprised of three main events, along with three optional editor events. Events are akin to \"default functions\" of sorts, and are called by the engine every frame to achieve a specific task. To define events, <code>event [name]</code> is used to open one and <code>end event</code> is used to close one.</p>"},{"location":"RSDKv4/Events/#objectupdate","title":"ObjectUpdate","text":"<p>Called once every frame (if priority allows) to run a general update of the object, for things like movement and animation processing.</p> Example<pre><code>event ObjectUpdate\n    object.xpos += object.xvel\n    object.ypos += object.yvel\n\n    object.animationTimer++\n    if object.animationTimer &gt;= 8\n        object.frame++\n        if object.frame &gt;= 4\n            object.frame = 0\n        end if\n        object.animationTimer = 0\n    end if\nend event\n</code></pre> <p>Note</p> <p><code>ObjectUpdate</code> is parallel to the <code>ObjectMain</code> sub seen in RSDKv3 and earlier, though here the name was changed to match better.</p>"},{"location":"RSDKv4/Events/#objectdraw","title":"ObjectDraw","text":"<p>Called once every frame (if priority allows) to draw the object. Although some objects in Sonic 1 and 2 also have movement or animation processing code in this event, it's strongly recommended to only include drawing code. Draw order is based on the object's <code>object.drawOrder</code> value.</p> Example<pre><code>event ObjectDraw\n    DrawSprite(object.frame)\nend event\n</code></pre>"},{"location":"RSDKv4/Events/#objectstartup","title":"ObjectStartup","text":"<p>Called once per object type on stage startup. Used to load spritesheets and set up SpriteFrames, apply any starting values needed for the object type, or other initialization code.</p> Example<pre><code>event ObjectStartup\n    LoadSpriteSheet(\"Global/Items.gif\")\n\n    SpriteFrame(-8, -8, 16, 16, 1, 1)\n    SpriteFrame(-8, -8, 16, 16, 1, 18)\n    SpriteFrame(-8, -8, 16, 16, 1, 35)\n    SpriteFrame(-8, -8, 16, 16, 1, 52)\n\n    foreach (TypeName[Object], arrayPos0, ALL_ENTITIES)\n        object[arrayPos0].drawOrder = 4\n    next\nend event\n</code></pre>"},{"location":"RSDKv4/Events/#rsdkedit","title":"RSDKEdit","text":"<p>Called whenever modifying an object's editor variable in an editor. This event can be excluded from your script if the object doesn't have an editor variable.</p> Example<pre><code>event RSDKEdit\n    if editor.returnVariable == true\n        switch editor.variableID\n        case EDIT_VAR_PROPVAL // property value\n            checkResult = object.propertyValue\n            break\n\n        case 0 // alignment\n            checkResult = object.propertyValue\n            break\n        end switch\n    else\n        switch editor.variableID\n        case EDIT_VAR_PROPVAL // property value\n            object.propertyValue = editor.variableValue\n            break\n\n        case 0 // alignment\n            object.propertyValue = editor.variableValue\n            break\n        end switch\n    end if\nend event\n</code></pre>"},{"location":"RSDKv4/Events/#rsdkdraw","title":"RSDKDraw","text":"<p>Called once every frame to draw the object in an editor.</p> Example<pre><code>event RSDKDraw\n    DrawSprite(0)\n    if editor.showGizmos == true\n        DrawSprite(1)\n    end if\nend event\n</code></pre>"},{"location":"RSDKv4/Events/#rsdkload","title":"RSDKLoad","text":"<p>Called once per object type when game logic is (re)loaded in an editor. Used to load spritesheets, set up SpriteFrames, and add editor variables and aliases.</p> Example<pre><code>event RSDKLoad\n    LoadSpriteSheet(\"Global/Items.gif\")\n    SpriteFrame(-8, -8, 16, 16, 1, 1)\n    SpriteFrame(-8, -8, 16, 16, 1, 18)\n\n    AddEditorVariable(\"alignment\")\n    SetActiveVariable(\"alignment\")\n    AddEnumVariable(\"Left\", 0)\n    AddEnumVariable(\"Center\", 1)\n    AddEnumVariable(\"Right\", 2)\n\n    SetVariableAlias(ALIAS_VAR_VAL0, \"width\")\nend event\n</code></pre>"},{"location":"RSDKv4/Functions/","title":"RSDKv4 Functions","text":""},{"location":"RSDKv4/Functions/#3d","title":"3D","text":"<ul> <li>Draw3DScene</li> <li>InverseMatrix</li> <li>MatrixMultiply</li> <li>MatrixRotate</li> <li>MatrixRotateXYZ</li> <li>MatrixTranslateXYZ</li> <li>ScaleMatrixXYZ</li> <li>SetIdentityMatrix</li> <li>TransformVertices</li> </ul>"},{"location":"RSDKv4/Functions/#audio","title":"Audio","text":"<ul> <li>SetMusicTrack</li> <li>PlayMusic</li> <li>StopMusic</li> <li>PauseMusic</li> <li>ResumeMusic</li> <li>SwapMusicTrack</li> <li>PlaySfx</li> <li>StopSfx</li> <li>SetSfxAttributes</li> </ul>"},{"location":"RSDKv4/Functions/#deprecated","title":"Deprecated","text":"<ul> <li>DrawText</li> <li>LoadTextFont</li> </ul>"},{"location":"RSDKv4/Functions/#sprites-animations","title":"Sprites &amp; Animations","text":"<ul> <li>DrawObjectAnimation</li> <li>DrawSprite</li> <li>DrawSpriteFX</li> <li>DrawSpriteScreenFX</li> <li>DrawSpriteScreenXY</li> <li>DrawSpriteXY</li> <li>EditFrame</li> <li>LoadAnimation</li> <li>LoadSpriteSheet</li> <li>ProcessAnimation</li> <li>RemoveSpriteSheet</li> <li>SpriteFrame</li> </ul>"},{"location":"RSDKv4/Functions/#math","title":"Math","text":"<ul> <li>Abs</li> <li>ATan2</li> <li>Cos</li> <li>Cos256</li> <li>GetBit</li> <li>GetTableValue</li> <li>Interpolate</li> <li>InterpolateXY</li> <li>Not</li> <li>Rand</li> <li>SetBit</li> <li>SetTableValue</li> <li>Sin</li> <li>Sin256</li> </ul>"},{"location":"RSDKv4/Functions/#miscellaneous","title":"Miscellaneous","text":"<ul> <li>AddMenuEntry</li> <li>CallNativeFunction</li> <li>CheckTouchRect</li> <li>DrawMenu</li> <li>EditMenuEntry</li> <li>GetTextInfo</li> <li>GetVersionNumber</li> <li>LoadTextFile</li> <li>Print</li> <li>ReadSaveRAM</li> <li>SetupMenu</li> <li>WriteSaveRAM</li> </ul>"},{"location":"RSDKv4/Functions/#object","title":"Object","text":"<ul> <li>BoxCollisionTest</li> <li>CopyObject</li> <li>CreateTempObject</li> <li>GetObjectValue</li> <li>ObjectTileCollision</li> <li>ObjectTileGrip</li> <li>ProcessObjectControl</li> <li>ProcessObjectMovement</li> <li>ResetObjectEntity</li> <li>SetObjectRange</li> <li>SetObjectValue</li> </ul>"},{"location":"RSDKv4/Functions/#stages","title":"Stages","text":"<ul> <li>CheckCurrentStageFolder</li> <li>Copy16x16Tile</li> <li>Get16x16TileInfo</li> <li>GetTileLayerEntry</li> <li>LoadStage</li> <li>Set16x16TileInfo</li> <li>SetLayerDeformation</li> <li>SetTileLayerEntry</li> </ul>"},{"location":"RSDKv4/Functions/3D/Draw3DScene/","title":"Draw3DScene","text":""},{"location":"RSDKv4/Functions/3D/Draw3DScene/#description","title":"Description","text":"<p>Draws the active 3DScene data to the screen.</p>"},{"location":"RSDKv4/Functions/3D/Draw3DScene/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/3D/Draw3DScene/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/3D/Draw3DScene/#syntax","title":"Syntax","text":"<pre><code>Draw3DScene()\n</code></pre>"},{"location":"RSDKv4/Functions/3D/InverseMatrix/","title":"InverseMatrix","text":""},{"location":"RSDKv4/Functions/3D/InverseMatrix/#description","title":"Description","text":"<p>Performs an inversion on matrix's values.</p>"},{"location":"RSDKv4/Functions/3D/InverseMatrix/#parameters","title":"Parameters","text":"<ul> <li><code>matrix</code> The matrix to invert, valid matrices are MAT_WORLD, MAT_VIEW and MAT_TEMP.</li> </ul>"},{"location":"RSDKv4/Functions/3D/InverseMatrix/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/3D/InverseMatrix/#syntax","title":"Syntax","text":"<pre><code>MatrixInverse(int matrix)\n</code></pre>"},{"location":"RSDKv4/Functions/3D/InverseMatrix/#examples","title":"Examples","text":"<pre><code>MatrixInverse(MAT_WORLD)\n</code></pre>"},{"location":"RSDKv4/Functions/3D/MatrixMultiply/","title":"MatrixMultiply","text":""},{"location":"RSDKv4/Functions/3D/MatrixMultiply/#description","title":"Description","text":"<p>Multiplies <code>matrixA</code> by <code>matrixB</code>.</p>"},{"location":"RSDKv4/Functions/3D/MatrixMultiply/#parameters","title":"Parameters","text":"<ul> <li><code>matrixA</code> First factor of the multiplication.</li> <li><code>matrixB</code> Second factor of the multiplication.</li> </ul> <p>Valid Matrices for both factors are MAT_WORLD, MAT_VIEW and MAT_TEMP.</p>"},{"location":"RSDKv4/Functions/3D/MatrixMultiply/#return-value","title":"Return Value","text":"<p>The result will be stored in <code>matrixA</code>.</p>"},{"location":"RSDKv4/Functions/3D/MatrixMultiply/#syntax","title":"Syntax","text":"<pre><code>MatrixMultiply(mat matrixA, mat matrixB)\n</code></pre>"},{"location":"RSDKv4/Functions/3D/MatrixMultiply/#examples","title":"Examples","text":"<pre><code>MatrixMultiply(mat matrixA, mat matrixB)\n</code></pre>"},{"location":"RSDKv4/Functions/3D/MatrixRotate/","title":"MatrixRotate X/Y/Z","text":""},{"location":"RSDKv4/Functions/3D/MatrixRotate/#description","title":"Description","text":"<p>Rotates <code>matrix</code> to <code>angle</code> on the specified axis.</p>"},{"location":"RSDKv4/Functions/3D/MatrixRotate/#parameters","title":"Parameters","text":"<ul> <li><code>matrix</code> The selected matrix for rotation, valid Matrices are MAT_WORLD, MAT_VIEW and MAT_TEMP.</li> <li><code>angle</code> Angle of the rotation, values are 512-based.</li> </ul>"},{"location":"RSDKv4/Functions/3D/MatrixRotate/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/3D/MatrixRotate/#syntax","title":"Syntax","text":"<p><pre><code>MatrixRotateX(mat matrix, int angle)\n</code></pre> <pre><code>MatrixRotateY(mat matrix, int angle)\n</code></pre> <pre><code>MatrixRotateZ(mat matrix, int angle)\n</code></pre></p>"},{"location":"RSDKv4/Functions/3D/MatrixRotate/#examples","title":"Examples","text":"<p><pre><code>MatrixRotateX(MAT_WORLD, 43)\n</code></pre> <pre><code>MatrixRotateY(MAT_VIEW,  76)\n</code></pre> <pre><code>MatrixRotateZ(MAT_TEMP,  22)\n</code></pre></p>"},{"location":"RSDKv4/Functions/3D/MatrixRotateXYZ/","title":"MatrixRotateXYZ","text":""},{"location":"RSDKv4/Functions/3D/MatrixRotateXYZ/#description","title":"Description","text":"<p>Rotates <code>matrix</code> to <code>angleX</code>, <code>angleY</code> and <code>angleZ</code>.</p>"},{"location":"RSDKv4/Functions/3D/MatrixRotateXYZ/#parameters","title":"Parameters","text":"<ul> <li><code>matrix</code> The selected matrix for rotation, valid Matrices are MAT_WORLD, MAT_VIEW and MAT_TEMP.</li> <li><code>angleX</code>, <code>angleY</code>, <code>angleZ</code> Angle of the rotation, values are 512-based.</li> </ul>"},{"location":"RSDKv4/Functions/3D/MatrixRotateXYZ/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/3D/MatrixRotateXYZ/#syntax","title":"Syntax","text":"<pre><code>MatrixRotateXYZ(mat matrix, int angleX, int angleY, int angleZ)\n</code></pre>"},{"location":"RSDKv4/Functions/3D/MatrixRotateXYZ/#examples","title":"Examples","text":"<pre><code>MatrixRotateXYZ(MAT_WORLD, 43, 85, 29)\n</code></pre>"},{"location":"RSDKv4/Functions/3D/MatrixTranslateXYZ/","title":"MatrixTranslateXYZ","text":""},{"location":"RSDKv4/Functions/3D/MatrixTranslateXYZ/#description","title":"Description","text":"<p>Translates <code>matrix</code> to <code>translateX</code>, <code>translateY</code> and <code>translateZ</code>.</p>"},{"location":"RSDKv4/Functions/3D/MatrixTranslateXYZ/#parameters","title":"Parameters","text":"<ul> <li><code>matrix</code> The selected matrix to translate, valid Matrices are MAT_WORLD, MAT_VIEW and MAT_TEMP.</li> <li><code>translateX</code>, <code>translateY</code>, <code>translateZ</code> Translate value for the matrix, all shifted 8 bits (0x100 = 1.0)</li> </ul>"},{"location":"RSDKv4/Functions/3D/MatrixTranslateXYZ/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/3D/MatrixTranslateXYZ/#syntax","title":"Syntax","text":"<pre><code>MatrixTranslateXYZ(mat matrix, int translateX, int translateY, int translateZ)\n</code></pre>"},{"location":"RSDKv4/Functions/3D/MatrixTranslateXYZ/#examples","title":"Examples","text":"<pre><code>MatrixTranslateXYZ(MAT_WORLD, -512, 720, temp0)\n</code></pre>"},{"location":"RSDKv4/Functions/3D/ScaleMatrixXYZ/","title":"MatrixScaleXYZ","text":""},{"location":"RSDKv4/Functions/3D/ScaleMatrixXYZ/#description","title":"Description","text":"<p>Scales <code>matrix</code> to <code>scaleX</code>, <code>scaleY</code> and <code>scaleZ</code>.</p>"},{"location":"RSDKv4/Functions/3D/ScaleMatrixXYZ/#parameters","title":"Parameters","text":"<ul> <li><code>matrix</code> The selected matrix for scalling, valid Matrices are MAT_WORLD, MAT_VIEW and MAT_TEMP.</li> <li><code>scaleX</code>, <code>scaleY</code>, <code>scaleZ</code> Scale value for the matrix, all shifted 8 bits (0x100 = 1.0)</li> </ul>"},{"location":"RSDKv4/Functions/3D/ScaleMatrixXYZ/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/3D/ScaleMatrixXYZ/#syntax","title":"Syntax","text":"<pre><code>MatrixScaleXYZ(mat matrix, int scaleX, int scaleY, int scaleZ)\n</code></pre>"},{"location":"RSDKv4/Functions/3D/ScaleMatrixXYZ/#examples","title":"Examples","text":"<pre><code>MatrixScaleXYZ(MAT_VIEW, 0x200, 0x1A0, 0x180)\n</code></pre>"},{"location":"RSDKv4/Functions/3D/SetIdentityMatrix/","title":"SetIdentityMatrix","text":""},{"location":"RSDKv4/Functions/3D/SetIdentityMatrix/#description","title":"Description","text":"<p>Sets the matrix of <code>matID</code> to the identity state.</p>"},{"location":"RSDKv4/Functions/3D/SetIdentityMatrix/#parameters","title":"Parameters","text":"<ul> <li><code>matID</code> The matrix to set the identity, valid matrices are MAT_WORLD, MAT_VIEW and MAT_TEMP.</li> </ul>"},{"location":"RSDKv4/Functions/3D/SetIdentityMatrix/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/3D/SetIdentityMatrix/#syntax","title":"Syntax","text":"<pre><code>SetIdentityMatrix(mat matID)\n</code></pre>"},{"location":"RSDKv4/Functions/3D/SetIdentityMatrix/#examples","title":"Examples","text":"<pre><code>SetIdentityMatrix(MAT_WORLD)\n</code></pre>"},{"location":"RSDKv4/Functions/3D/TransformVertices/","title":"TransformVertices","text":""},{"location":"RSDKv4/Functions/3D/TransformVertices/#description","title":"Description","text":"<p>Transform all vertices from <code>startIndex</code> to <code>endIndex</code> using <code>matrix</code>.</p>"},{"location":"RSDKv4/Functions/3D/TransformVertices/#parameters","title":"Parameters","text":"<ul> <li><code>matrix</code> The matrix used to transform the vertices, valid matrices are MAT_WORLD, MAT_VIEW and MAT_TEMP.</li> <li><code>startIndex</code> The start of the range of tranforming vertices.</li> <li><code>endIndex</code> The end of the range of tranforming vertices.</li> </ul>"},{"location":"RSDKv4/Functions/3D/TransformVertices/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/3D/TransformVertices/#syntax","title":"Syntax","text":"<pre><code>TransformVertices(mat matrix, int startIndex, int endIndex)\n</code></pre>"},{"location":"RSDKv4/Functions/3D/TransformVertices/#examples","title":"Examples","text":"<pre><code>TransformVertices(MAT_VIEW, 0xFFE, 0x1000)\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawObjectAnimation/","title":"DrawObjectAnimation","text":""},{"location":"RSDKv4/Functions/Animations-Sprites/DrawObjectAnimation/#description","title":"Description","text":"<p>Draws an object's sprites from an animation file, loaded prior via <code>LoadAnimation()</code>. The sprite will be drawn at <code>object.xpos</code>, <code>object.ypos</code>, with <code>FX_FLIP</code> as the ink effect.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawObjectAnimation/#parameters","title":"Parameters","text":"<ul> <li>None.</li> </ul>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawObjectAnimation/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawObjectAnimation/#syntax","title":"Syntax","text":"<pre><code>DrawObjectAnimation()\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawObjectAnimation/#examples","title":"Examples","text":"<pre><code>DrawObjectAnimation()\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSprite/","title":"DrawSprite","text":""},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSprite/#description","title":"Description","text":"<p>Draws <code>Frame</code> at the object's X and Y position.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSprite/#parameters","title":"Parameters","text":"<ul> <li><code>Frame</code> The ID of the sprite to draw.</li> </ul>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSprite/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSprite/#syntax","title":"Syntax","text":"<pre><code>DrawSprite(int Frame)\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSprite/#examples","title":"Examples","text":"<pre><code>DrawSprite(0)\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteFX/","title":"DrawSpriteFX","text":""},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteFX/#description","title":"Description","text":"<p>Draws <code>Frame</code> to a specified X and Y position with visual effects.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteFX/#parameters","title":"Parameters","text":"<ul> <li><code>Frame</code> The ID of the sprite to draw.</li> <li><code>DrawFXFlag</code> The flag for the visual effect.</li> <li><code>XPos</code> The position of the sprite on the horizontal axis in world-space.</li> <li><code>YPos</code> The position of the sprite on the vertical axis in world-space.</li> </ul>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteFX/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteFX/#syntax","title":"Syntax","text":"<pre><code>DrawSpriteFX(int Frame, int DrawFXFlag, int XPos, int YPos)\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteFX/#examples","title":"Examples","text":"<pre><code>DrawSpriteFX(2, FX_FLIP, Object.Value0, Object.YPos)\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteFX/#note","title":"Note","text":"<p>The flags for visual effects are. - FX_SCALE Allows the scaling of the sprite via <code>Object.Scale</code>. - FX_ROTATE Allows the rotation of the sprite via <code>Object.Rotation</code>. - FX_ROTOZOOM Allows for rotation and scaling w/ <code>Object.Scale</code> and <code>Object.Rotation</code>. - FX_INK Allows the usage of <code>Object.InkEffect</code> to alter transparency.     the values for InkEffect are:     - 0 : INK_NONE, nothing happens     - 1 : INK_BLEND, 50% transparency     - 2 : INK_ALPHA, transparency based on <code>Object.Alpha</code> on a range of 0-255 (255 being no transparency)     - 3 : INK_ADD, additive transparency     - 4 : INK_SUB, subtractive transparency - FX_TINT Tints the sprite on a grayscale if <code>Object.InkEffect</code> is set to INK_ALPHA, otherwise it acts like FX_SCALE. (Note, there isn't an alias by default for this, it's equivalent value is 4) - FX_FLIP Flips the sprite depending of <code>Object.Direction</code>.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteScreenFX/","title":"DrawSpriteScreenFX","text":""},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteScreenFX/#description","title":"Description","text":"<p>Draws <code>Frame</code> to a specified X and Y position in the screen with visual effects.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteScreenFX/#parameters","title":"Parameters","text":"<ul> <li><code>Frame</code> The ID of the sprite to draw.</li> <li><code>DrawFXFlag</code> The flag for the visual effect.</li> <li><code>iXPos</code> The position of the sprite on the horizontal axis in screen-space.</li> <li><code>iYPos</code> The position of the sprite on the vertical axis in screen-space.</li> </ul>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteScreenFX/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteScreenFX/#syntax","title":"Syntax","text":"<pre><code>DrawSpriteScreenFX(int Frame, int DrawFXFlag, int iXPos, int iYPos)\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteScreenFX/#examples","title":"Examples","text":"<pre><code>DrawSpriteScreenFX(2, FX_FLIP, 20, 200)\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteScreenFX/#note","title":"Note","text":"<p>The flags for visual effects are. - FX_SCALE Allows the scaling of the sprite via <code>Object.Scale</code>. - FX_ROTATE Allows the rotation of the sprite via <code>Object.Rotation</code>. - FX_ROTOZOOM Allows for rotation and scaling w/ <code>Object.Scale</code> and <code>Object.Rotation</code>. - FX_INK Allows the usage of <code>Object.InkEffect</code> to alter transparency.     the values for InkEffect are:     - 0 : INK_NONE, nothing happens     - 1 : INK_BLEND, 50% transparency     - 2 : INK_ALPHA, transparency based on <code>Object.Alpha</code> on a range of 0-255 (255 being no transparency)     - 3 : INK_ADD, additive transparency     - 4 : INK_SUB, subtractive transparency - FX_TINT Tints the sprite on a grayscale if <code>Object.InkEffect</code> is set to INK_ALPHA, otherwise it acts like FX_SCALE. (Note, there isn't an alias by default for this, it's equivalent value is 4) - FX_FLIP Flips the sprite depending of <code>Object.Direction</code>.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteScreenXY/","title":"DrawSpriteScreenXY","text":""},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteScreenXY/#description","title":"Description","text":"<p>Draws <code>Frame</code> to a specified X and Y position in the screen.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteScreenXY/#parameters","title":"Parameters","text":"<ul> <li><code>Frame</code> The ID of the sprite to draw.</li> <li><code>iXPos</code> The position of the sprite on the horizontal axis in screen-space.</li> <li><code>iYPos</code> The position of the sprite on the vertical axis in screen-space.</li> </ul>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteScreenXY/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteScreenXY/#syntax","title":"Syntax","text":"<pre><code>DrawSpriteScreenXY(int Frame, int iXPos, int iYPos)\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteScreenXY/#examples","title":"Examples","text":"<pre><code>DrawSpriteScreenXY(0, 200, 15)\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteXY/","title":"DrawSpriteXY","text":""},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteXY/#description","title":"Description","text":"<p>Draws <code>Frame</code> to a specified X and Y position.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteXY/#parameters","title":"Parameters","text":"<ul> <li><code>Frame</code> The ID of the sprite to draw.</li> <li><code>XPos</code> The position of the sprite on the horizontal axis in world-space.</li> <li><code>YPos</code> The position of the sprite on the vertical axis in world-space.</li> </ul>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteXY/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteXY/#syntax","title":"Syntax","text":"<pre><code>DrawSpriteXY(int Frame, int XPos, int YPos)\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/DrawSpriteXY/#examples","title":"Examples","text":"<pre><code>DrawSpriteXY(0, Object.Value0, Object.YPos)\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/EditFrame/","title":"EditFrame","text":""},{"location":"RSDKv4/Functions/Animations-Sprites/EditFrame/#description","title":"Description","text":"<p>Edits pivots, width, height and sheet coordinates of a spriteFrame with matching <code>ID</code>.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/EditFrame/#parameters","title":"Parameters","text":"<ul> <li><code>ID</code> The ID of the spriteFrame to edit.</li> <li><code>xPivot</code> The horizontal offset of the sprite, negative values will move it to the left, while positive values will move it to the right.</li> <li><code>yPivot</code> The vertical offset of the sprite, negative values will move it upwards, and positive values downwards.</li> <li><code>Width</code> The width of the sprite.</li> <li><code>Height</code> The height of the sprite.</li> <li><code>SheetXPos</code> The position of the upper-left border of the sprite, on the X axis.</li> <li><code>SheetYPos</code> The position of the upper-left border of the sprite, on the Y axis.</li> </ul>"},{"location":"RSDKv4/Functions/Animations-Sprites/EditFrame/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/EditFrame/#syntax","title":"Syntax","text":"<pre><code>EditFrame(int ID, int xPivot, int yPivot, int Width, int Height, int SheetXPos, int SheetYPos)\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/EditFrame/#examples","title":"Examples","text":"<pre><code>EditFrame(2, -8, -8, 8, 8, 1, 35)\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/EditFrame/#notes","title":"Notes","text":"<p>This function is not available in Blit releases of Sonic CD.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/LoadAnimation/","title":"LoadAnimation","text":""},{"location":"RSDKv4/Functions/Animations-Sprites/LoadAnimation/#description","title":"Description","text":"<p>Loads an Animation file, and assigns it to the current object type.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/LoadAnimation/#parameters","title":"Parameters","text":"<ul> <li><code>path</code> The file path to load the sprite sheet from, relative to <code>Data/Animations/</code>.</li> </ul>"},{"location":"RSDKv4/Functions/Animations-Sprites/LoadAnimation/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/LoadAnimation/#syntax","title":"Syntax","text":"<pre><code>LoadAnimation(string path)\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/LoadAnimation/#examples","title":"Examples","text":"<pre><code>LoadAnimation(\"Test.ani\")\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/LoadSpriteSheet/","title":"LoadSpriteSheet","text":""},{"location":"RSDKv4/Functions/Animations-Sprites/LoadSpriteSheet/#description","title":"Description","text":"<p>Loads a Sprite Sheet and assigns the id to <code>object.spritesheet</code>. The spritesheet must be in GIF format.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/LoadSpriteSheet/#parameters","title":"Parameters","text":"<ul> <li><code>path</code> The file path to load the sprite sheet from, relative to <code>Data/Sprites/</code>.</li> </ul>"},{"location":"RSDKv4/Functions/Animations-Sprites/LoadSpriteSheet/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/LoadSpriteSheet/#syntax","title":"Syntax","text":"<pre><code>LoadSpriteSheet(string path)\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/LoadSpriteSheet/#examples","title":"Examples","text":"<pre><code>LoadSpriteSheet(\"Test/Objects.gif\")\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/ProcessAnimation/","title":"ProcessAnimation","text":""},{"location":"RSDKv4/Functions/Animations-Sprites/ProcessAnimation/#description","title":"Description","text":"<p>Processes the current object's animation, based on an animation file loaded prior via <code>LoadAnimation()</code>. The animation is processed based on <code>object.animation</code>, and uses <code>object.animationSpeed</code>, <code>object.animationTimer</code>, and <code>object.frame</code> as well.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/ProcessAnimation/#parameters","title":"Parameters","text":"<ul> <li>None.</li> </ul>"},{"location":"RSDKv4/Functions/Animations-Sprites/ProcessAnimation/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/ProcessAnimation/#syntax","title":"Syntax","text":"<pre><code>ProcessAnimation()\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/ProcessAnimation/#examples","title":"Examples","text":"<pre><code>ProcessAnimation()\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/RemoveSpriteSheet/","title":"RemoveSpriteSheet","text":""},{"location":"RSDKv4/Functions/Animations-Sprites/RemoveSpriteSheet/#description","title":"Description","text":"<p>Removes the given Sprite Sheet from memory, if it is already loaded. This does not delete the file from the computer or anything, it purely only affects the game memory.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/RemoveSpriteSheet/#parameters","title":"Parameters","text":"<ul> <li><code>path</code> The file path of the target sprite sheet to remove, relative to <code>Data/Sprites/</code>.</li> </ul>"},{"location":"RSDKv4/Functions/Animations-Sprites/RemoveSpriteSheet/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/RemoveSpriteSheet/#syntax","title":"Syntax","text":"<pre><code>RemoveSpriteSheet(string path)\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/RemoveSpriteSheet/#examples","title":"Examples","text":"<pre><code>RemoveSpriteSheet(\"Test/Objects.gif\")\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/SpriteFrame/","title":"SpriteFrame","text":""},{"location":"RSDKv4/Functions/Animations-Sprites/SpriteFrame/#description","title":"Description","text":"<p>Adds a Sprite with the specified values.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/SpriteFrame/#parameters","title":"Parameters","text":"<ul> <li><code>xPivot</code> The horizontal offset of the sprite, negative values will move it to the left, while positive values will move it to the right.</li> <li><code>yPivot</code> The vertical offset of the sprite, negative values will move it upwards, and positive values downwards.</li> <li><code>Width</code> The width of the sprite.</li> <li><code>Height</code> The height of the sprite.</li> <li><code>SheetXPos</code> The position of the upper-left border of the sprite, on the X axis.</li> <li><code>SheetYPos</code> The position of the upper-left border of the sprite, on the Y axis.</li> </ul>"},{"location":"RSDKv4/Functions/Animations-Sprites/SpriteFrame/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Animations-Sprites/SpriteFrame/#syntax","title":"Syntax","text":"<pre><code>SpriteFrame(int xPivot, int yPivot, int Width, int Height, int SheetXPos, int SheetYPos)\n</code></pre>"},{"location":"RSDKv4/Functions/Animations-Sprites/SpriteFrame/#examples","title":"Examples","text":"<pre><code>SpriteFrame(-16, -16, 32, 32, 75, 129)\n</code></pre>"},{"location":"RSDKv4/Functions/Audio/PauseMusic/","title":"PauseMusic","text":""},{"location":"RSDKv4/Functions/Audio/PauseMusic/#description","title":"Description","text":"<p>Pauses the currently playing music track, if one is playing. The track can be resumed with <code>ResumeMusic()</code>.</p>"},{"location":"RSDKv4/Functions/Audio/PauseMusic/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Audio/PauseMusic/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Audio/PauseMusic/#syntax","title":"Syntax","text":"<pre><code>PauseMusic()\n</code></pre>"},{"location":"RSDKv4/Functions/Audio/PauseMusic/#examples","title":"Examples","text":"<pre><code>PauseMusic()\n</code></pre>"},{"location":"RSDKv4/Functions/Audio/PlayMusic/","title":"PlayMusic","text":""},{"location":"RSDKv4/Functions/Audio/PlayMusic/#description","title":"Description","text":"<p>Plays the music currently loaded in the given track slot.</p>"},{"location":"RSDKv4/Functions/Audio/PlayMusic/#parameters","title":"Parameters","text":"<ul> <li><code>trackID</code> The trackList slot the music is loaded in.</li> </ul>"},{"location":"RSDKv4/Functions/Audio/PlayMusic/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Audio/PlayMusic/#syntax","title":"Syntax","text":"<pre><code>PlayMusic(int trackID)\n</code></pre>"},{"location":"RSDKv4/Functions/Audio/PlayMusic/#examples","title":"Examples","text":"<pre><code>PlayMusic(0)\n</code></pre>"},{"location":"RSDKv4/Functions/Audio/PlaySfx/","title":"PlaySfx","text":""},{"location":"RSDKv4/Functions/Audio/PlaySfx/#description","title":"Description","text":"<p>Plays the sound effect in the given slot in the GameConfig or StageConfig, looping it if set to do so.</p>"},{"location":"RSDKv4/Functions/Audio/PlaySfx/#parameters","title":"Parameters","text":"<ul> <li><code>sfx</code> The slot of the sound effect. It's recommended to the <code>SfxName</code> alias for this.</li> <li><code>loop</code> Determines whether or not the sound effect should loop.</li> </ul>"},{"location":"RSDKv4/Functions/Audio/PlaySfx/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Audio/PlaySfx/#syntax","title":"Syntax","text":"<pre><code>PlaySfx(int sfx, bool loop)\n</code></pre>"},{"location":"RSDKv4/Functions/Audio/PlaySfx/#examples","title":"Examples","text":"<pre><code>PlaySfx(SfxName[Test], false)\n</code></pre>"},{"location":"RSDKv4/Functions/Audio/ResumeMusic/","title":"ResumeMusic","text":""},{"location":"RSDKv4/Functions/Audio/ResumeMusic/#description","title":"Description","text":"<p>If a track has been paused with <code>PauseMusic()</code>, resumes playing the track.</p>"},{"location":"RSDKv4/Functions/Audio/ResumeMusic/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Audio/ResumeMusic/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Audio/ResumeMusic/#syntax","title":"Syntax","text":"<pre><code>ResumeMusic()\n</code></pre>"},{"location":"RSDKv4/Functions/Audio/ResumeMusic/#examples","title":"Examples","text":"<pre><code>ResumeMusic()\n</code></pre>"},{"location":"RSDKv4/Functions/Audio/SetMusicTrack/","title":"SetMusicTrack","text":""},{"location":"RSDKv4/Functions/Audio/SetMusicTrack/#description","title":"Description","text":"<p>Loads a music file in the given track slot with the given loop point. The music file must be in OGG format.</p>"},{"location":"RSDKv4/Functions/Audio/SetMusicTrack/#parameters","title":"Parameters","text":"<ul> <li><code>path</code> The file path to load the music file from, relative to <code>Data/Music/</code>.</li> <li><code>trackID</code> The trackList slot to load the music in.</li> <li><code>loopPoint</code> The track's loop point, in samples. 0 will disable looping, 1 will loop from the beginning of the track, and anything else is the sample to loop from.</li> </ul>"},{"location":"RSDKv4/Functions/Audio/SetMusicTrack/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Audio/SetMusicTrack/#syntax","title":"Syntax","text":"<pre><code>SetMusicTrack(string path, int trackID, int loopPoint)\n</code></pre>"},{"location":"RSDKv4/Functions/Audio/SetMusicTrack/#examples","title":"Examples","text":"<pre><code>SetMusicTrack(\"Test.ogg\", 0, 1)\n</code></pre>"},{"location":"RSDKv4/Functions/Audio/SetSfxAttributes/","title":"SetSfxAttributes","text":""},{"location":"RSDKv4/Functions/Audio/SetSfxAttributes/#description","title":"Description","text":"<p>Sets the loop count and panning of the given sound effect to the given values.</p>"},{"location":"RSDKv4/Functions/Audio/SetSfxAttributes/#parameters","title":"Parameters","text":"<ul> <li><code>sfx</code> The slot of the sound effect. It's recommended to the <code>SfxName</code> alias for this.</li> <li><code>loopCount</code> The number of times the sound effect should loop, if it's set to play on loop. Setting this to -1 will leave the loop count unchanged.</li> <li><code>panning</code> The panning of the sound effect. The minimum and maximum values are -100 and 100 respectively, with 0 being balanced.</li> </ul>"},{"location":"RSDKv4/Functions/Audio/SetSfxAttributes/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Audio/SetSfxAttributes/#syntax","title":"Syntax","text":"<pre><code>SetSfxAttributes(int sfx, int loopCount, int panning)\n</code></pre>"},{"location":"RSDKv4/Functions/Audio/SetSfxAttributes/#examples","title":"Examples","text":"<pre><code>SetSfxAttributes(SfxName[Test], 5, -50)\n</code></pre>"},{"location":"RSDKv4/Functions/Audio/StopMusic/","title":"StopMusic","text":""},{"location":"RSDKv4/Functions/Audio/StopMusic/#description","title":"Description","text":"<p>Stops playing the currently playing music track, if one is playing.</p>"},{"location":"RSDKv4/Functions/Audio/StopMusic/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Audio/StopMusic/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Audio/StopMusic/#syntax","title":"Syntax","text":"<pre><code>StopMusic()\n</code></pre>"},{"location":"RSDKv4/Functions/Audio/StopMusic/#examples","title":"Examples","text":"<pre><code>StopMusic()\n</code></pre>"},{"location":"RSDKv4/Functions/Audio/StopSfx/","title":"StopSfx","text":""},{"location":"RSDKv4/Functions/Audio/StopSfx/#description","title":"Description","text":"<p>Stops all instances of the given sound effect playing.</p>"},{"location":"RSDKv4/Functions/Audio/StopSfx/#parameters","title":"Parameters","text":"<ul> <li><code>sfx</code> The slot of the sound effect. It's recommended to the <code>SfxName</code> alias for this.</li> </ul>"},{"location":"RSDKv4/Functions/Audio/StopSfx/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Audio/StopSfx/#syntax","title":"Syntax","text":"<pre><code>StopSfx(int sfx)\n</code></pre>"},{"location":"RSDKv4/Functions/Audio/StopSfx/#examples","title":"Examples","text":"<pre><code>StopSfx(SfxName[Test])\n</code></pre>"},{"location":"RSDKv4/Functions/Audio/SwapMusicTrack/","title":"SwapMusicTrack","text":""},{"location":"RSDKv4/Functions/Audio/SwapMusicTrack/#description","title":"Description","text":"<p>Loads a music file in the given track slot with the given loop point. If the track slot that's currently playing is the one that's been overwritten, the new song will automatically play at a position based on the given ratio of the current track's position. The music file must be in OGG format.</p>"},{"location":"RSDKv4/Functions/Audio/SwapMusicTrack/#parameters","title":"Parameters","text":"<ul> <li><code>path</code> The file path to load the music file from, relative to <code>Data/Music/</code>.</li> <li><code>trackID</code> The trackList slot to load the music in.</li> <li><code>loopPoint</code> The track's loop point, in samples. 0 will disable looping, 1 will loop from the beginning of the track, and anything else is the sample to loop from.</li> <li><code>ratio</code> The ratio to base setting the position on if the track automatically plays as described above. This uses a 10000-based value, meaning 10000 = 1x music speed, 5000 = 0.5x music speed, etc.</li> </ul>"},{"location":"RSDKv4/Functions/Audio/SwapMusicTrack/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Audio/SwapMusicTrack/#syntax","title":"Syntax","text":"<pre><code>SwapMusicTrack(string path, int trackID, int loopPoint, int ratio)\n</code></pre>"},{"location":"RSDKv4/Functions/Audio/SwapMusicTrack/#examples","title":"Examples","text":"<pre><code>SwapMusicTrack(\"Test2xSpeed.ogg\", 0, 1, 20000)\n</code></pre>"},{"location":"RSDKv4/Functions/Deprecated/DrawText/","title":"DrawText","text":""},{"location":"RSDKv4/Functions/Deprecated/DrawText/#description","title":"Description","text":"<p>Draws the contents of <code>rowCount</code> rows, starting from <code>rowStart</code> in <code>menu</code> at <code>xPos</code> and <code>yPos</code> relative to the screen. Using <code>spacing</code> pixels between them and scalling it with <code>scale</code>. (Removed from the engine in REV02)</p>"},{"location":"RSDKv4/Functions/Deprecated/DrawText/#parameters","title":"Parameters","text":"<ul> <li><code>menu</code> The menu from where to read the text, MENU_1 or MENU_2 are valid.</li> <li><code>xPos</code> Position of the text on the horizontal axis.</li> <li><code>yPos</code> Position of the text on the vertical axis.</li> <li><code>scale</code> Scale of the text.</li> <li><code>spacing</code> Space between each letter.</li> <li><code>rowStart</code> The starting index from where to read.</li> <li><code>rowCount</code> The amount of rows to draw.</li> </ul>"},{"location":"RSDKv4/Functions/Deprecated/DrawText/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Deprecated/DrawText/#syntax","title":"Syntax","text":"<pre><code>DrawText(int menu, int xPos, int yPos, int scale, int spacing, int rowStart, int rowCount)\n</code></pre>"},{"location":"RSDKv4/Functions/Deprecated/DrawText/#examples","title":"Examples","text":"<pre><code>DrawText(MENU_1, temp0, temp1, 192, 0, 0, 1)\n</code></pre>"},{"location":"RSDKv4/Functions/Deprecated/LoadTextFont/","title":"LoadTextFont","text":""},{"location":"RSDKv4/Functions/Deprecated/LoadTextFont/#description","title":"Description","text":"<p>Loads a bitmap font from <code>filePath</code> for use with text menus. (Removed from the engine in REV02)</p>"},{"location":"RSDKv4/Functions/Deprecated/LoadTextFont/#parameters","title":"Parameters","text":"<ul> <li><code>filePath</code> The path to the font.</li> </ul>"},{"location":"RSDKv4/Functions/Deprecated/LoadTextFont/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Deprecated/LoadTextFont/#syntax","title":"Syntax","text":"<pre><code>LoadTextFont(\"string filePath\")\n</code></pre>"},{"location":"RSDKv4/Functions/Deprecated/LoadTextFont/#examples","title":"Examples","text":"<pre><code>LoadTextFont(\"Data/Game/SystemText.gif\")\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/AddDrawListEntityRef/","title":"AddDrawListEntityRef","text":""},{"location":"RSDKv4/Functions/Drawing/AddDrawListEntityRef/#description","title":"Description","text":"<p>Adds <code>ObjectPos</code> to the drawList layer.</p>"},{"location":"RSDKv4/Functions/Drawing/AddDrawListEntityRef/#parameters","title":"Parameters","text":"<ul> <li><code>layer</code> Layer of the drawList to add the reference, indices 0-7 are valid, additionally 8 is available in V5U.</li> <li><code>objectPos</code> The position of the object to add.</li> </ul>"},{"location":"RSDKv4/Functions/Drawing/AddDrawListEntityRef/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Drawing/AddDrawListEntityRef/#syntax","title":"Syntax","text":"<pre><code>AddDrawListEntityRef(int layer, int objectPos)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/AddDrawListEntityRef/#examples","title":"Examples","text":"<pre><code>AddDrawListEntityRef(4, object.entityPos)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/ClearDrawList/","title":"ClearDrawList","text":""},{"location":"RSDKv4/Functions/Drawing/ClearDrawList/#description","title":"Description","text":"<p>Removes all entries in drawList <code>layer</code>.</p>"},{"location":"RSDKv4/Functions/Drawing/ClearDrawList/#parameters","title":"Parameters","text":"<ul> <li><code>layer</code> Layer of the drawList to clean.</li> </ul>"},{"location":"RSDKv4/Functions/Drawing/ClearDrawList/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Drawing/ClearDrawList/#syntax","title":"Syntax","text":"<pre><code>ClearDrawList(int layer)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/ClearDrawList/#examples","title":"Examples","text":"<pre><code>ClearDrawList(3)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/ClearScreen/","title":"ClearScreen","text":""},{"location":"RSDKv4/Functions/Drawing/ClearScreen/#description","title":"Description","text":"<p>Clears all pixels on screen with <code>clearIndex</code> color from the active palette.</p>"},{"location":"RSDKv4/Functions/Drawing/ClearScreen/#parameters","title":"Parameters","text":"<ul> <li><code>clearIndex</code> The color that will override the pixels on the screen.</li> </ul>"},{"location":"RSDKv4/Functions/Drawing/ClearScreen/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Drawing/ClearScreen/#syntax","title":"Syntax","text":"<pre><code>ClearScreen(int clearIndex)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/ClearScreen/#examples","title":"Examples","text":"<pre><code>ClearScreen(5)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/CopyPalette/","title":"CopyPalette","text":""},{"location":"RSDKv4/Functions/Drawing/CopyPalette/#description","title":"Description","text":"<p>Copies <code>count</code> colors from <code>srcPal</code>, starting from <code>srcPalStart</code>. To <code>destPal</code>, starting at <code>destPalStart</code>.</p>"},{"location":"RSDKv4/Functions/Drawing/CopyPalette/#parameters","title":"Parameters","text":"<ul> <li><code>srcPal</code> The palette bank to copy, valid range: 0-7.</li> <li><code>srcPalStart</code> The palette entry from where to start copying, valid range: 0-255.</li> <li><code>destPal</code> The palette bank to paste, valid range: 0-7.</li> <li><code>destPalStart</code> The palette entry from where to start pasting, valid range: 0-255.</li> <li><code>count</code> The amount of colors to copy from <code>srcPalStart</code> to <code>destPalStart</code>.</li> </ul>"},{"location":"RSDKv4/Functions/Drawing/CopyPalette/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Drawing/CopyPalette/#syntax","title":"Syntax","text":"<pre><code>CopyPalette(int scrPal, int srcPalStart, int destPal, int destPalStart, int count)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/CopyPalette/#examples","title":"Examples","text":"<pre><code>CopyPalette(1, 1, 0, 1, 4)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/DrawRect/","title":"DrawRect","text":""},{"location":"RSDKv4/Functions/Drawing/DrawRect/#description","title":"Description","text":"<p>Draws a rectangle to a specified X and Y position in the screen with a color based on combination of red, green, blue and transparency.</p>"},{"location":"RSDKv4/Functions/Drawing/DrawRect/#parameters","title":"Parameters","text":"<ul> <li><code>ixPos</code> The position of the rectangle on the horizontal axis in screen-space.</li> <li><code>iyPos</code> The position of the rectangle on the vertical axis in screen-space.</li> <li><code>width</code> The width of the rectangle.</li> <li><code>height</code> The height of the rectangle.</li> <li><code>R</code> A value range of 0-255 for the color red.</li> <li><code>G</code> A value range of 0-255 for the color green.</li> <li><code>B</code> A value range of 0-255 for the color blue.</li> <li><code>A</code> A value range of 0-255 for transparency (255 being no transparency)</li> </ul>"},{"location":"RSDKv4/Functions/Drawing/DrawRect/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Drawing/DrawRect/#syntax","title":"Syntax","text":"<pre><code>DrawTintRect(int ixPos, int iyPos, int width, int height, int R, int G, int B, int A)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/DrawRect/#examples","title":"Examples","text":"<pre><code>DrawRect(30, 220, 60, 20, 255, 128, 128, 255)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/DrawTintRect/","title":"DrawTintRect","text":""},{"location":"RSDKv4/Functions/Drawing/DrawTintRect/#description","title":"Description","text":"<p>Draws a tinted rectangle to a specified X and Y position in the screen.</p>"},{"location":"RSDKv4/Functions/Drawing/DrawTintRect/#parameters","title":"Parameters","text":"<ul> <li><code>ixPos</code> The position of the rectangle on the horizontal axis in screen-space.</li> <li><code>iyPos</code> The position of the rectangle on the vertical axis in screen-space.</li> <li><code>width</code> The width of the rectangle.</li> <li><code>height</code> The height of the rectangle.</li> </ul>"},{"location":"RSDKv4/Functions/Drawing/DrawTintRect/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Drawing/DrawTintRect/#syntax","title":"Syntax","text":"<pre><code>DrawTintRect(int ixPos, int iyPos, int width, int height)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/DrawTintRect/#examples","title":"Examples","text":"<pre><code>DrawTintRect(30, 220, 60, 20)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/GetDrawListEntityRef/","title":"GetDrawListEntityRef","text":""},{"location":"RSDKv4/Functions/Drawing/GetDrawListEntityRef/#description","title":"Description","text":"<p>Gets <code>objectPos</code> in the drawList layer and stores it in <code>store</code>.</p>"},{"location":"RSDKv4/Functions/Drawing/GetDrawListEntityRef/#parameters","title":"Parameters","text":"<ul> <li><code>layer</code> Layer of the drawList to add the reference, indices 0-7 are valid, additionally 8 is available in V5U.</li> <li><code>objectPos</code> The position of the object to add.</li> <li><code>store</code> The variable where <code>objectPos</code> will be stored.</li> </ul>"},{"location":"RSDKv4/Functions/Drawing/GetDrawListEntityRef/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Drawing/GetDrawListEntityRef/#syntax","title":"Syntax","text":"<pre><code>GetDrawListEntityRef(var Store, int Layer, int objectPos)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/GetDrawListEntityRef/#examples","title":"Examples","text":"<pre><code>GetDrawListEntityRef(object.value0, 4, object.entityPos)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/GetPaletteEntry/","title":"GetPaletteEntry","text":""},{"location":"RSDKv4/Functions/Drawing/GetPaletteEntry/#description","title":"Description","text":"<p>Gets the palette entry in <code>palBankID</code> at <code>palIndex</code> and stores it in <code>palStore</code>.</p>"},{"location":"RSDKv4/Functions/Drawing/GetPaletteEntry/#parameters","title":"Parameters","text":"<ul> <li><code>palBankID</code> Palette bank from where to get the entry, valid value range: 0-7.</li> <li><code>palIndex</code> Index of the entry to copy, valid value range: 0-255.</li> <li><code>palStore</code> Variable to store the copied palette.</li> </ul>"},{"location":"RSDKv4/Functions/Drawing/GetPaletteEntry/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Drawing/GetPaletteEntry/#syntax","title":"Syntax","text":"<pre><code>GetPaletteEntry(int palBankID, int palIndex, var palStore)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/GetPaletteEntry/#examples","title":"Examples","text":"<pre><code>GetPaletteEntry(3, 131, temp6)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/LoadPalette/","title":"LoadPalette","text":""},{"location":"RSDKv4/Functions/Drawing/LoadPalette/#description","title":"Description","text":"<p>Loads a palette into a <code>palBank</code> starting from <code>startPalIndex</code>, with an offset of <code>startIndex</code> and reading all colors through to <code>endIndex</code>.</p>"},{"location":"RSDKv4/Functions/Drawing/LoadPalette/#parameters","title":"Parameters","text":"<ul> <li><code>path</code> The path to the palette file, relative to <code>Data/Palettes/</code>.</li> <li><code>palBank</code> The ID of the palette bank for the palette to load, indices 0-7 are valid.</li> <li><code>startPalIndex</code> The starting index of the loaded palette.</li> <li><code>startIndex</code> The starting index of the palette bank from which the loaded palette will override.</li> <li><code>endIndex</code> The ending index of the palette bank from which the loaded palette will override.</li> </ul>"},{"location":"RSDKv4/Functions/Drawing/LoadPalette/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Drawing/LoadPalette/#syntax","title":"Syntax","text":"<pre><code>LoadPalette(\"string path\", int palBank, int startPalIndex, int startIndex, int endIndex)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/LoadPalette/#examples","title":"Examples","text":"<pre><code>LoadPalette(\"Masterpalette.act\", 2, 16, 24, 32)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/RotatePalette/","title":"RotatePalette","text":""},{"location":"RSDKv4/Functions/Drawing/RotatePalette/#description","title":"Description","text":"<p>Rotates all colors in <code>palBank</code> starting from <code>startIndex</code> through to <code>endIndex</code>, moving left or right depending of <code>rotDir</code>.</p>"},{"location":"RSDKv4/Functions/Drawing/RotatePalette/#parameters","title":"Parameters","text":"<ul> <li><code>palBank</code> The ID of the palette bank for the palette to rotate, indices 0-7 are valid.</li> <li><code>startIndex</code> The starting index of the palette bank for the rotation.</li> <li><code>endIndex</code> The ending index of the palette bank for the rotation.</li> <li><code>rotDir</code> The direction of the rotation.</li> </ul>"},{"location":"RSDKv4/Functions/Drawing/RotatePalette/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Drawing/RotatePalette/#syntax","title":"Syntax","text":"<pre><code>RotatePalette(int palBank, int startIndex, int endIndex, int rotDir)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/RotatePalette/#examples","title":"Examples","text":"<pre><code>RotatePalette(2, 16, 24, 1)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/SetActivePalette/","title":"SetActivePalette","text":""},{"location":"RSDKv4/Functions/Drawing/SetActivePalette/#description","title":"Description","text":"<p>Sets the active palette for <code>palBank</code> for all screen lines from <code>startLine</code> through to <code>endLine</code>.</p>"},{"location":"RSDKv4/Functions/Drawing/SetActivePalette/#parameters","title":"Parameters","text":"<ul> <li><code>palBank</code> The ID of the new active palette, indices 0-7 are valid.</li> <li><code>startLine</code> The starting screen-line for the new active palette.</li> <li><code>endLine</code> The final screen-line for the new active palette.</li> </ul>"},{"location":"RSDKv4/Functions/Drawing/SetActivePalette/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Drawing/SetActivePalette/#syntax","title":"Syntax","text":"<pre><code>SetActivePalette(int palBank, int startLine, int endLine)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/SetActivePalette/#examples","title":"Examples","text":"<pre><code>SetActivePalette(0, 76, Screen.YSize)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/SetDrawListEntityRef/","title":"SetDrawListEntityRef","text":""},{"location":"RSDKv4/Functions/Drawing/SetDrawListEntityRef/#setdrawlistentityref","title":"SetDrawListEntityRef","text":""},{"location":"RSDKv4/Functions/Drawing/SetDrawListEntityRef/#description","title":"Description","text":"<p>Sets <code>objectPos</code> in the drawList layer to the value of <code>newValue</code>.</p>"},{"location":"RSDKv4/Functions/Drawing/SetDrawListEntityRef/#parameters","title":"Parameters","text":"<ul> <li><code>layer</code> The Layer of the drawList to add the reference, indices 0-7 are valid, additionally 8 is available in V5U.</li> <li><code>objectPos</code> The position of the object to add.</li> <li><code>newValue</code> The new value for <code>objectPos</code>.</li> </ul>"},{"location":"RSDKv4/Functions/Drawing/SetDrawListEntityRef/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Drawing/SetDrawListEntityRef/#syntax","title":"Syntax","text":"<pre><code>SetDrawListEntityRef(int newValue, int layer, int objectPos)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/SetDrawListEntityRef/#examples","title":"Examples","text":"<pre><code>SetDrawListEntityRef(object.value0, 4, object.entityPos)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/SetPaletteEntry/","title":"SetPaletteEntry","text":""},{"location":"RSDKv4/Functions/Drawing/SetPaletteEntry/#description","title":"Description","text":"<p>Sets the palette entry in <code>palBankID</code> at <code>palIndex</code> to the value of <code>color</code>.</p>"},{"location":"RSDKv4/Functions/Drawing/SetPaletteEntry/#parameters","title":"Parameters","text":"<ul> <li><code>palBankID</code> Palette bank from where to get the entry, valid value range: 0-7.</li> <li><code>palIndex</code> Index of the entry to place the new color, valid value range: 0-255.</li> <li><code>color</code> Color value, the format of the color is 0xRRGGBB.</li> </ul>"},{"location":"RSDKv4/Functions/Drawing/SetPaletteEntry/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Drawing/SetPaletteEntry/#syntax","title":"Syntax","text":"<pre><code>SetPaletteEntry(int palBankID, int palIndex, int color)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/SetPaletteEntry/#examples","title":"Examples","text":"<pre><code>SetPaletteEntry(0, 134, 0xFF607F)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/SetPaletteFade/","title":"SetPaletteFade","text":""},{"location":"RSDKv4/Functions/Drawing/SetPaletteFade/#description","title":"Description","text":"<p>Blends the currectly active palette, starting at <code>palIndex</code> through to <code>endIndex</code>. With a mix based on <code>R</code>, <code>G</code>, <code>B</code> by <code>blendAmount</code>, and stores it in <code>destPalBank</code>.</p>"},{"location":"RSDKv4/Functions/Drawing/SetPaletteFade/#parameters","title":"Parameters","text":"<ul> <li><code>destPalBank</code> The ID of the palette for store, indices 0-7 are valid.</li> <li><code>R</code> A value range of 0-255 for the color red.</li> <li><code>G</code> A value range of 0-255 for the color green.</li> <li><code>B</code> A value range of 0-255 for the color blue.</li> <li><code>blendAmount</code> A value range of 0-255 for blending.</li> <li><code>startIndex</code> The starting index of the palette bank to blend.</li> <li><code>endIndex</code> The ending index of the palette bank to blend.</li> </ul>"},{"location":"RSDKv4/Functions/Drawing/SetPaletteFade/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Drawing/SetPaletteFade/#syntax","title":"Syntax","text":"<pre><code>SetPaletteFade(int destPalBank, int R, int G, int B, int blendAmount, int startIndex, int endIndex)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/SetPaletteFade/#examples","title":"Examples","text":"<pre><code>SetPaletteFade(1, 128, 128, 128, 255, 64, 144)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/SetScreenFade/","title":"SetScreenFade","text":""},{"location":"RSDKv4/Functions/Drawing/SetScreenFade/#description","title":"Description","text":"<p>Sets the fade-out effect based on <code>R</code>, <code>G</code>, <code>B</code> and <code>alpha</code> values.</p>"},{"location":"RSDKv4/Functions/Drawing/SetScreenFade/#parameters","title":"Parameters","text":"<ul> <li><code>R</code> A value range of 0-255 for the color red.</li> <li><code>G</code> A value range of 0-255 for the color green.</li> <li><code>B</code> A value range of 0-255 for the color blue.</li> <li><code>alpha</code> A value range of 0-255 for transparency (255 being no transparency)</li> </ul>"},{"location":"RSDKv4/Functions/Drawing/SetScreenFade/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Drawing/SetScreenFade/#syntax","title":"Syntax","text":"<pre><code>SetScreenFade(int R, int G, int B, int alpha)\n</code></pre>"},{"location":"RSDKv4/Functions/Drawing/SetScreenFade/#examples","title":"Examples","text":"<pre><code>SetScreenFade(255, 0, 0, object.alpha)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/ATan2/","title":"ATan2","text":""},{"location":"RSDKv4/Functions/Math/ATan2/#description","title":"Description","text":"<p>Performs an arctan operation using <code>x</code> and <code>y</code>, storing the result in <code>store</code>.</p>"},{"location":"RSDKv4/Functions/Math/ATan2/#parameters","title":"Parameters","text":"<ul> <li><code>store</code> The variable to store the result.</li> <li><code>x</code>, <code>y</code> The values used in the arctan operation.</li> </ul>"},{"location":"RSDKv4/Functions/Math/ATan2/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Math/ATan2/#syntax","title":"Syntax","text":"<pre><code>ATan2(var store, int x, int y)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/ATan2/#examples","title":"Examples","text":"<pre><code>ATan2(temp1, object.value5, temp0)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/Abs/","title":"Abs","text":""},{"location":"RSDKv4/Functions/Math/Abs/#description","title":"Description","text":"<p>Gets the absolute number of <code>value</code>.</p>"},{"location":"RSDKv4/Functions/Math/Abs/#parameters","title":"Parameters","text":"<ul> <li><code>value</code> Variable from where to read the value.</li> </ul>"},{"location":"RSDKv4/Functions/Math/Abs/#return-value","title":"Return Value","text":"<p>Updates <code>value</code> with the result.</p>"},{"location":"RSDKv4/Functions/Math/Abs/#syntax","title":"Syntax","text":"<pre><code>Abs(var value)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/Abs/#examples","title":"Examples","text":"<pre><code>Abs(object.value3)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/Cos/","title":"Cos","text":""},{"location":"RSDKv4/Functions/Math/Cos/#description","title":"Description","text":"<p>Gets the value from lookup table <code>cos512</code> based on <code>angle</code> and sets it in <code>store</code>.</p>"},{"location":"RSDKv4/Functions/Math/Cos/#parameters","title":"Parameters","text":"<ul> <li><code>store</code> The variable to store the result.</li> <li><code>sngle</code> The value of angle.</li> </ul>"},{"location":"RSDKv4/Functions/Math/Cos/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Math/Cos/#syntax","title":"Syntax","text":"<pre><code>Cos(var store, int angle)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/Cos/#examples","title":"Examples","text":"<pre><code>Cos(temp0, object.value2)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/Cos256/","title":"Cos256","text":""},{"location":"RSDKv4/Functions/Math/Cos256/#description","title":"Description","text":"<p>Gets the value from lookup table <code>cos256</code> based on <code>angle</code> and sets it in <code>store</code>.</p>"},{"location":"RSDKv4/Functions/Math/Cos256/#parameters","title":"Parameters","text":"<ul> <li><code>store</code> The variable to store the result.</li> <li><code>angle</code> The value of angle.</li> </ul>"},{"location":"RSDKv4/Functions/Math/Cos256/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Math/Cos256/#syntax","title":"Syntax","text":"<pre><code>Cos256(var store, int angle)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/Cos256/#examples","title":"Examples","text":"<pre><code>Cos256(temp0, object.value2)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/GetBit/","title":"GetBit","text":""},{"location":"RSDKv4/Functions/Math/GetBit/#description","title":"Description","text":"<p>Gets bit at index <code>bitPos</code> from <code>value</code> and stores it in <code>store</code>.</p>"},{"location":"RSDKv4/Functions/Math/GetBit/#parameters","title":"Parameters","text":"<ul> <li><code>store</code> The variable to store the bit.</li> <li><code>value</code> The variable from where to search the required Bit.</li> <li><code>bitPos</code> The position of the bit to get, indices 0-7 are valid.</li> </ul>"},{"location":"RSDKv4/Functions/Math/GetBit/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Math/GetBit/#syntax","title":"Syntax","text":"<pre><code>GetBit(var store, var value, int bitPos)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/GetBit/#examples","title":"Examples","text":"<pre><code>GetBit(arrayPos0, temp3, 6)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/GetTableValue/","title":"GetTableValue","text":""},{"location":"RSDKv4/Functions/Math/GetTableValue/#description","title":"Description","text":"<p>Gets a value from <code>table</code> at <code>index</code> and stores it in <code>store</code>.</p>"},{"location":"RSDKv4/Functions/Math/GetTableValue/#parameters","title":"Parameters","text":"<ul> <li><code>store</code> Variable from where to save the read value.</li> <li><code>index</code> Tables's index to read.</li> <li><code>table</code> Name of the table from where to get the value.</li> </ul>"},{"location":"RSDKv4/Functions/Math/GetTableValue/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Math/GetTableValue/#syntax","title":"Syntax","text":"<pre><code>GetTableValue(var store, int index, table)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/GetTableValue/#examples","title":"Examples","text":"<pre><code>GetTableValue(arrayPos0, 3, TestObject_Table)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/Interpolate/","title":"Interpolate","text":""},{"location":"RSDKv4/Functions/Math/Interpolate/#description","title":"Description","text":"<p>Linearly interpolates (LERPs) <code>x</code> and <code>y</code> by <code>percent</code> and stores the result in <code>store</code>.</p>"},{"location":"RSDKv4/Functions/Math/Interpolate/#parameters","title":"Parameters","text":"<ul> <li><code>store</code> The variable to store the result.</li> <li><code>x</code>,<code>y</code> The values used for the interpolation.</li> <li><code>percent</code> Percentage of interpolation, can go from 0 to 256.</li> </ul>"},{"location":"RSDKv4/Functions/Math/Interpolate/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Math/Interpolate/#syntax","title":"Syntax","text":"<pre><code>Interpolate(var store, int x, int y, int percent)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/Interpolate/#examples","title":"Examples","text":"<pre><code>Interpolate(object.value2, 26, 29, 128)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/InterpolateXY/","title":"Interpolate","text":""},{"location":"RSDKv4/Functions/Math/InterpolateXY/#description","title":"Description","text":"<p>Linearly interpolates two points at once, <code>aX</code> with <code>aY</code>, and <code>bX</code> with <code>bY</code>. By <code>percent</code> and stores the result in <code>storeX</code> and <code>storeY</code>, respectively.</p>"},{"location":"RSDKv4/Functions/Math/InterpolateXY/#parameters","title":"Parameters","text":"<ul> <li><code>storeX</code>, <code>storeY</code> The variables to store the results.</li> <li><code>aX</code>, <code>aY</code>, <code>bX</code>, <code>bY</code> The values used for the interpolations.</li> <li><code>percent</code> Percentage of interpolation, can go from 0 to 256.</li> </ul>"},{"location":"RSDKv4/Functions/Math/InterpolateXY/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Math/InterpolateXY/#syntax","title":"Syntax","text":"<pre><code>InterpolateXY(var storeX, var storeY, int aX, int aY, int bX, int bY, int percent)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/InterpolateXY/#examples","title":"Examples","text":"<pre><code>InterpolateXY(object.value2, object.value3, 26, 29, 33, 37, 220)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/Not/","title":"Not","text":""},{"location":"RSDKv4/Functions/Math/Not/#description","title":"Description","text":"<p>Performs a NOT operation on <code>value</code> and updates it (<code>value</code> = <code>~value</code>)</p>"},{"location":"RSDKv4/Functions/Math/Not/#parameters","title":"Parameters","text":"<ul> <li><code>value</code> The variable to negate.</li> </ul>"},{"location":"RSDKv4/Functions/Math/Not/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Math/Not/#syntax","title":"Syntax","text":"<pre><code>Not(var value)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/Not/#examples","title":"Examples","text":"<pre><code>Not(temp4)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/Rand/","title":"Rand","text":""},{"location":"RSDKv4/Functions/Math/Rand/#description","title":"Description","text":"<p>Gets a random value from 0 to <code>max</code>(not included) and stores it in <code>store</code>.</p>"},{"location":"RSDKv4/Functions/Math/Rand/#parameters","title":"Parameters","text":"<ul> <li><code>store</code> Variable from where to store the result.</li> <li><code>max</code> Exclusive maximum for the random value to get.</li> </ul>"},{"location":"RSDKv4/Functions/Math/Rand/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Math/Rand/#syntax","title":"Syntax","text":"<pre><code>Rand(var store, int max)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/Rand/#examples","title":"Examples","text":"<pre><code>Rand(object.value3, 8)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/SetBit/","title":"SetBit","text":""},{"location":"RSDKv4/Functions/Math/SetBit/#description","title":"Description","text":"<p>Sets index <code>bitPos</code> of <code>value</code> to <code>bit</code> and updates <code>value</code> accordingly.</p>"},{"location":"RSDKv4/Functions/Math/SetBit/#parameters","title":"Parameters","text":"<ul> <li><code>value</code> The variable to update.</li> <li><code>bitPos</code> The position of the bit to set, indices 0-7 are valid.</li> <li><code>bit</code> Updated boolean value.</li> </ul>"},{"location":"RSDKv4/Functions/Math/SetBit/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Math/SetBit/#syntax","title":"Syntax","text":"<pre><code>SetBit(var value, int bitPos, bool bit)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/SetBit/#examples","title":"Examples","text":"<pre><code>SetBit(object.value7, 3, 1)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/SetTableValue/","title":"SetTableValue","text":""},{"location":"RSDKv4/Functions/Math/SetTableValue/#description","title":"Description","text":"<p>Sets value on <code>table</code> at <code>index</code> to <code>value</code>.</p>"},{"location":"RSDKv4/Functions/Math/SetTableValue/#parameters","title":"Parameters","text":"<ul> <li><code>value</code> <code>index</code> new value</li> <li><code>index</code> Tables's index to set.</li> <li><code>table</code> Name of the table from where to set the value.</li> </ul>"},{"location":"RSDKv4/Functions/Math/SetTableValue/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Math/SetTableValue/#syntax","title":"Syntax","text":"<pre><code>SetTableValue(int value, int index, table)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/SetTableValue/#examples","title":"Examples","text":"<pre><code>SetTableValue(55, 3, TestObject_Table)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/Sin/","title":"Sin","text":""},{"location":"RSDKv4/Functions/Math/Sin/#description","title":"Description","text":"<p>Gets the value from lookup table <code>sin512</code> based on <code>angle</code> and sets it in <code>store</code>.</p>"},{"location":"RSDKv4/Functions/Math/Sin/#parameters","title":"Parameters","text":"<ul> <li><code>store</code> The variable to store the result.</li> <li><code>angle</code> The value of angle.</li> </ul>"},{"location":"RSDKv4/Functions/Math/Sin/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Math/Sin/#syntax","title":"Syntax","text":"<pre><code>Sin(var store, int angle)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/Sin/#examples","title":"Examples","text":"<pre><code>Sin(object.value3, temp0)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/Sin256/","title":"Sin256","text":""},{"location":"RSDKv4/Functions/Math/Sin256/#description","title":"Description","text":"<p>Gets the value from lookup table <code>sin256</code> based on <code>angle</code> and sets it in <code>store</code>.</p>"},{"location":"RSDKv4/Functions/Math/Sin256/#parameters","title":"Parameters","text":"<ul> <li><code>store</code> The variable to store the result.</li> <li><code>angle</code> The value of angle.</li> </ul>"},{"location":"RSDKv4/Functions/Math/Sin256/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Math/Sin256/#syntax","title":"Syntax","text":"<pre><code>Sin256(var store, int angle)\n</code></pre>"},{"location":"RSDKv4/Functions/Math/Sin256/#examples","title":"Examples","text":"<pre><code>Sin256(object.value3, temp0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/AddMenuEntry/","title":"AddMenuEntry","text":""},{"location":"RSDKv4/Functions/Misc/AddMenuEntry/#description","title":"Description","text":"<p>Adds an entry to <code>menu</code> with the contents of <code>text</code>, The text will display highlighted if <code>highlightEntry</code> is set to true.</p>"},{"location":"RSDKv4/Functions/Misc/AddMenuEntry/#parameters","title":"Parameters","text":"<ul> <li><code>menu</code> The menu to setup, MENU_1 or MENU_2 are valid.</li> <li><code>text</code> New text to add in the menu.</li> <li><code>highlightEntry</code> Boolean that determines if the text will be highlighted always.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/AddMenuEntry/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/AddMenuEntry/#syntax","title":"Syntax","text":"<pre><code>AddMenuEntry(int menu, \"string Text\", bool highlightEntry)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/AddMenuEntry/#examples","title":"Examples","text":"<pre><code>AddMenuEntry(MENU_1, \"WELCOME TO THE SECRET SPECIAL STAGE\", true)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CheckTouchRect/","title":"CheckTouchRect","text":""},{"location":"RSDKv4/Functions/Misc/CheckTouchRect/#description","title":"Description","text":"<p>Check if there was a touch input between the inputted coordinates.</p>"},{"location":"RSDKv4/Functions/Misc/CheckTouchRect/#parameters","title":"Parameters","text":"<ul> <li><code>X1</code> Left side of the rectangle.</li> <li><code>X2</code> Right side of the rectangle.</li> <li><code>Y1</code> Top side of the rectangle.</li> <li><code>Y2</code> Bottom side of the rectangle.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CheckTouchRect/#return-value","title":"Return Value","text":"<p>Will set <code>checkResult</code> to <code>true</code> if there was a touch press inside the rectangle.</p>"},{"location":"RSDKv4/Functions/Misc/CheckTouchRect/#syntax","title":"Syntax","text":"<pre><code>CheckTouchRect(int X1, int Y1, int X2, int Y2)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CheckTouchRect/#examples","title":"Examples","text":"<pre><code>CheckTouchRect(0, 0, Screen.XSize, Screen.YSize)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/DrawMenu/","title":"DrawMenu","text":""},{"location":"RSDKv4/Functions/Misc/DrawMenu/#description","title":"Description","text":"<p>Draws <code>menu</code> at <code>xPos</code> and <code>yPos</code> relative to the screen.</p>"},{"location":"RSDKv4/Functions/Misc/DrawMenu/#parameters","title":"Parameters","text":"<ul> <li><code>menu</code> The menu to draw, MENU_1 or MENU_2 are valid.</li> <li><code>xPos</code> Position of the menu on the horizontal axis.</li> <li><code>yPos</code> Position of the menu on the vertical axis.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/DrawMenu/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/DrawMenu/#syntax","title":"Syntax","text":"<pre><code>DrawMenu(int menu, int xPos, int yPos)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/DrawMenu/#examples","title":"Examples","text":"<pre><code>DrawMenu(MENU_1, screen.xcenter, screen.ycenter)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/EditMenuEntry/","title":"EditMenuEntry","text":""},{"location":"RSDKv4/Functions/Misc/EditMenuEntry/#description","title":"Description","text":"<p>Edits an entry of <code>menu</code> with the contents of <code>text</code> in <code>rowID</code>, The text will display highlighted if <code>highlightEntry</code> is set to true.</p>"},{"location":"RSDKv4/Functions/Misc/EditMenuEntry/#parameters","title":"Parameters","text":"<ul> <li><code>menu</code> The menu to setup, MENU_1 or MENU_2 are valid.</li> <li><code>text</code> New text to add in the menu.</li> <li><code>rowID</code> The row to edit.</li> <li><code>highlightEntry</code> Boolean that determines if the text will be highlighted always.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/EditMenuEntry/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/EditMenuEntry/#syntax","title":"Syntax","text":"<pre><code>EditMenuEntry(int menu, \"string Text\", bool highlightEntry)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/EditMenuEntry/#examples","title":"Examples","text":"<pre><code>EditMenuEntry(MENU_1, \"THIS IS AN EXAMPLE\", 0, true)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/GetTextInfo/","title":"GetTextInfo","text":""},{"location":"RSDKv4/Functions/Misc/GetTextInfo/#description","title":"Description","text":"<p>Gets the data of <code>type</code> from <code>menu</code> using <code>index</code>, and stores it in <code>store</code>.</p>"},{"location":"RSDKv4/Functions/Misc/GetTextInfo/#parameters","title":"Parameters","text":"<ul> <li><code>store</code> Variable where the data will be saved.</li> <li><code>menu</code> The menu from where to get the data, MENU_1 or MENU_2 are valid.</li> <li><code>type</code> The type of data to read, valid values are 0(TEXTINFO_TEXTDATA), 1(TEXTINFO_TEXTSIZE) or 2(TEXTINFO_ROWCOUNT)</li> <li><code>index</code> Index of the text row from where to get the data.</li> <li><code>offset</code> Offset for the text at <code>index</code>, only used if <code>type</code> is TEXTINFO_TEXTDATA.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/GetTextInfo/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/GetTextInfo/#syntax","title":"Syntax","text":"<pre><code>GetTextInfo(var store, int menu, int type, int index, int offset)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/GetTextInfo/#examples","title":"Examples","text":""},{"location":"RSDKv4/Functions/Misc/GetVersionNumber/","title":"GetVersionNumber","text":""},{"location":"RSDKv4/Functions/Misc/GetVersionNumber/#description","title":"Description","text":"<p>Adds a text entry to <code>menu</code> with the game's version as the text, The text will display highlighted if <code>highlightEntry</code> is set to true.</p>"},{"location":"RSDKv4/Functions/Misc/GetVersionNumber/#parameters","title":"Parameters","text":"<ul> <li><code>menu</code> The menu to add the text to, MENU_1 or MENU_2 are valid.</li> <li><code>highlightEntry</code> Boolean that determines if the text will be highlighted always.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/GetVersionNumber/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/GetVersionNumber/#syntax","title":"Syntax","text":"<pre><code>GetVersionNumber(int menu, bool highlightEntry)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/GetVersionNumber/#examples","title":"Examples","text":"<pre><code>GetVersionNumber(MENU_2, true)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/LoadTextFile/","title":"LoadTextFile","text":""},{"location":"RSDKv4/Functions/Misc/LoadTextFile/#description","title":"Description","text":"<p>Loads a <code>menu</code> based on the file loaded from <code>filePath</code>.</p>"},{"location":"RSDKv4/Functions/Misc/LoadTextFile/#parameters","title":"Parameters","text":"<ul> <li><code>menu</code> The menu to which the file will load, MENU_1 or MENU_2 are valid.</li> <li><code>filePath</code> The path to the text file.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/LoadTextFile/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/LoadTextFile/#syntax","title":"Syntax","text":"<pre><code>LoadTextFile(int menu, \"string filePath\")\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/LoadTextFile/#examples","title":"Examples","text":"<pre><code>LoadTextFile(MENU_1, \"Data/Game/Credits_Mobile.txt\")\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/Print/","title":"Print","text":""},{"location":"RSDKv4/Functions/Misc/Print/#description","title":"Description","text":"<p>Prints a message to <code>log.txt</code>.</p>"},{"location":"RSDKv4/Functions/Misc/Print/#parameters","title":"Parameters","text":"<ul> <li><code>Message</code> The string or int to be printed.</li> <li><code>isInt</code> <code>Message</code> will be printed as a string if <code>false</code>, and as an integer if <code>true</code></li> <li><code>useEndLine</code> Jump line if true, otherwise keep on the same line.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/Print/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/Print/#syntax","title":"Syntax","text":"<pre><code>Print(string/int message, bool isInt, bool useEndLine)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/Print/#examples","title":"Examples","text":"<p><pre><code>Print(\"This is a test message, \", false, false)\n</code></pre> <pre><code>Print(\"The next print will be an int: \", false, false)\n</code></pre> <pre><code>Print(object.value7, true, true)\n</code></pre></p>"},{"location":"RSDKv4/Functions/Misc/ReadSaveRAM/","title":"ReadSaveRAM","text":""},{"location":"RSDKv4/Functions/Misc/ReadSaveRAM/#description","title":"Description","text":"<p>Reads the contents of the save file on disk into SaveRAM.</p>"},{"location":"RSDKv4/Functions/Misc/ReadSaveRAM/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/ReadSaveRAM/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/ReadSaveRAM/#syntax","title":"Syntax","text":"<pre><code>ReadSaveRAM()\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/ReadSaveRAM/#notes","title":"Notes","text":"<p>ReadSaveRAM() will overwrite any current values.</p>"},{"location":"RSDKv4/Functions/Misc/SetupMenu/","title":"SetupMenu","text":""},{"location":"RSDKv4/Functions/Misc/SetupMenu/#description","title":"Description","text":"<p>Sets up <code>menu</code> with <code>rowCount</code> rows, <code>selectionCount</code> active selections and aligning to <code>alignment</code>.</p>"},{"location":"RSDKv4/Functions/Misc/SetupMenu/#parameters","title":"Parameters","text":"<ul> <li><code>menu</code> The menu to setup, MENU_1 or MENU_2 are valid.</li> <li><code>rowCount</code> The amount of rows the menu starts with.</li> <li><code>selectionCount</code> Selection of highlight.</li> <li><code>alignment</code> Alignment of the text, 0 will be to the right, 1 to the left, and 2 centered.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/SetupMenu/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/SetupMenu/#syntax","title":"Syntax","text":"<pre><code>SetupMenu(int menu, int rowCount, int selectionCount, int alignment)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/SetupMenu/#examples","title":"Examples","text":"<pre><code>SetupMenu(MENU_1, 0, 3, 1)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/WriteSaveRAM/","title":"WriteSaveRAM","text":""},{"location":"RSDKv4/Functions/Misc/WriteSaveRAM/#description","title":"Description","text":"<p>Writes the contents of the save file on disk.</p>"},{"location":"RSDKv4/Functions/Misc/WriteSaveRAM/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/WriteSaveRAM/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/WriteSaveRAM/#syntax","title":"Syntax","text":"<pre><code>WriteSaveRAM()\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/","title":"CallNativeFunction","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/#description","title":"Description","text":"<p>Sends a callback to the engine to run a native function. There are three versions of the function that can be used depending on the amount of parameters needed for the callback:</p> <ul> <li><code>CallNativeFunction</code> (no parameters)</li> <li><code>CallNativeFunction2</code> (two parameters)</li> <li><code>CallNativeFunction4</code> (four parameters)</li> </ul> <p>In order to call a native function by name, a global variable named after the function must be added to the GameConfig. Once added, the engine will automatically set the value of the global variable to the ID of the native function.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/#parameters","title":"Parameters","text":"<ul> <li><code>callbackFuncID</code> The index value of the callback.</li> <li><code>param1</code>, <code>param2</code>, <code>param3</code>, <code>param4</code> Parameters to use for the callback.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/#return-value","title":"Return Value","text":"<p>Depends on the callback used.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/#syntax","title":"Syntax","text":"<p><pre><code>CallNativeFunction(int callbackFuncID)\n</code></pre> <pre><code>CallNativeFunction2(int callbackFuncID, param1, param2)\n</code></pre> <pre><code>CallNativeFunction4(int callbackFuncID, param1, param2, param3, param4)\n</code></pre></p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/#examples","title":"Examples","text":"<p><pre><code>CallNativeFunction(Disconnect2PVS)\n</code></pre> <pre><code>CallNativeFunction2(TransmitGlobal, \"vs.randomValue\", vs.randomValue)\n</code></pre> <pre><code>CallNativeFunction4(NotifyCallback, NOTIFY_STATS_ENEMY, StageStatsUsabilityParam1, StageStatsUsabilityParam2, StageStatsUsabilityParam3)\n</code></pre></p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/#native-functions","title":"Native Functions","text":"<ul> <li>SetAchievement</li> <li>SetLeaderboard</li> <li>HapticEffect</li> <li>Connect2PVS</li> <li>Disconnect2PVS</li> <li>SendEntity</li> <li>SendValue</li> <li>ReceiveEntity</li> <li>ReceiveValue</li> <li>TransmitGlobal</li> <li>ShowPromoPopup</li> <li>NativePlayerWaitingAds</li> <li>NativeWaterPlayerWaitingAds</li> <li>NotifyCallback</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/#decomp-only-native-functions","title":"Decomp-Only Native Functions","text":"<ul> <li>SetNetworkGameName</li> <li>ExitGame</li> <li>FileExists</li> <li>OpenModMenu</li> <li>AddAchievement</li> <li>SetAchievementDescription</li> <li>ClearAchievements</li> <li>GetAchievementCount</li> <li>GetAchievement</li> <li>GetAchievementName</li> <li>GetAchievementDescription</li> <li>GetScreenWidth</li> <li>SetScreenWidth</li> <li>GetWindowScale</li> <li>SetWindowScale</li> <li>GetWindowScaleMode</li> <li>SetWindowScaleMode</li> <li>GetWindowFullScreen</li> <li>SetWindowFullScreen</li> <li>GetWindowBorderless</li> <li>SetWindowBorderless</li> <li>GetWindowVSync</li> <li>SetWindowVSync</li> <li>ApplyWindowChanges</li> <li>GetModCount</li> <li>GetModName</li> <li>GetModDescription</li> <li>GetModAuthor</li> <li>GetModVersion</li> <li>GetModActive</li> <li>SetModActive</li> <li>MoveMod</li> <li>RefreshEngine</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/AddAchievement/","title":"AddAchievement","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/AddAchievement/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/AddAchievement/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/AddAchievement/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/AddAchievement/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/AddAchievement/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ApplyWindowChanges/","title":"ApplyWindowChanges","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ApplyWindowChanges/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ApplyWindowChanges/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ApplyWindowChanges/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ApplyWindowChanges/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ApplyWindowChanges/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ClearAchievements/","title":"ClearAchievements","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ClearAchievements/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ClearAchievements/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ClearAchievements/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ClearAchievements/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ClearAchievements/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Connect2PVS/","title":"Connect2PVS","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Connect2PVS/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Connect2PVS/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Connect2PVS/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Connect2PVS/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Connect2PVS/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Disconnect2PVS/","title":"Disconnect2PVS","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Disconnect2PVS/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Disconnect2PVS/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Disconnect2PVS/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Disconnect2PVS/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Disconnect2PVS/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ExitGame/","title":"ExitGame","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ExitGame/#description","title":"Description","text":"<p>Closes the engine.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ExitGame/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ExitGame/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ExitGame/#examples","title":"Examples","text":"<pre><code>CallNativeFunction(ExitGame)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/FileExists/","title":"FileExists","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/FileExists/#description","title":"Description","text":"<p>Checks if a file exists in the Data assets.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/FileExists/#parameters","title":"Parameters","text":"<ul> <li><code>unused</code> Unused parameter.</li> <li><code>filePath</code> The path to the target file, relative to the root of the Data assets.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/FileExists/#return-value","title":"Return Value","text":"<p>Sets <code>checkResult</code> to <code>true</code> if the given file exists, or <code>false</code> if it doesn't.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/FileExists/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(FileExists, int unused, string filePath)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/FileExists/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(FileExists, 0, \"Data/Game/GameConfig.bin\")\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievement/","title":"GetAchievement","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievement/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievement/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievement/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievement/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievement/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementCount/","title":"GetAchievementCount","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementCount/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementCount/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementCount/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementCount/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementCount/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementDescription/","title":"GetAchievementDescription","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementDescription/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementDescription/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementDescription/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementDescription/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementDescription/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementName/","title":"GetAchievementName","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementName/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementName/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementName/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementName/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementName/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModActive/","title":"GetModActive","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModActive/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModActive/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModActive/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModActive/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModActive/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModAuthor/","title":"GetModAuthor","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModAuthor/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModAuthor/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModAuthor/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModAuthor/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModAuthor/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModCount/","title":"GetModCount","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModCount/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModCount/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModCount/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModCount/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModCount/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModDescription/","title":"GetModDescription","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModDescription/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModDescription/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModDescription/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModDescription/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModDescription/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModName/","title":"GetModName","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModName/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModName/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModName/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModName/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModName/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModVersion/","title":"GetModVersion","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModVersion/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModVersion/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModVersion/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModVersion/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModVersion/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetScreenWidth/","title":"GetScreenWidth","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetScreenWidth/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetScreenWidth/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetScreenWidth/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetScreenWidth/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetScreenWidth/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowBorderless/","title":"GetWindowBorderless","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowBorderless/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowBorderless/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowBorderless/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowBorderless/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowBorderless/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowFullScreen/","title":"GetWindowFullScreen","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowFullScreen/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowFullScreen/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowFullScreen/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowFullScreen/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowFullScreen/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScale/","title":"GetWindowScale","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScale/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScale/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScale/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScale/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScale/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScaleMode/","title":"GetWindowScaleMode","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScaleMode/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScaleMode/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScaleMode/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScaleMode/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScaleMode/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowVSync/","title":"GetWindowVSync","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowVSync/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowVSync/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowVSync/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowVSync/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowVSync/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/HapticEffect/","title":"HapticEffect","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/HapticEffect/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/HapticEffect/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/HapticEffect/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/HapticEffect/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/HapticEffect/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/MoveMod/","title":"MoveMod","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/MoveMod/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/MoveMod/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/MoveMod/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/MoveMod/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/MoveMod/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativePlayerWaitingAds/","title":"NativePlayerWaitingAds","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativePlayerWaitingAds/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativePlayerWaitingAds/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativePlayerWaitingAds/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativePlayerWaitingAds/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativePlayerWaitingAds/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativeWaterPlayerWaitingAds/","title":"NativeWaterPlayerWaitingAds","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativeWaterPlayerWaitingAds/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativeWaterPlayerWaitingAds/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativeWaterPlayerWaitingAds/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativeWaterPlayerWaitingAds/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativeWaterPlayerWaitingAds/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/OpenModMenu/","title":"OpenModMenu","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/OpenModMenu/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/OpenModMenu/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/OpenModMenu/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/OpenModMenu/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/OpenModMenu/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveEntity/","title":"ReceiveEntity","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveEntity/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveEntity/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveEntity/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveEntity/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveEntity/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveValue/","title":"ReceiveValue","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveValue/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveValue/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveValue/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveValue/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveValue/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/RefreshEngine/","title":"RefreshEngine","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/RefreshEngine/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/RefreshEngine/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/RefreshEngine/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/RefreshEngine/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/RefreshEngine/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendEntity/","title":"SendEntity","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendEntity/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendEntity/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendEntity/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendEntity/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendEntity/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendValue/","title":"SendValue","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendValue/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendValue/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendValue/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendValue/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendValue/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievement/","title":"SetAchievement","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievement/#description","title":"Description","text":"<p>Sets the status of the given achievement. This function does nothing if trial mode or debug mode are enabled.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievement/#parameters","title":"Parameters","text":"<ul> <li><code>id</code> The index value of the achievement.</li> <li><code>status</code> The status (progress) to set the achievement to, with a range of 0 to 100. If the status is 100, the achievement is considered achieved and will be awarded to the player.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievement/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievement/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(SetAchievement, int id, int status)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievement/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(SetAchievement, 0, 100)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievement/#sonic-1-achievement-ids","title":"Sonic 1 Achievement IDs","text":"ID Achievement 0 Ramp Ring Acrobatics 1 Blast Processing 2 Secret of Marble Zone 3 Block Buster 4 Ring King 5 Secret of Labyrinth Zone 6 Flawless Pursuit 7 Bombs Away 8 Hidden Transporter 9 Chaos Connoisseur 10 One For the Road 11 Beat The Clock"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievement/#sonic-2-achievement-ids","title":"Sonic 2 Achievement IDs","text":"ID Achievement 0 Quick Run 1 100% Chemical Free 2 Early Bird Special 3 Superstar 4 Hit it Big 5 Bop Non-stop 6 Perfectionist 7 A Secret Revealed 8 Head 2 Head 9 Metropolis Master 10 Scrambled Egg 11 Beat The Clock"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievementDescription/","title":"SetAchievementDescription","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievementDescription/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievementDescription/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievementDescription/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievementDescription/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievementDescription/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetLeaderboard/","title":"SetLeaderboard","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetLeaderboard/#description","title":"Description","text":"<p>Submits the given score to the given leaderboard. This function does nothing if trial mode or debug mode are enabled.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetLeaderboard/#parameters","title":"Parameters","text":"<ul> <li><code>leaderboardID</code> The index value of the leaderboard.</li> <li><code>score</code> The score to submit to the leaderboard. The score will not be submitted if it's lower than the score already in the leaderboard.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetLeaderboard/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetLeaderboard/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(SetLeaderboard, int leaderboardID, int score)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetLeaderboard/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(SetLeaderboard, 19, player.score)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetLeaderboard/#sonic-1-leaderboard-ids","title":"Sonic 1 Leaderboard IDs","text":"ID Leaderboard 0 Time Attack - Green Hill Zone Act 1 1 Time Attack - Green Hill Zone Act 2 2 Time Attack - Green Hill Zone Act 3 3 Time Attack - Marble Zone Act 1 4 Time Attack - Marble Zone Act 2 5 Time Attack - Marble Zone Act 3 6 Time Attack - Spring Yard Zone Act 1 7 Time Attack - Spring Yard Zone Act 2 8 Time Attack - Spring Yard Zone Act 3 9 Time Attack - Labyrinth Zone Act 1 10 Time Attack - Labyrinth Zone Act 2 11 Time Attack - Labyrinth Zone Act 3 12 Time Attack - Star Light Zone Act 1 13 Time Attack - Star Light Zone Act 2 14 Time Attack - Star Light Zone Act 3 15 Time Attack - Scrap Brain Zone Act 1 16 Time Attack - Scrap Brain Zone Act 2 17 Time Attack - Scrap Brain Zone Act 3 18 Time Attack - Final Zone 19 Best Game Score"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetLeaderboard/#sonic-2-leaderboard-ids","title":"Sonic 2 Leaderboard IDs","text":"ID Leaderboard 0 Best Time - Emerald Hill Zone Act 1 1 Best Time - Emerald Hill Zone Act 2 2 Best Time - Chemical Plant Zone Act 1 3 Best Time - Chemical Plant Zone Act 2 4 Best Time - Aquatic Ruin Zone Act 1 5 Best Time - Aquatic Ruin Zone Act 2 6 Best Time - Casino Night Zone Act 1 7 Best Time - Casino Night Zone Act 2 8 Best Time - Hill Top Zone Act 1 9 Best Time - Hill Top Zone Act 2 10 Best Time - Mystic Cave Zone Act 1 11 Best Time - Mystic Cave Zone Act 2 12 Best Time - Oil Ocean Zone Act 1 13 Best Time - Oil Ocean Zone Act 2 14 Best Time - Metropolis Zone Act 1 15 Best Time - Metropolis Zone Act 2 16 Best Time - Metropolis Zone Act 3 17 Unused 18 Best Time - Wing Fortress Zone 19 Unused 20 Best Time - Hidden Palace Zone 21 Best Time - Boss Attack Zone 22 Best Game Score"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetModActive/","title":"SetModActive","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetModActive/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetModActive/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetModActive/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetModActive/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetModActive/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetNetworkGameName/","title":"SetNetworkGameName","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetNetworkGameName/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetNetworkGameName/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetNetworkGameName/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetNetworkGameName/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetNetworkGameName/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetScreenWidth/","title":"SetScreenWidth","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetScreenWidth/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetScreenWidth/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetScreenWidth/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetScreenWidth/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetScreenWidth/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowBorderless/","title":"SetWindowBorderless","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowBorderless/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowBorderless/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowBorderless/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowBorderless/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowBorderless/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowFullScreen/","title":"SetWindowFullScreen","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowFullScreen/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowFullScreen/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowFullScreen/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowFullScreen/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowFullScreen/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScale/","title":"SetWindowScale","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScale/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScale/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScale/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScale/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScale/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScaleMode/","title":"SetWindowScaleMode","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScaleMode/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScaleMode/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScaleMode/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScaleMode/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScaleMode/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowVSync/","title":"SetWindowVSync","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowVSync/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowVSync/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowVSync/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowVSync/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowVSync/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ShowPromoPopup/","title":"ShowPromoPopup","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ShowPromoPopup/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ShowPromoPopup/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ShowPromoPopup/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ShowPromoPopup/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ShowPromoPopup/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/TransmitGlobal/","title":"TransmitGlobal","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/TransmitGlobal/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/TransmitGlobal/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/TransmitGlobal/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/TransmitGlobal/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/TransmitGlobal/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/","title":"NotifyCallback","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/#description","title":"Description","text":"<p>Sends the given callback to communicate to Hedgehog Engine 2.</p> <p>Unlike native functions, NotifyCallback callbacks do not have their IDs automatically set by the engine; they must be manually specified instead. However, Sonic Team still elected to define callback aliases as global varaiables.</p> <p>This native function only exists in Sonic Origins.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/#parameters","title":"Parameters","text":"<ul> <li><code>callback</code> The index value of the callback.</li> <li><code>param1</code>, <code>param2</code>, <code>param3</code> Parameters to use for the callback.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/#return-value","title":"Return Value","text":"<p>Depends on the callback used.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/#syntax","title":"Syntax","text":"<p><pre><code>CallNativeFunction2(NotifyCallback, int callback, int param1)\n</code></pre> <pre><code>CallNativeFunction4(NotifyCallback, int callback, int param1, int param2, int param3)\n</code></pre></p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/#examples","title":"Examples","text":"<p><pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_ADD_COIN, 1)\n</code></pre> <pre><code>CallNativeFunction4(NotifyCallback, NOTIFY_STATS_CHARA_ACTION, 1, 0, 0)\n</code></pre></p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/#callbacks","title":"Callbacks","text":"ID Callback 128 NOTIFY_DEATH_EVENT 129 NOTIFY_TOUCH_SIGNPOST 130 NOTIFY_HUD_ENABLE 131 NOTIFY_ADD_COIN 132 NOTIFY_KILL_ENEMY 133 NOTIFY_SAVESLOT_SELECT 134 NOTIFY_FUTURE_PAST 135 NOTIFY_GOTO_FUTURE_PAST 136 NOTIFY_BOSS_END 137 NOTIFY_SPECIAL_END 138 NOTIFY_DEBUGPRINT 139 NOTIFY_KILL_BOSS 140 NOTIFY_TOUCH_EMERALD 141 NOTIFY_STATS_ENEMY 142 NOTIFY_STATS_CHARA_ACTION 143 NOTIFY_STATS_RING 144 NOTIFY_STATS_MOVIE 145 NOTIFY_STATS_PARAM_1 146 NOTIFY_STATS_PARAM_2 147 NOTIFY_CHARACTER_SELECT 148 NOTIFY_SPECIAL_RETRY 149 NOTIFY_TOUCH_CHECKPOINT 150 NOTIFY_ACT_FINISH 151 NOTIFY_1P_VS_SELECT 152 NOTIFY_CONTROLLER_SUPPORT 153 NOTIFY_STAGE_RETRY 154 NOTIFY_SOUND_TRACK 155 NOTIFY_GOOD_ENDING 156 NOTIFY_BACK_TO_MAINMENU 157 NOTIFY_LEVEL_SELECT_MENU 158 NOTIFY_PLAYER_SET 159 NOTIFY_EXTRAS_MODE 160 NOTIFY_SPIN_DASH_TYPE 161 NOTIFY_TIME_OVER 162 NOTIFY_TIMEATTACK_MODE 163 NOTIFY_STATS_BREAK_OBJECT 164 NOTIFY_STATS_SAVE_FUTURE 165 NOTIFY_STATS_CHARA_ACTION2"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/1PVSSelect/","title":"NOTIFY_1P_VS_SELECT","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/1PVSSelect/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/1PVSSelect/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/1PVSSelect/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/1PVSSelect/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/1PVSSelect/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/ActFinish/","title":"NOTIFY_ACT_FINISH","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/ActFinish/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/ActFinish/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/ActFinish/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/ActFinish/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/ActFinish/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/AddCoin/","title":"NOTIFY_ADD_COIN","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/AddCoin/#description","title":"Description","text":"<p>Awards the player the given amount of coins.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/AddCoin/#parameters","title":"Parameters","text":"<ul> <li><code>count</code> The number of coins to give the player.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/AddCoin/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/AddCoin/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_ADD_COIN, int count)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/AddCoin/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_ADD_COIN, 1)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/BackToMainMenu/","title":"NOTIFY_BACK_TO_MAINMENU","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/BackToMainMenu/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/BackToMainMenu/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/BackToMainMenu/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/BackToMainMenu/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/BackToMainMenu/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/BossEnd/","title":"NOTIFY_BOSS_END","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/BossEnd/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/BossEnd/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/BossEnd/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/BossEnd/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/BossEnd/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/CharacterSelect/","title":"NOTIFY_CHARACTER_SELECT","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/CharacterSelect/#description","title":"Description","text":"<p>Opens Sonic Origins's character select menu, then sets <code>game.callbackResult</code> and <code>game.continueFlag</code> when the menu is closed.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/CharacterSelect/#parameters","title":"Parameters","text":"<ul> <li><code>unused</code> Unused parameter.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/CharacterSelect/#return-value","title":"Return Value","text":"<p>If the menu is backed out of without selecting a save slot, <code>game.callbackResult</code> is set to <code>0</code>; otherwise, it's set to <code>1</code>. If the selected save slot is an existing save, <code>game.continueFlag</code> is set to <code>1</code>.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/CharacterSelect/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CHARACTER_SELECT, int unused)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/CharacterSelect/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CHARACTER_SELECT, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/ControllerSupport/","title":"NOTIFY_CONTROLLER_SUPPORT","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/ControllerSupport/#description","title":"Description","text":"<p>Opens the controller setup screen in the Nintendo Switch version of the game, then sets <code>game.callbackResult</code> based on the platform and controller count.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/ControllerSupport/#parameters","title":"Parameters","text":"<ul> <li><code>unused</code> Unused parameter.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/ControllerSupport/#return-value","title":"Return Value","text":"<p><code>game.callbackResult</code> is set based on the platform and controller count: <pre><code>graph LR\n  A[Callback called] --&gt; B{Is on Nintendo\\nSwitch version?}\n  B --&gt; |Yes| C[Wait until controller\\nsetup screen is closed]\n  C --&gt; D{Are two controllers\\nconnected?}\n  D --&gt; |Yes| E[game.callbackResult\\nis set to 1]\n  D --&gt; |No| F[game.callbackResult\\nis set to 0]\n  B --&gt; |No| E</code></pre></p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/ControllerSupport/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CONTROLLER_SUPPORT, int unused)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/ControllerSupport/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CONTROLLER_SUPPORT, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/DeathEvent/","title":"NOTIFY_DEATH_EVENT","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/DeathEvent/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/DeathEvent/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/DeathEvent/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/DeathEvent/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/DeathEvent/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/DebugPrint/","title":"NOTIFY_DEBUGPRINT","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/DebugPrint/#description","title":"Description","text":"<p>Has no effect in-game, but would have likely printed the given values to the console in debug builds of Sonic Origins.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/DebugPrint/#parameters","title":"Parameters","text":"<ul> <li><code>value1</code>, <code>value2</code>, <code>value3</code> The values to (supposedly) print.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/DebugPrint/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/DebugPrint/#syntax","title":"Syntax","text":"<p><pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_DEBUGPRINT, int value1)\n</code></pre> <pre><code>CallNativeFunction4(NotifyCallback, NOTIFY_DEBUGPRINT, int value1, int value2, int value3)\n</code></pre></p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/DebugPrint/#examples","title":"Examples","text":"<p><pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_DEBUGPRINT, object.state)\n</code></pre> <pre><code>CallNativeFunction4(NotifyCallback, NOTIFY_DEBUGPRINT, 100, object.propertyValue, object.timer)\n</code></pre></p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/ExtrasMode/","title":"NOTIFY_EXTRAS_MODE","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/ExtrasMode/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/ExtrasMode/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/ExtrasMode/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/ExtrasMode/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/ExtrasMode/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/FuturePast/","title":"NOTIFY_FUTURE_PAST","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/FuturePast/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/FuturePast/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/FuturePast/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/FuturePast/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/FuturePast/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/GoodEnding/","title":"NOTIFY_GOOD_ENDING","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/GoodEnding/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/GoodEnding/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/GoodEnding/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/GoodEnding/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/GoodEnding/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/GotoFuturePast/","title":"NOTIFY_GOTO_FUTURE_PAST","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/GotoFuturePast/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/GotoFuturePast/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/GotoFuturePast/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/GotoFuturePast/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/GotoFuturePast/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/HUDEnable/","title":"NOTIFY_HUD_ENABLE","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/HUDEnable/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/HUDEnable/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/HUDEnable/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/HUDEnable/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/HUDEnable/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/KillBoss/","title":"NOTIFY_KILL_BOSS","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/KillBoss/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/KillBoss/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/KillBoss/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/KillBoss/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/KillBoss/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/KillEnemy/","title":"NOTIFY_KILL_ENEMY","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/KillEnemy/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/KillEnemy/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/KillEnemy/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/KillEnemy/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/KillEnemy/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/LevelSelectMenu/","title":"NOTIFY_LEVEL_SELECT_MENU","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/LevelSelectMenu/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/LevelSelectMenu/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/LevelSelectMenu/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/LevelSelectMenu/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/LevelSelectMenu/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/PlayerSet/","title":"NOTIFY_PLAYER_SET","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/PlayerSet/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/PlayerSet/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/PlayerSet/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/PlayerSet/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/PlayerSet/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SaveSlotSelect/","title":"NOTIFY_SAVESLOT_SELECT","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SaveSlotSelect/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SaveSlotSelect/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SaveSlotSelect/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SaveSlotSelect/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SaveSlotSelect/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SoundTrack/","title":"NOTIFY_SOUND_TRACK","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SoundTrack/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SoundTrack/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SoundTrack/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SoundTrack/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SoundTrack/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SpecialEnd/","title":"NOTIFY_SPECIAL_END","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SpecialEnd/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SpecialEnd/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SpecialEnd/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SpecialEnd/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SpecialEnd/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SpecialRetry/","title":"NOTIFY_SPECIAL_RETRY","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SpecialRetry/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SpecialRetry/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SpecialRetry/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SpecialRetry/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SpecialRetry/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SpindashType/","title":"NOTIFY_SPIN_DASH_TYPE","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SpindashType/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SpindashType/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SpindashType/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SpindashType/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/SpindashType/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StageRetry/","title":"NOTIFY_STAGE_RETRY","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StageRetry/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StageRetry/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StageRetry/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StageRetry/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StageRetry/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsBreakObject/","title":"NOTIFY_STATS_BREAK_OBJECT","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsBreakObject/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsBreakObject/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsBreakObject/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsBreakObject/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsBreakObject/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsCharaAction/","title":"NOTIFY_STATS_CHARA_ACTION","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsCharaAction/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsCharaAction/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsCharaAction/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsCharaAction/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsCharaAction/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsCharaAction2/","title":"NOTIFY_STATS_CHARA_ACTION2","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsCharaAction2/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsCharaAction2/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsCharaAction2/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsCharaAction2/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsCharaAction2/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsEnemy/","title":"NOTIFY_STATS_ENEMY","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsEnemy/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsEnemy/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsEnemy/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsEnemy/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsEnemy/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsMovie/","title":"NOTIFY_STATS_MOVIE","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsMovie/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsMovie/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsMovie/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsMovie/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsMovie/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsParam1/","title":"NOTIFY_STATS_PARAM_1","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsParam1/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsParam1/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsParam1/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsParam1/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsParam1/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsParam2/","title":"NOTIFY_STATS_PARAM_2","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsParam2/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsParam2/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsParam2/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsParam2/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsParam2/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsRing/","title":"NOTIFY_STATS_RING","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsRing/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsRing/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsRing/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsRing/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsRing/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsSaveFuture/","title":"NOTIFY_STATS_SAVE_FUTURE","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsSaveFuture/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsSaveFuture/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsSaveFuture/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsSaveFuture/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/StatsSaveFuture/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TimeAttackMode/","title":"NOTIFY_TIMEATTACK_MODE","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TimeAttackMode/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TimeAttackMode/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TimeAttackMode/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TimeAttackMode/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TimeAttackMode/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TimeOver/","title":"NOTIFY_TIME_OVER","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TimeOver/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TimeOver/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TimeOver/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TimeOver/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TimeOver/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TouchCheckpoint/","title":"NOTIFY_TOUCH_CHECKPOINT","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TouchCheckpoint/#description","title":"Description","text":"<p>Notifies Hedgehog Engine 2 that a Lamp Post/Star Post has been touched.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TouchCheckpoint/#parameters","title":"Parameters","text":"<ul> <li><code>unused</code> Unused parameter.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TouchCheckpoint/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TouchCheckpoint/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_TOUCH_CHECKPOINT, int unused)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TouchCheckpoint/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_TOUCH_CHECKPOINT, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TouchEmerald/","title":"NOTIFY_TOUCH_EMERALD","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TouchEmerald/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TouchEmerald/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TouchEmerald/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TouchEmerald/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TouchEmerald/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TouchSignPost/","title":"NOTIFY_TOUCH_SIGNPOST","text":""},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TouchSignPost/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TouchSignPost/#parameters","title":"Parameters","text":"<ul> <li><code>todo</code> Todo.</li> <li><code>todo</code> Todo.</li> </ul>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TouchSignPost/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TouchSignPost/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NotifyCallback, int todo, int todo)\n</code></pre>"},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/TouchSignPost/#examples","title":"Examples","text":"<pre><code>CallNativeFunction2(NotifyCallback, 0, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Object/BoxCollisionTest/","title":"BoxCollisionTest","text":""},{"location":"RSDKv4/Functions/Object/BoxCollisionTest/#description","title":"Description","text":"<p>Checks for collision of an object with another, using the <code>hitBox</code> values passed.</p>"},{"location":"RSDKv4/Functions/Object/BoxCollisionTest/#parameters","title":"Parameters","text":"<ul> <li><code>collisionType</code> Type of collision with the object. Can be <code>C_TOUCH</code>, <code>C_SOLID</code>, <code>C_SOLID2</code>, or <code>C_PLATFORM</code>.</li> <li><code>thisObject</code> The source of the collision.</li> <li><code>thisLeft</code> / <code>thisTop</code> / <code>thisRight</code> / <code>thisBottom</code> The values of the object's hitbox.</li> <li><code>otherObject</code> The possible object to collide with.</li> <li><code>otherLeft</code> / <code>otherTop</code> / <code>otherRight</code> / <code>otherBottom</code> The values of the target's hitbox.</li> </ul>"},{"location":"RSDKv4/Functions/Object/BoxCollisionTest/#return-value","title":"Return Value","text":"<p>If there wasn't any collision, <code>checkResult</code> will be <code>false</code>. Depending of <code>collisionType</code> used: - <code>C_TOUCH</code>: <code>checkResult</code> will return <code>true</code> with any type of collision. - <code>C_SOLID</code>/<code>C_SOLID2</code>: <code>checkResult</code> will return values 1 (Floor), 2 (LWall), 3 (RWall) or 4 (Roof) depending on the side of the object collided with. - <code>C_PLATFORM</code>: <code>checkResult</code> will only be <code>true</code> if the top of the object was collided</p>"},{"location":"RSDKv4/Functions/Object/BoxCollisionTest/#syntax","title":"Syntax","text":"<pre><code>BoxCollisionTest(int collisionType, int thisObject, int thisLeft, int thisTop, int thisRight, int thisBottom, int otherObject, int otherLeft, int otherTop, int otherRight, int otherBottom)\n</code></pre>"},{"location":"RSDKv4/Functions/Object/BoxCollisionTest/#examples","title":"Examples","text":"<pre><code>BoxCollisionTest(C_TOUCH, object.entityPos, -24, -8, 24, 8, object[0].entityPos, C_BOX, C_BOX, C_BOX, C_BOX)\n</code></pre>"},{"location":"RSDKv4/Functions/Object/CopyObject/","title":"CopyObject","text":""},{"location":"RSDKv4/Functions/Object/CopyObject/#description","title":"Description","text":"<p>Copies <code>count</code> objects from <code>srcSlot</code> to <code>destSlot</code>.</p>"},{"location":"RSDKv4/Functions/Object/CopyObject/#parameters","title":"Parameters","text":"<ul> <li><code>destSlot</code> Starting slot ID from where to paste the objects.</li> <li><code>srcSlot</code> Starting slot ID from where to copy the objects.</li> <li><code>count</code> Amount of objects to copy.</li> </ul>"},{"location":"RSDKv4/Functions/Object/CopyObject/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Object/CopyObject/#syntax","title":"Syntax","text":"<pre><code>CopyObject(int destSlot, int scrSlot, int count)\n</code></pre>"},{"location":"RSDKv4/Functions/Object/CopyObject/#examples","title":"Examples","text":"<pre><code>CopyObject(0, 43, 1)\n</code></pre>"},{"location":"RSDKv4/Functions/Object/CreateTempObject/","title":"CreateTempObject","text":""},{"location":"RSDKv4/Functions/Object/CreateTempObject/#description","title":"Description","text":"<p>Creates a temporary object specified by <code>objectType</code>, <code>propertyValue</code>, <code>xPos</code> and <code>yPos</code> near the end of the object list.</p>"},{"location":"RSDKv4/Functions/Object/CreateTempObject/#parameters","title":"Parameters","text":"<ul> <li><code>objectType</code> The type of object that will be created.</li> <li><code>propertyValue</code> The Property Value of the object.</li> <li><code>xPos</code> The position of the object on the horizontal axis in world-space.</li> <li><code>yPos</code> The position of the object on the vertical axis in world-space.</li> </ul>"},{"location":"RSDKv4/Functions/Object/CreateTempObject/#return-value","title":"Return Value","text":"<p><code>tempObjectPos</code> is set to the created object's <code>slotID</code>.</p>"},{"location":"RSDKv4/Functions/Object/CreateTempObject/#syntax","title":"Syntax","text":"<pre><code>CreateTempObject(int objectType, int propertyValue, int xPos, int yPos)\n</code></pre>"},{"location":"RSDKv4/Functions/Object/CreateTempObject/#examples","title":"Examples","text":"<pre><code>CreateTempObject(TypeName[Invincibility], 0, object.xPos, object.yPos)\n</code></pre>"},{"location":"RSDKv4/Functions/Object/CreateTempObject/#notes","title":"Notes","text":"<p>This should only be used for misc objects that aren't required for too long in the stage.</p>"},{"location":"RSDKv4/Functions/Object/GetObjectValue/","title":"GetObjectValue","text":""},{"location":"RSDKv4/Functions/Object/GetObjectValue/#description","title":"Description","text":"<p>Get the <code>object.value</code> of <code>entitySlot</code> corresponding to <code>valueID</code> and stores it in <code>result</code>.</p>"},{"location":"RSDKv4/Functions/Object/GetObjectValue/#parameters","title":"Parameters","text":"<ul> <li><code>result</code> Variable where to store <code>valueID</code>.</li> <li><code>valueID</code> The corresponding <code>object.value</code> to get.</li> <li><code>entitySlot</code> The ID of the object from where to get <code>object.value</code>.</li> </ul>"},{"location":"RSDKv4/Functions/Object/GetObjectValue/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Object/GetObjectValue/#syntax","title":"Syntax","text":"<pre><code>GetObjectValue(var result, int valueID, int entitySlot)\n</code></pre>"},{"location":"RSDKv4/Functions/Object/GetObjectValue/#examples","title":"Examples","text":"<pre><code>GetObjectValue(arrayPos0, 34, 2)\n</code></pre>"},{"location":"RSDKv4/Functions/Object/ObjectTileCollision/","title":"ObjectTileCollision","text":""},{"location":"RSDKv4/Functions/Object/ObjectTileCollision/#description","title":"Description","text":"<p>Tries to collide with the foreground layer based on the position of iXPos + xOffset, iYPos + yOffset.</p>"},{"location":"RSDKv4/Functions/Object/ObjectTileCollision/#parameters","title":"Parameters","text":"<ul> <li><code>cSide</code> Determines to which side of the tile the object has to collide. Can be <code>CSIDE_FLOOR</code>, <code>CSIDE_LWALL</code>, <code>CSIDE_RWALL</code>, or <code>CSIDE_ROOF</code>. In Sonic Origins, <code>CSIDE_LENTITY</code> and <code>CSIDE_RENTITY</code> are available as well.</li> <li><code>xOffset</code> Horizontal offset of the object.</li> <li><code>yOffset</code> Vertical offset of the object.</li> <li><code>cPlane</code> Collision plane to take into account.</li> </ul>"},{"location":"RSDKv4/Functions/Object/ObjectTileCollision/#return-value","title":"Return Value","text":"<p>Sets CheckResult to true if there was collision, false otherwise.</p>"},{"location":"RSDKv4/Functions/Object/ObjectTileCollision/#syntax","title":"Syntax","text":"<pre><code>ObjectTileCollision(int cSide, int xOffset, int yOffset, int cPlane)\n</code></pre>"},{"location":"RSDKv4/Functions/Object/ObjectTileCollision/#examples","title":"Examples","text":"<pre><code>ObjectTileCollision(CSIDE_LWALL, -15, -4, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Object/ObjectTileCollision/#notes","title":"Notes","text":"<p>This function is best used to check if a tile is there, not to move along it.</p>"},{"location":"RSDKv4/Functions/Object/ObjectTileGrip/","title":"ObjectTileGrip","text":""},{"location":"RSDKv4/Functions/Object/ObjectTileGrip/#description","title":"Description","text":"<p>Tries to collide with the foreground layer based on the position of iXPos + xOffset, iYPos + yOffset.</p> <p>Note</p> <p>This function is best used to handle moving along surfaces.</p>"},{"location":"RSDKv4/Functions/Object/ObjectTileGrip/#parameters","title":"Parameters","text":"<ul> <li><code>cSide</code> Determines to which side of the tile the object has to collide. Can be <code>CSIDE_FLOOR</code>, <code>CSIDE_LWALL</code>, <code>CSIDE_RWALL</code>, or <code>CSIDE_ROOF</code>. In Sonic Origins, <code>CSIDE_LENTITY</code> and <code>CSIDE_RENTITY</code> are available as well.</li> <li><code>xOffset</code> Horizontal offset of the object.</li> <li><code>yOffset</code> Vertical offset of the object.</li> <li><code>cPlane</code> Collision plane to take into account.</li> </ul>"},{"location":"RSDKv4/Functions/Object/ObjectTileGrip/#return-value","title":"Return Value","text":"<p>Sets CheckResult to true if there was collision, false otherwise.</p>"},{"location":"RSDKv4/Functions/Object/ObjectTileGrip/#syntax","title":"Syntax","text":"<pre><code>ObjectTileGrip(int cSide, int xOffset, int yOffset, int cPlane)\n</code></pre>"},{"location":"RSDKv4/Functions/Object/ObjectTileGrip/#examples","title":"Examples","text":"<pre><code>ObjectTileGrip(CSIDE_RWALL, 8, -12, 0)\n</code></pre>"},{"location":"RSDKv4/Functions/Object/ProcessObjectControl/","title":"ProcessObjectControl","text":""},{"location":"RSDKv4/Functions/Object/ProcessObjectControl/#description","title":"Description","text":"<p>Handles control inputs.</p>"},{"location":"RSDKv4/Functions/Object/ProcessObjectControl/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Object/ProcessObjectControl/#return-value","title":"Return Value","text":"<p>Sets the value for object.up, object.down, object.left and object.right to true if their equivalent <code>keyPress</code>/<code>keyDown</code> is pressed. And player.jumpPress or player.jumpHold to true if buttonA/buttonB/buttonC are pressed/held, the next frame will return to false if not pressed.</p>"},{"location":"RSDKv4/Functions/Object/ProcessObjectControl/#syntax","title":"Syntax","text":"<pre><code>ProcessObjectControl()\n</code></pre>"},{"location":"RSDKv4/Functions/Object/ProcessObjectMovement/","title":"ProcessObjectMovement","text":""},{"location":"RSDKv4/Functions/Object/ProcessObjectMovement/#description","title":"Description","text":"<p>Handles tile collision of an object (player)</p>"},{"location":"RSDKv4/Functions/Object/ProcessObjectMovement/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Object/ProcessObjectMovement/#return-value","title":"Return Value","text":"<ul> <li>Handles movement, both on ground and on air.</li> <li>Will return CMODE_FLOOR, CMODE_LWALL, CMODE_RWALL or CMODE_ROOF depending of the object's angle to <code>player.collisionMode</code>, along with updating <code>player.angle</code> based on the current tile stepped.</li> <li>It handles <code>player.speed</code>, along with <code>player.xVel</code> and <code>Player.yVel</code>.</li> <li>Determines if the character is <code>flailing</code>, <code>pushing</code> or is now in the air.</li> </ul>"},{"location":"RSDKv4/Functions/Object/ProcessObjectMovement/#syntax","title":"Syntax","text":"<pre><code>ProcessObjectMovement()\n</code></pre>"},{"location":"RSDKv4/Functions/Object/ResetObjectEntity/","title":"ResetObjectEntity","text":""},{"location":"RSDKv4/Functions/Object/ResetObjectEntity/#description","title":"Description","text":"<p>Resets an object in the <code>objectSlot</code> position to the <code>objectType</code>, <code>propertyValue</code>, <code>xPos</code> and <code>yPos</code> specified.</p>"},{"location":"RSDKv4/Functions/Object/ResetObjectEntity/#parameters","title":"Parameters","text":"<ul> <li><code>objectSlot</code> The position of the object to reset.</li> <li><code>objectType</code> The updated type of object.</li> <li><code>propertyValue</code> The new Property Value of the object.</li> <li><code>xPos</code> The new position of the object on the horizontal axis in world-space.</li> <li><code>yPos</code> The new position of the object on the vertical axis in world-space.</li> </ul>"},{"location":"RSDKv4/Functions/Object/ResetObjectEntity/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Object/ResetObjectEntity/#syntax","title":"Syntax","text":"<pre><code>ResetObjectEntity(int objectSlot, int objectType, int propertyValue, int xPos, int yPos)\n</code></pre>"},{"location":"RSDKv4/Functions/Object/ResetObjectEntity/#examples","title":"Examples","text":"<pre><code>ResetObjectEntity(object.entityPos, TypeName[Flower], 0, Object.xpos, Object.ypos)\n</code></pre>"},{"location":"RSDKv4/Functions/Object/SetObjectRange/","title":"SetObjectRange","text":""},{"location":"RSDKv4/Functions/Object/SetObjectRange/#description","title":"Description","text":"<p>Changes internal bounds. Used mainly so attract mode looks the same regardless of current screen width.</p>"},{"location":"RSDKv4/Functions/Object/SetObjectRange/#parameters","title":"Parameters","text":"<ul> <li><code>width</code> New internal width of the object.</li> </ul>"},{"location":"RSDKv4/Functions/Object/SetObjectRange/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Object/SetObjectRange/#syntax","title":"Syntax","text":"<pre><code>SetObjectRange(int width)\n</code></pre>"},{"location":"RSDKv4/Functions/Object/SetObjectRange/#examples","title":"Examples","text":"<pre><code>SetObjectRange(424)\n</code></pre>"},{"location":"RSDKv4/Functions/Object/SetObjectValue/","title":"SetObjectValue","text":""},{"location":"RSDKv4/Functions/Object/SetObjectValue/#description","title":"Description","text":"<p>Set the <code>object.value</code> of <code>entitySlot</code> corresponding to <code>valueID</code> to the value of <code>value</code>.</p>"},{"location":"RSDKv4/Functions/Object/SetObjectValue/#parameters","title":"Parameters","text":"<ul> <li><code>value</code> New value for <code>bject.Value</code>.</li> <li><code>valueID</code> The corresponding <code>object.value</code> to set.</li> <li><code>entitySlot</code> The ID of the object to assign the new <code>object.value</code> value.</li> </ul>"},{"location":"RSDKv4/Functions/Object/SetObjectValue/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Object/SetObjectValue/#syntax","title":"Syntax","text":"<pre><code>SetObjectValue(int value, int valueID, int entitySlot)\n</code></pre>"},{"location":"RSDKv4/Functions/Object/SetObjectValue/#examples","title":"Examples","text":"<pre><code>SetObjectValue(3, 24, 7)\n</code></pre>"},{"location":"RSDKv4/Functions/Stage/CheckCurrentStageFolder/","title":"CheckCurrentStageFolder","text":""},{"location":"RSDKv4/Functions/Stage/CheckCurrentStageFolder/#description","title":"Description","text":"<p>Reads the name of the current stage's folder.</p>"},{"location":"RSDKv4/Functions/Stage/CheckCurrentStageFolder/#parameters","title":"Parameters","text":"<ul> <li><code>checkFolder</code> The string to match.</li> </ul>"},{"location":"RSDKv4/Functions/Stage/CheckCurrentStageFolder/#return-value","title":"Return Value","text":"<p>Sets <code>checkResult</code> to <code>true</code> if the current folder's name matches <code>checkFolder</code>, otherwise <code>checkResult</code> will be <code>false</code>.</p>"},{"location":"RSDKv4/Functions/Stage/CheckCurrentStageFolder/#syntax","title":"Syntax","text":"<pre><code>CheckCurrentStageFolder(string checkFolder)\n</code></pre>"},{"location":"RSDKv4/Functions/Stage/CheckCurrentStageFolder/#examples","title":"Examples","text":"<pre><code>CheckCurrentStageFolder(\"Zone01\")\n</code></pre>"},{"location":"RSDKv4/Functions/Stage/Copy16x16Tile/","title":"Copy16x16Tile","text":""},{"location":"RSDKv4/Functions/Stage/Copy16x16Tile/#description","title":"Description","text":"<p>Copies the tileset image data of <code>scrTile</code> into <code>destTile</code>.</p>"},{"location":"RSDKv4/Functions/Stage/Copy16x16Tile/#parameters","title":"Parameters","text":"<ul> <li><code>destTile</code> The tile that will be overwritten.</li> <li><code>scrTile</code> The tile that will be copied.</li> </ul>"},{"location":"RSDKv4/Functions/Stage/Copy16x16Tile/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Stage/Copy16x16Tile/#syntax","title":"Syntax","text":"<pre><code>Copy16x16Tile(int destTile, int scrTile)\n</code></pre>"},{"location":"RSDKv4/Functions/Stage/Copy16x16Tile/#examples","title":"Examples","text":"<pre><code>Copy16x16Tile(174, 173)\n</code></pre>"},{"location":"RSDKv4/Functions/Stage/Copy16x16Tile/#notes","title":"Notes","text":"<p>Used for animated tiles.</p>"},{"location":"RSDKv4/Functions/Stage/Get16x16TileInfo/","title":"Get16x16TileInfo","text":""},{"location":"RSDKv4/Functions/Stage/Get16x16TileInfo/#description","title":"Description","text":"<p>Gets the info of <code>infoTile</code> from a tile at <code>TileX</code>, <code>TileY</code>. And stores it in <code>chunkStore</code>.</p>"},{"location":"RSDKv4/Functions/Stage/Get16x16TileInfo/#parameters","title":"Parameters","text":"<ul> <li><code>chunkStore</code> The variable that will store the tile's specified <code>infoType</code> data.</li> <li><code>tileX</code> Position of the 16x16 tile in the map on the horizontal axis.</li> <li><code>tileY</code> Position of the 16x16 tile in the map on the vertical axis.</li> <li><code>infoType</code> The ID for the type of info read from the tile, valid values are:     0 - TILEINFO_INDEX     1 - TILEINFO_DIRECTION     2 - TILEINFO_VISUALPLANE     3 - TILEINFO_SOLIDITYA     4 - TILEINFO_SOLIDITYB     5 - TILEINFO_FLAGSA     6 - TILEINFO_ANGLEA     7 - TILEINFO_FLAGSB     8 - TILEINFO_ANGLEB</li> </ul>"},{"location":"RSDKv4/Functions/Stage/Get16x16TileInfo/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Stage/Get16x16TileInfo/#syntax","title":"Syntax","text":"<pre><code>Get16x16TileInfo(var chunkStore, int tileX, int tileY, int infoType)\n</code></pre>"},{"location":"RSDKv4/Functions/Stage/Get16x16TileInfo/#examples","title":"Examples","text":"<pre><code>Get16x16TileInfo(object.value2, 25, 24, 8)\n</code></pre>"},{"location":"RSDKv4/Functions/Stage/GetTileLayerEntry/","title":"GetTileLayerEntry","text":""},{"location":"RSDKv4/Functions/Stage/GetTileLayerEntry/#description","title":"Description","text":"<p>Gets the ChunkID of the chunk at <code>chunkX</code>, <code>chunkY</code> on tilelayer <code>layer</code>. And stores it in <code>chunkStore</code>.</p>"},{"location":"RSDKv4/Functions/Stage/GetTileLayerEntry/#parameters","title":"Parameters","text":"<ul> <li><code>chunkStore</code> The variable that will store the chunk.</li> <li><code>layer</code> The ID of the layer where the chunk comes from, valid values are:     0(DEFORM_FG)     1(DEFORM_FG_WATER)     2(DEFORM_BG)     3(DEFORM_BG_WATER)</li> <li><code>chunkX</code> Position of the 128x128 chunk in the map on the horizontal axis.</li> <li><code>chunkY</code> Position of the 128x128 chunk in the map on the vertical axis.</li> </ul>"},{"location":"RSDKv4/Functions/Stage/GetTileLayerEntry/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Stage/GetTileLayerEntry/#syntax","title":"Syntax","text":"<pre><code>GetTileLayerEntry(var chunkStore, int layer, int chunkX, int chunkY)\n</code></pre>"},{"location":"RSDKv4/Functions/Stage/GetTileLayerEntry/#examples","title":"Examples","text":"<pre><code>GetTileLayerEntry(object.value2, 0, 24, 96)\n</code></pre>"},{"location":"RSDKv4/Functions/Stage/LoadStage/","title":"LoadStage","text":""},{"location":"RSDKv4/Functions/Stage/LoadStage/#description","title":"Description","text":"<p>Loads a stage based on <code>stage.listPos</code> and <code>stage.activeList</code>.</p>"},{"location":"RSDKv4/Functions/Stage/LoadStage/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Stage/LoadStage/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Stage/LoadStage/#syntax","title":"Syntax","text":"<pre><code>LoadStage()\n</code></pre>"},{"location":"RSDKv4/Functions/Stage/Set16x16TileInfo/","title":"Set16x16TileInfo","text":""},{"location":"RSDKv4/Functions/Stage/Set16x16TileInfo/#description","title":"Description","text":"<p>Sets the info for <code>infoTile</code> from a tile at <code>tileX</code>, <code>tileY</code> to the new <code>value</code>.</p>"},{"location":"RSDKv4/Functions/Stage/Set16x16TileInfo/#parameters","title":"Parameters","text":"<ul> <li><code>value</code> The new value for the tile's specified <code>infoType</code>.</li> <li><code>tileX</code> Position of the 16x16 tile in the map on the horizontal axis.</li> <li><code>tileY</code> Position of the 16x16 tile in the map on the vertical axis.</li> <li><code>infoType</code> The ID for the type of info that will be overwritten from the tile, valid values are:     0 - TILEINFO_INDEX     1 - TILEINFO_DIRECTION     2 - TILEINFO_VISUALPLANE     3 - TILEINFO_SOLIDITYA     4 - TILEINFO_SOLIDITYB     5 - TILEINFO_FLAGSA     6 - TILEINFO_ANGLEA     7 - TILEINFO_FLAGSB     8 - TILEINFO_ANGLEB</li> </ul>"},{"location":"RSDKv4/Functions/Stage/Set16x16TileInfo/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Stage/Set16x16TileInfo/#syntax","title":"Syntax","text":"<pre><code>Set16x16TileInfo(int value, int tileX, int tileY, int infoType)\n</code></pre>"},{"location":"RSDKv4/Functions/Stage/Set16x16TileInfo/#examples","title":"Examples","text":"<pre><code>Set16x16TileInfo(3, temp0, temp1, 7)\n</code></pre>"},{"location":"RSDKv4/Functions/Stage/SetLayerDeformation/","title":"SetLayerDeformation","text":""},{"location":"RSDKv4/Functions/Stage/SetLayerDeformation/#description","title":"Description","text":"<p>Sets the deformation data array of <code>deformID</code>, based on the <code>deformA</code> and <code>deformB</code> values.</p>"},{"location":"RSDKv4/Functions/Stage/SetLayerDeformation/#parameters","title":"Parameters","text":"<ul> <li><code>deformID</code> The ID of the layer to deform, valid values are:     0(DEFORM_FG)     1(DEFORM_FG_WATER)     2(DEFORM_BG)     3(DEFORM_BG_WATER)</li> <li><code>waveLength</code> Length of the wave.</li> <li><code>waveWidth</code> Width of the wave.</li> <li><code>waveType</code> Type of wave: 0 will affect the entire layer, 1 will use <code>yPos</code> and <code>waveSize</code> to determine the area of effect.</li> <li><code>yPos</code> The offset from where the wave will start.</li> <li><code>waveSize</code> The size of the wave.</li> </ul>"},{"location":"RSDKv4/Functions/Stage/SetLayerDeformation/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Stage/SetLayerDeformation/#syntax","title":"Syntax","text":"<pre><code>SetLayerDeformation(int deformID, int waveLength, int waveWidth, int waveType, int yPos, int waveSize)\n</code></pre>"},{"location":"RSDKv4/Functions/Stage/SetLayerDeformation/#examples","title":"Examples","text":"<pre><code>SetLayerDeformation(0, 16, 2, 1, 96, 128)\n</code></pre>"},{"location":"RSDKv4/Functions/Stage/SetTileLayerEntry/","title":"SetTileLayerEntry","text":""},{"location":"RSDKv4/Functions/Stage/SetTileLayerEntry/#description","title":"Description","text":"<p>Sets the Chunk at <code>chunkX</code>, <code>chunkY</code> on tilelayer <code>layer</code> to the index of <code>value</code>.</p>"},{"location":"RSDKv4/Functions/Stage/SetTileLayerEntry/#parameters","title":"Parameters","text":"<ul> <li><code>value</code> The index value of the new chunk.</li> <li><code>layer</code> The ID of the layer where the chunk comes from, valid values are:     0(DEFORM_FG)     1(DEFORM_FG_WATER)     2(DEFORM_BG)     3(DEFORM_BG_WATER)</li> <li><code>chunkX</code> Position of the 128x128 chunk in the map on the horizontal axis.</li> <li><code>chunkY</code> Position of the 128x128 chunk in the map on the vertical axis.</li> </ul>"},{"location":"RSDKv4/Functions/Stage/SetTileLayerEntry/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv4/Functions/Stage/SetTileLayerEntry/#syntax","title":"Syntax","text":"<pre><code>SetTileLayerEntry(int value, int layer, int chunkX, int chunkY)\n</code></pre>"},{"location":"RSDKv4/Functions/Stage/SetTileLayerEntry/#examples","title":"Examples","text":"<pre><code>SetTileLayerEntry(35, 0, 24, 96)\n</code></pre>"},{"location":"RSDKv4/Overview/","title":"RSDKv4 Overview","text":"<p>TODO: this</p>"},{"location":"RSDKv5/","title":"Retro Engine v5","text":"<p>Retro Engine v5, debuting in 2017, is the version of RSDK used for Sonic Mania (Plus). A version of the engine adding backwards compatibility with RSDKv3/4 games, among other changes, called Retro Engine v5Ultimate (v5U), debuted in 2022, being used in Sonic Origins. TODO: write info about RSDKv5(U) and anything relating to Mania/S3</p>"},{"location":"RSDKv5/#documentation","title":"Documentation","text":"<ul> <li>Overview</li> <li>Events</li> <li>Functions</li> </ul>"},{"location":"RSDKv5/#tools","title":"Tools","text":"<ul> <li>RetroED</li> <li>RSDK Animation Editor</li> </ul>"},{"location":"RSDKv5/#tutorials","title":"Tutorials","text":""},{"location":"RSDKv5/#other-resources","title":"Other Resources","text":""},{"location":"RSDKv5/Decompilation/","title":"RSDKv5 Decompilation","text":"<p>TODO: everything</p>"},{"location":"RSDKv5/Decompilation/#tutorials","title":"Tutorials","text":""},{"location":"RSDKv5/Events/","title":"RSDKv5 Events","text":"<p>Events can be easily thought of as \"default functions\" and are all called periodically during gameplay. To define events, you simply have to follow the syntax required for them. The definable events are:</p> <ul> <li>Update</li> <li>LateUpdate</li> <li>StaticUpdate</li> <li>Draw</li> <li>Create</li> <li>StageLoad</li> <li>EditorDraw</li> <li>EditorLoad</li> <li>Serialize</li> <li>StaticLoad</li> </ul>"},{"location":"RSDKv5/Events/Create/","title":"Create","text":""},{"location":"RSDKv5/Events/Create/#description","title":"Description","text":"<p>Called on Engine initialization, or when the game code manually creates an entity (usually on StageLoad or when a temporary entity is spawned).</p>"},{"location":"RSDKv5/Events/Create/#parameters","title":"Parameters","text":"<ul> <li><code>data</code> Optional pointer to a user defined data (object type, value...).</li> </ul>"},{"location":"RSDKv5/Events/Create/#syntax","title":"Syntax","text":"CC++ <pre><code>void Create(void *data);\n</code></pre> <pre><code>void Create(void *data);\n</code></pre>"},{"location":"RSDKv5/Events/Create/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_Create(void *data) { }\n</code></pre> <pre><code>void MyObject::Create(void *data) { }\n</code></pre>"},{"location":"RSDKv5/Events/Draw/","title":"Draw","text":""},{"location":"RSDKv5/Events/Draw/#description","title":"Description","text":"<p>Called once every frame per entity if Entity::active allows for it. The ordering is based the value of Entity::drawGroup.</p>"},{"location":"RSDKv5/Events/Draw/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv5/Events/Draw/#syntax","title":"Syntax","text":"CC++ <pre><code>void Draw();\n</code></pre> <pre><code>void Draw();\n</code></pre>"},{"location":"RSDKv5/Events/Draw/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_Draw() { }\n</code></pre> <pre><code>void MyObject::Draw() { }\n</code></pre>"},{"location":"RSDKv5/Events/EditorDraw/","title":"EditorDraw","text":""},{"location":"RSDKv5/Events/EditorDraw/#description","title":"Description","text":"<p>Similar to Draw, though only called when the object class is loaded in via an editor (such as RetroED v2). Used to draw sprites in the editor, called once per frame, per entity.</p>"},{"location":"RSDKv5/Events/EditorDraw/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv5/Events/EditorDraw/#syntax","title":"Syntax","text":"CC++ <pre><code>void EditorDraw();\n</code></pre> <pre><code>void EditorDraw();\n</code></pre>"},{"location":"RSDKv5/Events/EditorDraw/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_EditorDraw() { }\n</code></pre> <pre><code>void MyObject::EditorDraw() { }\n</code></pre>"},{"location":"RSDKv5/Events/EditorLoad/","title":"EditorLoad","text":""},{"location":"RSDKv5/Events/EditorLoad/#description","title":"Description","text":"<p>Similar to StageLoad, though only called when the object class is loaded in via an editor (such as RetroED v2). Used to load assets that will be used in EditorDraw.</p>"},{"location":"RSDKv5/Events/EditorLoad/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv5/Events/EditorLoad/#syntax","title":"Syntax","text":"CC++ <pre><code>void EditorLoad();\n</code></pre> <pre><code>static void EditorLoad();\n</code></pre>"},{"location":"RSDKv5/Events/EditorLoad/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_EditorLoad() { }\n</code></pre> <pre><code>void MyObject::EditorLoad() { }\n</code></pre>"},{"location":"RSDKv5/Events/LateUpdate/","title":"LateUpdate","text":""},{"location":"RSDKv5/Events/LateUpdate/#description","title":"Description","text":"<p>Same as Update, though this is called after Update was called for all entities and all type and draw list sorting has been done.</p>"},{"location":"RSDKv5/Events/LateUpdate/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv5/Events/LateUpdate/#syntax","title":"Syntax","text":"CC++ <pre><code>void LateUpdate();\n</code></pre> <pre><code>void LateUpdate();\n</code></pre>"},{"location":"RSDKv5/Events/LateUpdate/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_LateUpdate() { }\n</code></pre> <pre><code>void MyObject::LateUpdate() { }\n</code></pre>"},{"location":"RSDKv5/Events/Serialize/","title":"Serialize","text":""},{"location":"RSDKv5/Events/Serialize/#description","title":"Description","text":"<p>Called once per object class, upon the scene being loaded, no logic should be written here, only calls to RSDK_EDITABLE_VAR.</p>"},{"location":"RSDKv5/Events/Serialize/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv5/Events/Serialize/#syntax","title":"Syntax","text":"CC++ <pre><code>void Serialize();\n</code></pre> <pre><code>static void Serialize();\n</code></pre>"},{"location":"RSDKv5/Events/Serialize/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_Serialize() { }\n</code></pre> <pre><code>void MyObject::Serialize() { }\n</code></pre>"},{"location":"RSDKv5/Events/StageLoad/","title":"StageLoad","text":""},{"location":"RSDKv5/Events/StageLoad/#description","title":"Description","text":"<p>Called once per object class, once when the stage loads. Used for loading assets, and initalizing any static variables.</p>"},{"location":"RSDKv5/Events/StageLoad/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv5/Events/StageLoad/#syntax","title":"Syntax","text":"CC++ <pre><code>void StageLoad();\n</code></pre> <pre><code>static void StageLoad();\n</code></pre>"},{"location":"RSDKv5/Events/StageLoad/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_StageLoad() { }\n</code></pre> <pre><code>void MyObject::StageLoad() { }\n</code></pre>"},{"location":"RSDKv5/Events/StaticLoad/","title":"StaticLoad","text":""},{"location":"RSDKv5/Events/StaticLoad/#description","title":"Description","text":"<p>Called once per object class, once when the static variables are allocated. Used for initializing any static variables. It's basically an RSDK implementation of a constructor in C++.</p>"},{"location":"RSDKv5/Events/StaticLoad/#parameters","title":"Parameters","text":"<ul> <li><code>sVars</code> A pointer to the static variables that will be initialized during this event.</li> </ul>"},{"location":"RSDKv5/Events/StaticLoad/#syntax","title":"Syntax","text":"CC++ <pre><code>void StaticLoad(Object[ObjectName] *sVars);\n</code></pre> <pre><code>static void StaticLoad(Static *sVars);\n</code></pre>"},{"location":"RSDKv5/Events/StaticLoad/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_StaticLoad(ObjectMyObject *sVars) { }\n</code></pre> <pre><code>void MyObject::StaticLoad(Static *sVars) { }\n</code></pre>"},{"location":"RSDKv5/Events/StaticLoad/#remarks","title":"Remarks","text":"<p>This function is ONLY suppported by RSDKv5U. It does not exist in RSDKv5 Revision 01 or RSDKv5 Revision 02.</p>"},{"location":"RSDKv5/Events/StaticUpdate/","title":"StaticUpdate","text":""},{"location":"RSDKv5/Events/StaticUpdate/#description","title":"Description","text":"<p>Called once per object class, once per frame if Object::active allows for it. This event is called before any Update events are called.</p>"},{"location":"RSDKv5/Events/StaticUpdate/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv5/Events/StaticUpdate/#syntax","title":"Syntax","text":"CC++ <pre><code>void StaticUpdate();\n</code></pre> <pre><code>static void StaticUpdate();\n</code></pre>"},{"location":"RSDKv5/Events/StaticUpdate/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_StaticUpdate() { }\n</code></pre> <pre><code>void MyObject::StaticUpdate() { }\n</code></pre>"},{"location":"RSDKv5/Events/Update/","title":"Update","text":""},{"location":"RSDKv5/Events/Update/#description","title":"Description","text":"<p>Called once every frame per entity if Entity::active allows for it.</p>"},{"location":"RSDKv5/Events/Update/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv5/Events/Update/#syntax","title":"Syntax","text":"CC++ <pre><code>void Update();\n</code></pre> <pre><code>void Update();\n</code></pre>"},{"location":"RSDKv5/Events/Update/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_Update() { }\n</code></pre> <pre><code>void MyObject::Update() { }\n</code></pre>"},{"location":"RSDKv5/Functions/","title":"RSDKv5 Functions","text":""},{"location":"RSDKv5/Functions/#spritesheets","title":"Spritesheets","text":"<ul> <li>LoadSpriteSheet</li> </ul>"},{"location":"RSDKv5/Functions/#sprites-animations","title":"Sprites &amp; Animations","text":"<ul> <li>LoadSpriteAnimation</li> <li>CreateSpriteAnimation</li> <li>SetSpriteAnimation</li> <li>EditSpriteAnimation</li> <li>SetSpriteString</li> <li>FindSpriteAnimation</li> <li>GetFrame</li> <li>GetHitbox</li> <li>GetFrameID</li> <li>GetStringWidth</li> <li>ProcessAnimation</li> </ul>"},{"location":"RSDKv5/Functions/#debugging","title":"Debugging","text":"<ul> <li>ClearViewableVariables</li> <li>AddViewableVariable</li> </ul>"},{"location":"RSDKv5/Functions/#editor","title":"Editor","text":"<ul> <li>RSDK_ACTIVE_VAR</li> <li>RSDK_ENUM_VAR</li> <li>showGizmos</li> <li>RSDK_DRAWING_OVERLAY</li> </ul>"},{"location":"RSDKv5/Functions/Animations-Sprites/CreateSpriteAnimation/","title":"CreateSpriteAnimation","text":""},{"location":"RSDKv5/Functions/Animations-Sprites/CreateSpriteAnimation/#description","title":"Description","text":"<p>Creates a Sprite Animation based on the parameters and returns the id of it.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/CreateSpriteAnimation/#parameters","title":"Parameters","text":"<ul> <li> <p><code>identifier</code> The animation's unique identifier. Once created, it can be used to retrieve this animation again.</p> </li> <li> <p><code>frameCount</code> The maximum number of sprite frames this sprite animation can store.</p> </li> <li> <p><code>listCount</code> The maximum number of animation entries this sprite animation can store.</p> </li> <li> <p><code>scope</code> The asset's scope, may be <code>SCOPE_GLOBAL</code> or <code>SCOPE_STAGE</code>.</p> </li> </ul>"},{"location":"RSDKv5/Functions/Animations-Sprites/CreateSpriteAnimation/#return-value","title":"Return Value","text":"<p>This function returns an id to the created animation file as a <code>uint16</code>. The return value will be <code>-1</code> if the animation file failed to create.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/CreateSpriteAnimation/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.CreateSpriteAnimation(const char *identifier, uint32 frameCount, uint32 listCount, int32 scope);\n</code></pre> <pre><code>SpriteAnimation.Create(const char* path, Scopes scope);\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/CreateSpriteAnimation/#examples","title":"Examples","text":"CC++ <pre><code>MyObject-&gt;aniFrames = RSDK.CreateSpriteAnimation(\"Test/MyAnim.bin\", 256, 32, SCOPE_STAGE);\n</code></pre> <pre><code>sVars-&gt;aniFrames.Create(\"Test/MyAnim.bin\", 256, 32, SCOPE_STAGE);\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/EditSpriteAnimation/","title":"EditSpriteAnimation","text":""},{"location":"RSDKv5/Functions/Animations-Sprites/EditSpriteAnimation/#description","title":"Description","text":"<p>Loads a Sprite Animation and returns the id of it.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/EditSpriteAnimation/#parameters","title":"Parameters","text":"<ul> <li> <p><code>aniFrames</code> The sprite animation to be edited.</p> </li> <li> <p><code>listID</code> The index of the animation entry to be edited.</p> </li> <li> <p><code>name</code> The animation's name.</p> </li> <li> <p><code>frameOffset</code> The frame list offset to start this animation's frames from.</p> </li> <li> <p><code>frameCount</code> The number of frames in the animation.</p> </li> <li> <p><code>speed</code> The speed of the animation.</p> </li> <li> <p><code>loopIndex</code> The index of the frame the animation should loop from.</p> </li> <li> <p><code>rotationStyle</code> The style of rotation snapping to use for frames in this animation.</p> </li> </ul>"},{"location":"RSDKv5/Functions/Animations-Sprites/EditSpriteAnimation/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/EditSpriteAnimation/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.EditSpriteAnimation(uint16 aniFrames, uint16 listID, const char *name, int32 frameOffset, uint16 frameCount, int16 speed, uint8 loopIndex, uint8 rotationStyle);\n</code></pre> <pre><code>SpriteAnimation.Edit(uint16 listID, const char *name, int32 frameOffset, uint16 frameCount, int16 speed, uint8 loopIndex, uint8 rotationStyle);\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/EditSpriteAnimation/#examples","title":"Examples","text":"CC++ <pre><code>RSDK.EditSpriteAnimation(MyObject-&gt;aniFrames, 1, \"My Edited Anim\", 8, 16, 1, 12, ROTSTYLE_NONE);\n</code></pre> <pre><code>sVars-&gt;aniFrames.Edit(1, \"My Edited Anim\", 8, 16, 1, 12, Animator::RotateNone);\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/FindSpriteAnimation/","title":"FindSpriteAnimation","text":""},{"location":"RSDKv5/Functions/Animations-Sprites/FindSpriteAnimation/#description","title":"Description","text":"<p>Attempts to find an animation entry by name.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/FindSpriteAnimation/#parameters","title":"Parameters","text":"<ul> <li> <p><code>aniFrames</code> The sprite animation to search in.</p> </li> <li> <p><code>name</code> The name of the animation entry to search for.</p> </li> </ul>"},{"location":"RSDKv5/Functions/Animations-Sprites/FindSpriteAnimation/#return-value","title":"Return Value","text":"<p>This function returns an id to the found animation entry as a <code>uint16</code>. The return value will be <code>-1</code> if the animation entry wasn't found.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/FindSpriteAnimation/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.FindSpriteAnimation(uint16 aniFrames, const char *name);\n</code></pre> <pre><code>SpriteAnimation.Find(const char *name);\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/FindSpriteAnimation/#examples","title":"Examples","text":"CC++ <pre><code>uint16 listID = RSDK.LoadSpriteAnimation(MyObject-&gt;aniFrames, \"My Animation Entry\");\n</code></pre> <pre><code>uint16 listID = sVars-&gt;aniFrames.Find(sVars-&gt;aniFrames, \"My Animation Entry\");\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetFrame/","title":"GetFrame","text":""},{"location":"RSDKv5/Functions/Animations-Sprites/GetFrame/#description","title":"Description","text":"<p>Retrieves a specific sprite frame from a sprite animation.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetFrame/#parameters","title":"Parameters","text":"<ul> <li> <p><code>aniFrames</code> The sprite animation to use frames from.</p> </li> <li> <p><code>listID</code> The index of the animation in the animation list to use frames from. In C++ this value is retrieved from <code>animator.animationID</code>.</p> </li> <li> <p><code>frameID</code> The index of the frame to get. In C++ this value is retrieved from <code>animator.frameID</code>.</p> </li> </ul>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetFrame/#return-value","title":"Return Value","text":"<p>This function returns an pointer to the retrieved sprite frame. The return value will be <code>NULL</code> if an error occured.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetFrame/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.GetFrame(uint16 aniFrames, uint16 listID, int32 frameID);\n</code></pre> <pre><code>animator.GetFrame(SpriteAnimation aniFrames);\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetFrame/#examples","title":"Examples","text":"CC++ <pre><code>SpriteFrame *frame = RSDK.GetFrame(MyObject-&gt;aniFrames, 1, 0);\n</code></pre> <pre><code>SpriteFrame *frame = animator.GetFrame(sVars-&gt;aniFrames);\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetFrameID/","title":"GetFrameID","text":""},{"location":"RSDKv5/Functions/Animations-Sprites/GetFrameID/#description","title":"Description","text":"<p>Gets the <code>unicode char</code> value of the animator's current frame.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetFrameID/#parameters","title":"Parameters","text":"<ul> <li><code>animator</code> The animator to get the unicode char from. the animation entry will use <code>animator.frames</code> and the frame id uses <code>animator.frameID</code>.</li> </ul>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetFrameID/#return-value","title":"Return Value","text":"<p>This function returns the <code>unicode char</code> value of the animator's current frame as a <code>uint16</code>. The return value will be <code>0</code> if an error occurred.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetFrameID/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.GetFrameID(Animator *animator);\n</code></pre> <pre><code>animator.GetFrameID();\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetFrameID/#examples","title":"Examples","text":"CC++ <pre><code>uint16 id = RSDK.GetFrameID(&amp;animator);\n</code></pre> <pre><code>uint16 id = animator.GetFrameID();\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetHitbox/","title":"GetHitbox","text":""},{"location":"RSDKv5/Functions/Animations-Sprites/GetHitbox/#description","title":"Description","text":"<p>Gets a Hitbox from the animator's current frame.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetHitbox/#parameters","title":"Parameters","text":"<ul> <li> <p><code>animator</code> The animator to get the hitbox from. the animation entry will use <code>animator.frames</code> and the frame id uses <code>animator.frameID</code>.</p> </li> <li> <p><code>hitboxID</code> The hitbox id to retrieve, indices 0-7 are valid.</p> </li> </ul>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetHitbox/#return-value","title":"Return Value","text":"<p>This function returns a pointer the desired hitbox of the animator's current frame as a <code>Hitbox</code>. The return value will be <code>NULL</code> if an error occurred.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetHitbox/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.GetHitbox(Animator *animator, uint8 hitboxID);\n</code></pre> <pre><code>animator.GetHitbox(uint8 hitboxID);\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetHitbox/#examples","title":"Examples","text":"CC++ <pre><code>Hitbox *hitbox = RSDK.GetHitbox(&amp;animator, 0);\n</code></pre> <pre><code>Hitbox *hitbox = animator.Load(0);\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetStringWidth/","title":"GetStringWidth","text":""},{"location":"RSDKv5/Functions/Animations-Sprites/GetStringWidth/#description","title":"Description","text":"<p>Loads a Sprite Animation and returns the id of it.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetStringWidth/#parameters","title":"Parameters","text":"<ul> <li> <p><code>aniFrames</code> The sprite animation to use frames from.</p> </li> <li> <p><code>listID</code> The index of the animation in the animation list to use frames from.</p> </li> <li> <p><code>string</code> The string that characters are retrieved from.</p> </li> <li> <p><code>startIndex</code> The starting character index.</p> </li> <li> <p><code>length</code> The end character index. A value of 0 will result in the end character index being <code>string.length</code>.</p> </li> <li> <p><code>spacing</code> The number of pixels between each character.</p> </li> </ul>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetStringWidth/#return-value","title":"Return Value","text":"<p>This function returns the width of the string in pixels. This width is the same as it would be if DrawText was called with the same parameters.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetStringWidth/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.GetStringWidth(uint16 aniFrames, uint16 listID, String *string, int32 startIndex, int32 length, int32 spacing);\n</code></pre> <pre><code>String.GetWidth(SpriteAnimation aniFrames, uint16 listID, int32 startIndex, int32 length, int32 spacing);\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/GetStringWidth/#examples","title":"Examples","text":"CC++ <pre><code>int32 width = RSDK.LoadSpriteAnimation(MyObject-&gt;aniFrames, 0, &amp;string, 0, string.length, 1);\n</code></pre> <pre><code>int32 width = string.GetWidth(sVars-&gt;aniFrames, 0, 0, string.length, 1);\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/LoadSpriteAnimation/","title":"LoadSpriteAnimation","text":""},{"location":"RSDKv5/Functions/Animations-Sprites/LoadSpriteAnimation/#description","title":"Description","text":"<p>Loads a Sprite Animation and returns the id of it.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/LoadSpriteAnimation/#parameters","title":"Parameters","text":"<ul> <li> <p><code>path</code> The file path to load the sprite animation file from, relative to <code>Data/Sprites/</code>.</p> </li> <li> <p><code>scope</code> The asset's scope, may be <code>SCOPE_GLOBAL</code> or <code>SCOPE_STAGE</code>.</p> </li> </ul>"},{"location":"RSDKv5/Functions/Animations-Sprites/LoadSpriteAnimation/#return-value","title":"Return Value","text":"<p>This function returns an id to the loaded animation file as a <code>uint16</code>. The return value will be <code>-1</code> if the animation file failed to load.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/LoadSpriteAnimation/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.LoadSpriteAnimation(const char* path, Scopes scope);\n</code></pre> <pre><code>SpriteAnimation.Load(const char* path, Scopes scope);\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/LoadSpriteAnimation/#examples","title":"Examples","text":"CC++ <pre><code>MyObject-&gt;aniFrames = RSDK.LoadSpriteAnimation(\"Test/MyAnim.bin\", SCOPE_STAGE);\n</code></pre> <pre><code>sVars-&gt;aniFrames.Load(\"Test/MyAnim.bin\", SCOPE_STAGE);\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/ProcessAnimation/","title":"ProcessAnimation","text":""},{"location":"RSDKv5/Functions/Animations-Sprites/ProcessAnimation/#description","title":"Description","text":"<p>Processes the animation applied to an animator.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/ProcessAnimation/#parameters","title":"Parameters","text":"<ul> <li><code>animator</code> The animator used to handle animation of the frames.</li> </ul>"},{"location":"RSDKv5/Functions/Animations-Sprites/ProcessAnimation/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/ProcessAnimation/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.ProcessAnimation(Animator *animator);\n</code></pre> <pre><code>animator.Process();\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/ProcessAnimation/#examples","title":"Examples","text":"CC++ <pre><code>RSDK.ProcessAnimation(&amp;animator);\n</code></pre> <pre><code>animator.Process();\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/SetSpriteAnimation/","title":"SetSpriteAnimation","text":""},{"location":"RSDKv5/Functions/Animations-Sprites/SetSpriteAnimation/#description","title":"Description","text":"<p>Applies a set of frames to an animator.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/SetSpriteAnimation/#parameters","title":"Parameters","text":"<ul> <li> <p><code>aniFrames</code> The sprite animation to use frames from. id 0-1023 is valid, any other values will clear the existing sprite frames.</p> </li> <li> <p><code>listID</code> The index of the animation in the animation list to use frames from. negative indices or indices above the count are considered invalid and will result in the frames not being set.</p> </li> <li> <p><code>animator</code> The animator to apply the frames to. in C++ this function is a instance method of the animator instead. See examples for further info.</p> </li> <li> <p><code>forceApply</code> Whether or not to forcefully set the animation. If true then the frames will be set unless the parameters are invalid. If false then the frames will ONLY be set if they don't match the existing frames (same aniFrames, same listID, frameID is ignored) this allows multiple calls to not restart an animation if already playing.</p> </li> <li> <p><code>frameID</code> The index of the frame to set to.</p> </li> </ul>"},{"location":"RSDKv5/Functions/Animations-Sprites/SetSpriteAnimation/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/SetSpriteAnimation/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.SetSpriteAnimation(uint16 aniFrames, uint16 listID, Animator *animator, bool32 forceApply, int32 frameID);\n</code></pre> <pre><code>animator.SetAnimation(SpriteAnimation aniFrames, uint16 listID, bool32 forceApply, int32 frameID);\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/SetSpriteAnimation/#examples","title":"Examples","text":"CC++ <pre><code>animator.SetAnimation(MyObject-&gt;aniFrames, 0, true, 0);\n</code></pre> <pre><code>this-&gt;animator.SetAnimation(sVars-&gt;aniFrames, 0, true, 0);\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/SetSpriteString/","title":"SetSpriteString","text":""},{"location":"RSDKv5/Functions/Animations-Sprites/SetSpriteString/#description","title":"Description","text":"<p>Converts a string into a sprite string. Calling this function will replace each character with a frame index and prepare it for drawing.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/SetSpriteString/#parameters","title":"Parameters","text":"<ul> <li> <p><code>aniFrames</code> The sprite animation to use frames from.</p> </li> <li> <p><code>listID</code> The index of the animation in the animation list to use frames from.</p> </li> <li> <p><code>string</code> The string to apply the frame indices to.</p> </li> </ul>"},{"location":"RSDKv5/Functions/Animations-Sprites/SetSpriteString/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv5/Functions/Animations-Sprites/SetSpriteString/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.SetSpriteString(uint16 aniFrames, uint16 listID, String *string);\n</code></pre> <pre><code>String.SetSpriteString(SpriteAnimation aniFrames, uint16 listID);\n</code></pre>"},{"location":"RSDKv5/Functions/Animations-Sprites/SetSpriteString/#examples","title":"Examples","text":"CC++ <pre><code>RSDK.LoadSpriteAnimation(MyObject-&gt;aniFrames, 0, &amp;string);\n</code></pre> <pre><code>string.Load(sVars-&gt;aniFrames, 0);\n</code></pre>"},{"location":"RSDKv5/Functions/Debugging/AddViewableVariable/","title":"AddViewableVariable","text":""},{"location":"RSDKv5/Functions/Debugging/AddViewableVariable/#description","title":"Description","text":"<p>Adds a viewable variable to the dev menu. Viewable variables exist until the scene is changed or reloaded.</p>"},{"location":"RSDKv5/Functions/Debugging/AddViewableVariable/#parameters","title":"Parameters","text":"<ul> <li> <p><code>name</code> The display name of the viewable variable in the dev menu. Display names may be a maximum of 15 characters long.</p> </li> <li> <p><code>value</code> A pointer to the value to be tracked, viewed and edited in the dev menu.</p> </li> <li> <p><code>type</code> The type of the viewable variable, this should match the type of <code>value</code>. See ViewableVarTypes for more info on what types are valid.</p> </li> <li> <p><code>min</code> The minimum value of the viewable variable (inclusive).</p> </li> <li> <p><code>max</code> The maximum value of the viewable variable (inclusive).</p> </li> </ul>"},{"location":"RSDKv5/Functions/Debugging/AddViewableVariable/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv5/Functions/Debugging/AddViewableVariable/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.AddViewableVariable(const char *name, void *value, int32 type, int32 min, int32 max);\n</code></pre> <pre><code>Dev::AddViewableVariable(const char *name, void *value, int32 type, int32 min, int32 max);\n</code></pre>"},{"location":"RSDKv5/Functions/Debugging/AddViewableVariable/#examples","title":"Examples","text":"CC++ <pre><code>RSDK.AddViewableVariable(\"Debug Mode\", &amp;SceneInfo-&gt;debugMode, VIEWVAR_BOOL, false, true);\n</code></pre> <pre><code>Dev::AddViewableVariable(\"Debug Mode\", &amp;sceneInfo-&gt;debugMode, Dev::VIEWVAR_BOOL, false, true)\n</code></pre>"},{"location":"RSDKv5/Functions/Debugging/AddViewableVariable/#remarks","title":"Remarks","text":"<p>This function is suppported by RSDKv5 Revision 02 &amp; RSDKv5U only. It does not exist in RSDKv5 Revision 01.</p>"},{"location":"RSDKv5/Functions/Debugging/ClearViewableVariables/","title":"ClearViewableVariables","text":""},{"location":"RSDKv5/Functions/Debugging/ClearViewableVariables/#description","title":"Description","text":"<p>Clears all loaded viewable variables.</p>"},{"location":"RSDKv5/Functions/Debugging/ClearViewableVariables/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv5/Functions/Debugging/ClearViewableVariables/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv5/Functions/Debugging/ClearViewableVariables/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.ClearViewableVariables();\n</code></pre> <pre><code>Dev::ClearViewableVariables();\n</code></pre>"},{"location":"RSDKv5/Functions/Debugging/ClearViewableVariables/#examples","title":"Examples","text":"CC++ <pre><code>RSDK.ClearViewableVariables();\n</code></pre> <pre><code>Dev::ClearViewableVariables();\n</code></pre>"},{"location":"RSDKv5/Functions/Debugging/ClearViewableVariables/#remarks","title":"Remarks","text":"<p>This function is suppported by RSDKv5 Revision 02 &amp; RSDKv5U only. It does not exist in RSDKv5 Revision 01.</p>"},{"location":"RSDKv5/Functions/Editor/RSDK_ACTIVE_VAR/","title":"RSDK_ACTIVE_VAR","text":""},{"location":"RSDKv5/Functions/Editor/RSDK_ACTIVE_VAR/#description","title":"Description","text":"<p>Sets a variable to be the \"active variable\" when using RSDK_ENUM_VAR</p>"},{"location":"RSDKv5/Functions/Editor/RSDK_ACTIVE_VAR/#parameters","title":"Parameters","text":"<ul> <li> <p><code>sVars</code> The static vars of the object class the variable is in.</p> </li> <li> <p><code>variable</code> The name of the variable to set as active.</p> </li> </ul>"},{"location":"RSDKv5/Functions/Editor/RSDK_ACTIVE_VAR/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv5/Functions/Editor/RSDK_ACTIVE_VAR/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK_ACTIVE_VAR(sVars, variable);\n</code></pre> <pre><code>RSDK_ACTIVE_VAR(sVars, variable);\n</code></pre>"},{"location":"RSDKv5/Functions/Editor/RSDK_ACTIVE_VAR/#examples","title":"Examples","text":"CC++ <pre><code>RSDK_ACTIVE_VAR(Player, characterID);\n</code></pre> <pre><code>RSDK_ACTIVE_VAR(sVars, characterID);\n</code></pre>"},{"location":"RSDKv5/Functions/Editor/RSDK_ACTIVE_VAR/#remarks","title":"Remarks","text":"<p>This is a macro, which is designed to make programming in RSDK easier. The underlying function is <code>void (*SetActiveVariable)(int32 classID, const char *name)</code>, with <code>classID</code> being the object's classID and <code>name</code> being the variable's name as a string. The underlying function should NEVER be called as it's less safe than the macro, this remark is here for anyone wishing to learn about the internals or hoping to develop a wrapper for another language that doesn't support macros.</p>"},{"location":"RSDKv5/Functions/Editor/RSDK_DRAWING_OVERLAY/","title":"RSDK_DRAWING_OVERLAY","text":""},{"location":"RSDKv5/Functions/Editor/RSDK_DRAWING_OVERLAY/#description","title":"Description","text":"<p>Enables/disables \"overlay\" mode when drawing.</p>"},{"location":"RSDKv5/Functions/Editor/RSDK_DRAWING_OVERLAY/#parameters","title":"Parameters","text":"<ul> <li><code>isDrawingOverlay</code> Determines if the following code should be considered an \"overlay\", used for gizmos and stuff that shouldn't effect the selection area.</li> </ul>"},{"location":"RSDKv5/Functions/Editor/RSDK_DRAWING_OVERLAY/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv5/Functions/Editor/RSDK_DRAWING_OVERLAY/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK_DRAWING_OVERLAY(bool32 isDrawingOverlay);\n</code></pre> <pre><code>RSDK_DRAWING_OVERLAY(bool32 isDrawingOverlay);\n</code></pre>"},{"location":"RSDKv5/Functions/Editor/RSDK_DRAWING_OVERLAY/#examples","title":"Examples","text":"CC++ <pre><code>RSDK_DRAWING_OVERLAY(true);\n\n// draw sprites and stuff\n\nRSDK_DRAWING_OVERLAY(false);\n</code></pre> <pre><code>RSDK_DRAWING_OVERLAY(true);\n\n// draw sprites and stuff\n\nRSDK_DRAWING_OVERLAY(false);\n</code></pre>"},{"location":"RSDKv5/Functions/Editor/RSDK_DRAWING_OVERLAY/#remarks","title":"Remarks","text":"<p>This is a macro, which is designed to make programming in RSDK easier. The underlying logic is <code>SceneInfo-&gt;debugMode = isDrawingOverlay</code>, <code>SceneInfo-&gt;debugMode</code> being the flag that determines if drawing is in \"overlay mode\" or not. The underlying logc should NEVER be used as it's less safe than the macro, this remark is here for anyone wishing to learn about the internals or hoping to develop a wrapper for another language that doesn't support macros.</p>"},{"location":"RSDKv5/Functions/Editor/RSDK_ENUM_VAR/","title":"RSDK_ENUM_VAR","text":""},{"location":"RSDKv5/Functions/Editor/RSDK_ENUM_VAR/#description","title":"Description","text":"<p>Adds an enum variable to the current active variable.</p>"},{"location":"RSDKv5/Functions/Editor/RSDK_ENUM_VAR/#parameters","title":"Parameters","text":"<ul> <li> <p><code>varName</code> The name of the enum var to add to the active variable. The value of the enum var will be the the amount of enum vars added minus 1, so the first enum var will have a value of 0, the second enum var will have a value of 1, etc.</p> </li> <li> <p><code>varValue</code> (UNUSED) in the C API this is to visibly show what enum var correlates to what enum value in the code. This parameter never does anything in the code due to the way the system works in RSDKv5.</p> </li> </ul>"},{"location":"RSDKv5/Functions/Editor/RSDK_ENUM_VAR/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"RSDKv5/Functions/Editor/RSDK_ENUM_VAR/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK_ENUM_VAR(const char* varName, int32 varValue);\n</code></pre> <pre><code>RSDK_ENUM_VAR(const char* varName);\n</code></pre>"},{"location":"RSDKv5/Functions/Editor/RSDK_ENUM_VAR/#examples","title":"Examples","text":"CC++ <pre><code>RSDK_ENUM_VAR(\"Sonic\", PLAYER_CHAR_SONIC);\n</code></pre> <pre><code>RSDK_ENUM_VAR(\"Sonic\");\n</code></pre>"},{"location":"RSDKv5/Functions/Editor/RSDK_ENUM_VAR/#remarks","title":"Remarks","text":"<p>This is a macro, which is designed to make programming in RSDK easier. The underlying function is <code>void (*AddVarEnumValue)(const char *name)</code>, with <code>name</code> being the enum var's name as a string. The underlying function should NEVER be called as it's less safe than the macro, this remark is here for anyone wishing to learn about the internals or hoping to develop a wrapper for another language that doesn't support macros.</p>"},{"location":"RSDKv5/Functions/Editor/showGizmos/","title":"showGizmos","text":""},{"location":"RSDKv5/Functions/Editor/showGizmos/#description","title":"Description","text":"<p>Checks if gizmos should be visible for this object.</p>"},{"location":"RSDKv5/Functions/Editor/showGizmos/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"RSDKv5/Functions/Editor/showGizmos/#return-value","title":"Return Value","text":"<p>This function returns an true if gizmos should be enabled for this object, otherwise it returns false.</p>"},{"location":"RSDKv5/Functions/Editor/showGizmos/#syntax","title":"Syntax","text":"CC++ <pre><code>showGizmos();\n</code></pre> <pre><code>showGizmos();\n</code></pre>"},{"location":"RSDKv5/Functions/Editor/showGizmos/#examples","title":"Examples","text":"CC++ <pre><code>if (showGizmos()) { /* do stuff */ }\n</code></pre> <pre><code>if (showGizmos()) { /* do stuff */ }\n</code></pre>"},{"location":"RSDKv5/Functions/Editor/showGizmos/#remarks","title":"Remarks","text":"<p>This is a macro, which is designed to make programming in RSDK easier. The underlying logic is <code>(SceneInfo-&gt;listPos == SceneInfo-&gt;entitySlot || SceneInfo-&gt;effectGizmo)</code>, <code>SceneInfo-&gt;listPos</code> being the currently selected entity in the editor and <code>SceneInfo-&gt;effectGizmo</code> being the flag that determines if all gizmos should be visible regardless of if the entity is selected or not. The underlying logic should NEVER be used as it's less safe than the macro, this remark is here for anyone wishing to learn about the internals or hoping to develop a wrapper for another language that doesn't support macros.</p>"},{"location":"RSDKv5/Functions/SpriteSheets/LoadSpriteSheet/","title":"LoadSpriteSheet","text":""},{"location":"RSDKv5/Functions/SpriteSheets/LoadSpriteSheet/#description","title":"Description","text":"<p>Loads a Spritesheet and returns the id of it.</p>"},{"location":"RSDKv5/Functions/SpriteSheets/LoadSpriteSheet/#parameters","title":"Parameters","text":"<ul> <li> <p><code>path</code> The file path to load the spritesheet from, relative to <code>Data/Sprites/</code>. Spritesheets may ONLY be in GIF format.</p> </li> <li> <p><code>scope</code> The asset's scope, may be <code>SCOPE_GLOBAL</code> or <code>SCOPE_STAGE</code>.</p> </li> </ul>"},{"location":"RSDKv5/Functions/SpriteSheets/LoadSpriteSheet/#return-value","title":"Return Value","text":"<p>This function returns an id to the loaded spritesheet as a <code>uint16</code>. The return value will be <code>-1</code> if the animation file failed to load.</p>"},{"location":"RSDKv5/Functions/SpriteSheets/LoadSpriteSheet/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.LoadSpriteSheet(const char* path, Scopes scope);\n</code></pre> <pre><code>SpriteSheet.Load(const char* path, Scopes scope);\n</code></pre>"},{"location":"RSDKv5/Functions/SpriteSheets/LoadSpriteSheet/#examples","title":"Examples","text":"CC++ <pre><code>MyObject-&gt;mySheet = RSDK.LoadSpriteSheet(\"Test/Objects.gif\", SCOPE_STAGE);\n</code></pre> <pre><code>sVars-&gt;mySheet.Load(\"Test/Objects.gif\", SCOPE_STAGE);\n</code></pre>"},{"location":"RSDKv5/Overview/","title":"RSDKv5 Overview","text":"<p>TODO: this</p>"},{"location":"RSonic/","title":"Retro Sonic","text":"<p>TODO: this</p>"},{"location":"Tools/RSDK-Anim-Editor/","title":"RSDK Animation Editor v1.5","text":"<p>This program is able to edit the various .bin files stored with the spritesheets. (maybe write more and show images)</p>"},{"location":"Tools/RSDK-Anim-Editor/#download","title":"Download","text":"<p>The latest release of the tool can be found Here</p>"},{"location":"Tools/RetroED/","title":"RetroED","text":"<p>Multi-purpose tool for editing levels, animations, config files and others from all versions of the Retro Engine.</p> <p>TODO: more</p>"},{"location":"Tools/RetroED/#download","title":"Download","text":"<p>The latest stable release of the tool can be found here.</p> <p>Experimental releases of the tool can be found here. (You must be signed into GitHub to download these builds.)</p>"}]}