{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"Games/","title":"Games","text":""},{"location":"Games/#game-list","title":"Game List","text":"Game RSDK Version Release Date Retro Sonic RSDKv1 8/13/2007 Sonic Nexus RSDKv2 9/3/2008 Sonic CD RSDKv3 12/14/2011 Sonic 1 RSDKv4 5/16/2013 Sonic 2 RSDKv4 12/12/2013 Sonic Mania RSDKv5 8/15/2017 Sonic Origins RSDKv5U 6/23/2022 <p>TODO: Are Retro Sonic and Sonic Nexus' release dates accurate? I just pulled them from the dates of the files in the downloads</p>"},{"location":"Games/#unreleasedcancelled-games","title":"Unreleased/Cancelled Games","text":"Game RSDK Version Retro Sonic Nexus RSDKv3 Freedom Planet RSDKv4 <p>TODO: Not sure if RSN was actually v3 or not, I just assume so since the latest blog entry in the archive is from 2011. Also put any other unreleased games in this list if we know of them, IDK how much we know about that game the Chippit script is from</p>"},{"location":"Games/SonicOrigins/HedgehogEngine2/","title":"Hedgehog Engine 2","text":"<p>TODO: This page is a stub; it needs more info</p> <p>Hedgehog Engine 2 (also referred to as HE2) is a game engine created by Sonic Team. The engine is a successor to the original Hedgehog Engine. The engine debuted in 2016 with Mario &amp; Sonic at the Rio 2016 Olympic Games, and has been used in several other SEGA games since, such as Sonic Forces, Puyo Puyo Tetris 2, and Sonic Origins.</p>"},{"location":"Games/SonicOrigins/HedgehogEngine2/#sonic-origins","title":"Sonic Origins","text":"<p>In addition to Hedgehog Engine 2, Sonic Origins also incorporates Retro Engine v5U as a backend to run the four playable remasters in the collection.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/","title":"NotifyCallback","text":"<p>NotifyCallback is a function in Sonic Origins that handles communicating between RSDKv5U and Hedgehog Engine 2.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/#usage","title":"Usage","text":"v3v4v5 <p>Set <code>game.callbackParam0</code>, <code>game.callbackParam1</code>, and <code>game.callbackParam2</code> to the needed parameters (unused parameters do not need to be set), then call EngineCallback() with <code>Callback</code> set to the appropriate callback ID.</p> <p>Note</p> <p>The names of each callback are not defined by the engine itself. Instead, Sonic Team elected to define them and their corresponding IDs as global variables in Sonic CD's GameConfig.</p> <p>Call CallNativeFunction2() or CallNativeFunction4() (depending on the amount of parameters needed) with <code>callback</code> set to NotifyCallback and <code>param1</code> set to the appropriate callback ID. Set <code>param2</code>, <code>param3</code>, and <code>param4</code> to the needed parameters. Unused parameters should be set to <code>0</code>.</p> <p>Note</p> <p>The names of each callback are not defined by the engine itself. Instead, Sonic Team elected to define them and their corresponding IDs as global variables in Sonic 1 and 2's GameConfigs.</p> <p>Call NotifyCallback() with <code>callback</code> set to the appropriate callback ID and <code>param1</code>, <code>param2</code>, and <code>param3</code> set to the needed parameters. Unused parameters should be set to <code>NULL</code>.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/#callbacks","title":"Callbacks","text":"ID Callback Description 128 NOTIFY_DEATH_EVENT Notifies Hedgehog Engine 2 of a Player death. 129 NOTIFY_TOUCH_SIGNPOST Notifies Hedgehog Engine 2 when a sign post has been touched. 130 NOTIFY_HUD_ENABLE 131 NOTIFY_ADD_COIN Awards the player the given amount of coins. 132 NOTIFY_KILL_ENEMY Notifies Hedgehog Engine 2 to update the mission objective. 133 NOTIFY_SAVESLOT_SELECT 134 NOTIFY_FUTURE_PAST 135 NOTIFY_GOTO_FUTURE_PAST 136 NOTIFY_BOSS_END 137 NOTIFY_SPECIAL_END 138 NOTIFY_DEBUGPRINT Has no effect in-game, but would have likely printed the given values to the console in debug builds of Sonic Origins. 139 NOTIFY_KILL_BOSS 140 NOTIFY_TOUCH_EMERALD 141 NOTIFY_STATS_ENEMY 142 NOTIFY_STATS_CHARA_ACTION 143 NOTIFY_STATS_RING 144 NOTIFY_STATS_MOVIE 145 NOTIFY_STATS_PARAM_1 146 NOTIFY_STATS_PARAM_2 147 NOTIFY_CHARACTER_SELECT Opens Sonic Origins's character select menu, then sets <code>callbackResult</code> and <code>continueFlag</code> when the menu is closed. 148 NOTIFY_SPECIAL_RETRY 149 NOTIFY_TOUCH_CHECKPOINT Notifies Hedgehog Engine 2 that a Lamp Post/Star Post has been touched. 150 NOTIFY_ACT_FINISH 151 NOTIFY_1P_VS_SELECT 152 NOTIFY_CONTROLLER_SUPPORT Opens the controller setup screen in the Nintendo Switch version of the game, then sets <code>callbackResult</code> based on the platform and controller count. 153 NOTIFY_STAGE_RETRY 154 NOTIFY_SOUND_TRACK 155 NOTIFY_GOOD_ENDING 156 NOTIFY_BACK_TO_MAINMENU 157 NOTIFY_LEVEL_SELECT_MENU 158 NOTIFY_PLAYER_SET 159 NOTIFY_EXTRAS_MODE 160 NOTIFY_SPIN_DASH_TYPE 161 NOTIFY_TIME_OVER 162 NOTIFY_TIMEATTACK_MODE 163 NOTIFY_STATS_BREAK_OBJECT 164 NOTIFY_STATS_SAVE_FUTURE 165 NOTIFY_STATS_CHARA_ACTION2 1000 NOTIFY_1000 Unknown callback. 1001 NOTIFY_1001 Unknown callback. 1002 NOTIFY_1002 Unknown callback. 1003 NOTIFY_PLAYER_SAVED_VALUES 1004 NOTIFY_1004 Unknown callback. 1005 NOTIFY_1005 Unknown callback. 1006 NOTIFY_TITLECARD_INIT"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/1PVSSelect/","title":"NOTIFY_1P_VS_SELECT","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/1PVSSelect/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/1PVSSelect/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/1PVSSelect/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/1PVSSelect/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/1PVSSelect/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/ActFinish/","title":"NOTIFY_ACT_FINISH","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/ActFinish/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/ActFinish/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/ActFinish/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/ActFinish/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/ActFinish/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/AddCoin/","title":"NOTIFY_ADD_COIN","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/AddCoin/#description","title":"Description","text":"<p>Awards the player the given amount of coins.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/AddCoin/#parameters","title":"Parameters","text":"<code>count</code> <p>The number of coins to give the player.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/AddCoin/#return-value","title":"Return Value","text":"v3v4v5 <p>Sets <code>game.coinCount</code> to the new coin count.</p> <p>Sets <code>game.coinCount</code> to the new coin count.</p> <p>Sets <code>globals-&gt;coinCount</code> to the new coin count.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/AddCoin/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = count\nEngineCallback(NOTIFY_ADD_COIN)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_ADD_COIN, int count)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_ADD_COIN, int32 count, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/AddCoin/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 1\nEngineCallback(NOTIFY_ADD_COIN)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_ADD_COIN, 1)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_ADD_COIN, 1, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/BackToMainMenu/","title":"NOTIFY_BACK_TO_MAINMENU","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/BackToMainMenu/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/BackToMainMenu/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/BackToMainMenu/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/BackToMainMenu/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/BackToMainMenu/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/BossEnd/","title":"NOTIFY_BOSS_END","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/BossEnd/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/BossEnd/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/BossEnd/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/BossEnd/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/BossEnd/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/CharacterSelect/","title":"NOTIFY_CHARACTER_SELECT","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/CharacterSelect/#description","title":"Description","text":"<p>Opens Sonic Origins's character select menu, then sets <code>callbackResult</code> and <code>continueFlag</code> when the menu is closed.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/CharacterSelect/#parameters","title":"Parameters","text":"<code>skipMenu</code> <p>If true, skips the character select and automatically loads the save slot for the current character.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/CharacterSelect/#return-value","title":"Return Value","text":"v3v4v5 <p>If the menu is backed out of without selecting a save slot, <code>game.callbackResult</code> is set to <code>0</code>; otherwise, it's set to <code>1</code>. If the selected save slot is an existing save, <code>game.continueFlag</code> is set to <code>true</code>.</p> <p>If the menu is backed out of without selecting a save slot, <code>game.callbackResult</code> is set to <code>0</code>; otherwise, it's set to <code>1</code>. If the selected save slot is an existing save, <code>game.continueFlag</code> is set to <code>true</code>.</p> <p>If the menu is backed out of without selecting a save slot, <code>globals-&gt;callbackResult</code> is set to <code>0</code>; otherwise, it's set to <code>1</code>. If the selected save slot is an existing save, <code>globals-&gt;continueFlag</code> is set to <code>true</code>.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/CharacterSelect/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = skipMenu\nEngineCallback(NOTIFY_CHARACTER_SELECT)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CHARACTER_SELECT, int skipMenu)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CHARACTER_SELECT, int32 skipMenu, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/CharacterSelect/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = false\nEngineCallback(NOTIFY_CHARACTER_SELECT)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CHARACTER_SELECT, false)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CHARACTER_SELECT, false, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/ControllerSupport/","title":"NOTIFY_CONTROLLER_SUPPORT","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/ControllerSupport/#description","title":"Description","text":"<p>Opens the controller setup screen in the Nintendo Switch version of the game, then sets <code>callbackResult</code> based on the platform and controller count.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/ControllerSupport/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/ControllerSupport/#return-value","title":"Return Value","text":"v3v4v5 <p><code>game.callbackResult</code> is set based on the platform and controller count: <pre><code>flowchart LR\n  A[Callback called] --&gt; B{Is on Nintendo&lt;br/&gt;Switch version?}\n  B --&gt; |Yes| C[Wait until controller&lt;br/&gt;setup screen is closed]\n  C --&gt; D{Are two controllers&lt;br/&gt;connected?}\n  D --&gt; |Yes| E[game.callbackResult&lt;br/&gt;is set to 1]\n  D --&gt; |No| F[game.callbackResult&lt;br/&gt;is set to 0]\n  B --&gt; |No| E</code></pre></p> <p><code>game.callbackResult</code> is set based on the platform and controller count: <pre><code>flowchart LR\n  A[Callback called] --&gt; B{Is on Nintendo&lt;br/&gt;Switch version?}\n  B --&gt; |Yes| C[Wait until controller&lt;br/&gt;setup screen is closed]\n  C --&gt; D{Are two controllers&lt;br/&gt;connected?}\n  D --&gt; |Yes| E[game.callbackResult&lt;br/&gt;is set to 1]\n  D --&gt; |No| F[game.callbackResult&lt;br/&gt;is set to 0]\n  B --&gt; |No| E</code></pre></p> <p><code>globals-&gt;callbackResult</code> is set based on the platform and controller count: <pre><code>flowchart LR\n  A[Callback called] --&gt; B{Is on Nintendo&lt;br/&gt;Switch version?}\n  B --&gt; |Yes| C[Wait until controller&lt;br/&gt;setup screen is closed]\n  C --&gt; D{Are two controllers&lt;br/&gt;connected?}\n  D --&gt; |Yes| E[globals-&gt;callbackResult&lt;br/&gt;is set to 1]\n  D --&gt; |No| F[globals-&gt;callbackResult&lt;br/&gt;is set to 0]\n  B --&gt; |No| E</code></pre></p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/ControllerSupport/#example","title":"Example","text":"v3v4v5 <pre><code>EngineCallback(NOTIFY_CONTROLLER_SUPPORT)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CONTROLLER_SUPPORT, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CONTROLLER_SUPPORT, NULL, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/DeathEvent/","title":"NOTIFY_DEATH_EVENT","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/DeathEvent/#description","title":"Description","text":"<p>Notifies Hedgehog Engine 2 of a Player death.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/DeathEvent/#parameters","title":"Parameters","text":"v3v4v5 <code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p> <p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/DeathEvent/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/DeathEvent/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_DEATH_EVENT, NULL, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/DeathEvent/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_DEATH_EVENT, NULL, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/DebugPrint/","title":"NOTIFY_DEBUGPRINT","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/DebugPrint/#description","title":"Description","text":"<p>Has no effect in-game, but would have likely printed the given values to the console in debug builds of Sonic Origins.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/DebugPrint/#parameters","title":"Parameters","text":"<code>value1</code>, <code>value2</code>, <code>value3</code> <p>The values to (supposedly) print.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/DebugPrint/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/DebugPrint/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = value1\ngame.callbackParam1 = value2\ngame.callbackParam2 = value3\nEngineCallback(NOTIFY_DEBUGPRINT)\n</code></pre> <p><pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_DEBUGPRINT, int value1)\n</code></pre> <pre><code>CallNativeFunction4(NotifyCallback, NOTIFY_DEBUGPRINT, int value1, int value2, int value3)\n</code></pre></p> <pre><code>NotifyCallback(NOTIFY_DEBUGPRINT, int32 value1, int32 value2, int32 value3);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/DebugPrint/#examples","title":"Examples","text":"v3v4v5 <pre><code>game.callbackParam0 = 100\ngame.callbackParam1 = Object.PropertyValue\ngame.callbackParam2 = Object.Timer\nEngineCallback(NOTIFY_DEBUGPRINT)\n</code></pre> <p><pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_DEBUGPRINT, object.state)\n</code></pre> <pre><code>CallNativeFunction4(NotifyCallback, NOTIFY_DEBUGPRINT, 100, object.propertyValue, object.timer)\n</code></pre></p> <pre><code>NotifyCallback(NOTIFY_DEBUGPRINT, 100, this-&gt;type, this-&gt;timer);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/ExtrasMode/","title":"NOTIFY_EXTRAS_MODE","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/ExtrasMode/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/ExtrasMode/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/ExtrasMode/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/ExtrasMode/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/ExtrasMode/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/FuturePast/","title":"NOTIFY_FUTURE_PAST","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/FuturePast/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/FuturePast/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/FuturePast/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/FuturePast/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/FuturePast/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/GoodEnding/","title":"NOTIFY_GOOD_ENDING","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/GoodEnding/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/GoodEnding/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/GoodEnding/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/GoodEnding/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/GoodEnding/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/GotoFuturePast/","title":"NOTIFY_GOTO_FUTURE_PAST","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/GotoFuturePast/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/GotoFuturePast/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/GotoFuturePast/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/GotoFuturePast/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/GotoFuturePast/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/HUDEnable/","title":"NOTIFY_HUD_ENABLE","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/HUDEnable/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/HUDEnable/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/HUDEnable/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/HUDEnable/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/HUDEnable/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/KillBoss/","title":"NOTIFY_KILL_BOSS","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/KillBoss/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/KillBoss/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/KillBoss/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/KillBoss/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/KillBoss/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/KillEnemy/","title":"NOTIFY_KILL_ENEMY","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/KillEnemy/#description","title":"Description","text":"<p>Notifies Hedgehog Engine 2 to update the mission objective.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/KillEnemy/#parameters","title":"Parameters","text":"v3v4v5 <code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p> <code>todo2</code> <p>Todo. Used to add an amount.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/KillEnemy/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/KillEnemy/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_KILL_ENEMY, int32 todo, int32 todo2, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/KillEnemy/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_KILL_ENEMY, 0, 0, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/LevelSelectMenu/","title":"NOTIFY_LEVEL_SELECT_MENU","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/LevelSelectMenu/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/LevelSelectMenu/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/LevelSelectMenu/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/LevelSelectMenu/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/LevelSelectMenu/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/PlayerSavedValues/","title":"NOTIFY_PLAYER_SAVED_VALUES","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/PlayerSavedValues/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/PlayerSavedValues/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/PlayerSavedValues/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/PlayerSavedValues/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/PlayerSavedValues/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/PlayerSet/","title":"NOTIFY_PLAYER_SET","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/PlayerSet/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/PlayerSet/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/PlayerSet/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/PlayerSet/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/PlayerSet/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SaveSlotSelect/","title":"NOTIFY_SAVESLOT_SELECT","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SaveSlotSelect/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SaveSlotSelect/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SaveSlotSelect/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SaveSlotSelect/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SaveSlotSelect/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SoundTrack/","title":"NOTIFY_SOUND_TRACK","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SoundTrack/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SoundTrack/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SoundTrack/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SoundTrack/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SoundTrack/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SpecialEnd/","title":"NOTIFY_SPECIAL_END","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SpecialEnd/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SpecialEnd/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SpecialEnd/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SpecialEnd/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SpecialEnd/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SpecialRetry/","title":"NOTIFY_SPECIAL_RETRY","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SpecialRetry/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SpecialRetry/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SpecialRetry/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SpecialRetry/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SpecialRetry/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SpindashType/","title":"NOTIFY_SPIN_DASH_TYPE","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SpindashType/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SpindashType/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SpindashType/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SpindashType/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/SpindashType/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StageRetry/","title":"NOTIFY_STAGE_RETRY","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StageRetry/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StageRetry/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StageRetry/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StageRetry/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StageRetry/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsBreakObject/","title":"NOTIFY_STATS_BREAK_OBJECT","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsBreakObject/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsBreakObject/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsBreakObject/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsBreakObject/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsBreakObject/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsCharaAction/","title":"NOTIFY_STATS_CHARA_ACTION","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsCharaAction/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsCharaAction/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsCharaAction/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsCharaAction/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsCharaAction/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsCharaAction2/","title":"NOTIFY_STATS_CHARA_ACTION2","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsCharaAction2/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsCharaAction2/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsCharaAction2/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsCharaAction2/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsCharaAction2/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsEnemy/","title":"NOTIFY_STATS_ENEMY","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsEnemy/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsEnemy/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsEnemy/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsEnemy/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsEnemy/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsMovie/","title":"NOTIFY_STATS_MOVIE","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsMovie/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsMovie/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsMovie/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsMovie/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsMovie/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsParam1/","title":"NOTIFY_STATS_PARAM_1","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsParam1/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsParam1/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsParam1/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsParam1/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsParam1/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsParam2/","title":"NOTIFY_STATS_PARAM_2","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsParam2/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsParam2/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsParam2/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsParam2/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsParam2/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsRing/","title":"NOTIFY_STATS_RING","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsRing/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsRing/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsRing/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsRing/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsRing/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsSaveFuture/","title":"NOTIFY_STATS_SAVE_FUTURE","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsSaveFuture/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsSaveFuture/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsSaveFuture/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsSaveFuture/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/StatsSaveFuture/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TimeAttackMode/","title":"NOTIFY_TIMEATTACK_MODE","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TimeAttackMode/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TimeAttackMode/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TimeAttackMode/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TimeAttackMode/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TimeAttackMode/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TimeOver/","title":"NOTIFY_TIME_OVER","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TimeOver/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TimeOver/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TimeOver/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TimeOver/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TimeOver/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TitleCardInit/","title":"NOTIFY_TITLECARD_INIT","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TitleCardInit/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TitleCardInit/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TitleCardInit/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TitleCardInit/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TitleCardInit/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TouchCheckpoint/","title":"NOTIFY_TOUCH_CHECKPOINT","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TouchCheckpoint/#description","title":"Description","text":"<p>Notifies Hedgehog Engine 2 that a Lamp Post/Star Post has been touched.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TouchCheckpoint/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TouchCheckpoint/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TouchCheckpoint/#example","title":"Example","text":"v3v4v5 <pre><code>EngineCallback(NOTIFY_TOUCH_CHECKPOINT)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_TOUCH_CHECKPOINT, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_TOUCH_CHECKPOINT, NULL, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TouchEmerald/","title":"NOTIFY_TOUCH_EMERALD","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TouchEmerald/#description","title":"Description","text":"<p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TouchEmerald/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TouchEmerald/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TouchEmerald/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, int32 todo, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TouchEmerald/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_CALLBACK, 0, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TouchSignPost/","title":"NOTIFY_TOUCH_SIGNPOST","text":""},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TouchSignPost/#description","title":"Description","text":"<p>Notifies Hedgehog Engine 2 when a sign post has been touched to signify the completion of the stage in mission mode. In Sonic 3 &amp; Knuckles this is only called from the <code>SignPost2</code> object.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TouchSignPost/#parameters","title":"Parameters","text":"v3v4v5 <code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p> <p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TouchSignPost/#return-value","title":"Return Value","text":"<p>None.</p>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TouchSignPost/#syntax","title":"Syntax","text":"v3v4v5 <pre><code>game.callbackParam0 = todo\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, int todo)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_TOUCH_SIGNPOST, NULL, NULL, NULL);\n</code></pre>"},{"location":"Games/SonicOrigins/Documentation/NotifyCallback/TouchSignPost/#example","title":"Example","text":"v3v4v5 <pre><code>game.callbackParam0 = 0\nEngineCallback(NOTIFY_CALLBACK)\n</code></pre> <pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_CALLBACK, 0)\n</code></pre> <pre><code>NotifyCallback(NOTIFY_TOUCH_SIGNPOST, NULL, NULL, NULL);\n</code></pre>"},{"location":"Guides/Games/Sonic1-2/Datapack/","title":"Obtaining the Sonic 1 &amp; 2 Datapacks","text":"<p>The datapacks for Sonic 1 and 2 are required for both playing and modding the games.</p>"},{"location":"Guides/Games/Sonic1-2/Datapack/#prerequisites","title":"Prerequisites","text":"AndroidiOSSonic Origins (Steam)Sonic Origins (EGS) <ul> <li>An APK extractor app (anything from the Google Play Store should work)</li> <li>ZArchiver</li> <li>Sonic 1 or Sonic 2 installed from the Google Play Store</li> </ul> <ul> <li>A jailbroken iOS device</li> <li>Filza (Available on the BigBoss package repo: <code>http://apt.thebigboss.org/repofiles/cydia/</code>)</li> <li>Sonic 1 or Sonic 2 installed from the App Store</li> </ul> <ul> <li>Steam installed and running</li> <li>Sonic Origins installed from Steam</li> </ul> <ul> <li>Epic Games Launcher installed and running</li> <li>Sonic Origins installed from the Epic Games Store</li> </ul>"},{"location":"Guides/Games/Sonic1-2/Datapack/#obtaining-the-datapacks","title":"Obtaining the Datapacks","text":"AndroidiOSSonic Origins (Steam)Sonic Origins (EGS) <p>TODO: Verify that this still works, I basically just copy-pasted my old tutorial from three years ago, also needs screenshots</p> <p>Use your APK extracting app of choice to get an APK file of Sonic 1 or Sonic 2.</p> <p>Open ZArchiver, then navigate to the folder containing the extracted APK file.</p> <p>Touch and hold down the APK file until a pop-up menu appears. Tap View. (If you don't see View, try tapping the file instead of holding it down.)</p> <p>Navigate into the <code>assets</code> folder, then scroll down until you find <code>Data.rsdk.xmf</code>. Touch and hold down the file, then tap Copy.</p> <p>Navigate into a folder you know you can easily access. Tap the clipboard button to paste the file into that folder.</p> <p>Touch and hold down the <code>Data.rsdk.xmf</code> file once more, then tap Rename. Name the file <code>Data.rsdk</code>, then tap OK.</p> <p>Open Filza, then tap the  Favorites icon at the bottom. In the menu that appears, tap Apps manager.</p> <p></p> <p>A list of your installed apps will appear. Tap the  info icon next to Sonic 1 or Sonic 2, then choose Bundle.</p> <p> </p> <p>Tap <code>Sonic 1 US.app</code> or <code>Sonic 2 iOS US.app</code>, then you should see <code>Data.rsdk</code> and <code>DataSonic1.rsdk</code>. These are the datapacks for Sonic 2 and Sonic 1, respectively.</p> <p> </p> <p>To share the file with another app, tap the file, open the Hex Editor, then tap the  Share button in the top right corner. When you're finished, tap Done in the Hex Editor to close it.</p> <p> </p> <p>Open your Steam library, then right click Sonic Origins and click <code>Manage</code> &gt; <code>Browse local files</code>.</p> <p></p> <p>In the File Explorer window that appears, open <code>image/x64/raw/retro</code>. The datapacks for Sonic 1 and Sonic 2 are <code>Sonic1u.rsdk</code> and <code>Sonic2u.rsdk</code> respectively.</p> <p></p> <p>Open your Epic Games library, then right click Sonic Origins and click <code>Manage</code>. In the menu that appears, click the  Open Install Location button next to the Uninstall button.</p> <p>TODO: screenshot of the above</p> <p>In the File Explorer window that appears, open <code>image/x64/raw/retro</code>. The datapacks for Sonic 1 and Sonic 2 are <code>Sonic1u.rsdk</code> and <code>Sonic2u.rsdk</code> respectively.</p> <p></p>"},{"location":"Guides/Games/Sonic3K/Datapack/","title":"Obtaining the Sonic 3 &amp; Knuckles Datapack","text":"<p>The datapack for Sonic 3 &amp; Knuckles is required for both playing and modding the game.</p>"},{"location":"Guides/Games/Sonic3K/Datapack/#prerequisites","title":"Prerequisites","text":"SteamEpic Games Store <ul> <li>Steam installed and running</li> <li>Sonic Origins installed from Steam</li> </ul> <ul> <li>Epic Games Launcher installed and running</li> <li>Sonic Origins installed from the Epic Games Store</li> </ul>"},{"location":"Guides/Games/Sonic3K/Datapack/#obtaining-the-datapack","title":"Obtaining the Datapack","text":"SteamEpic Games Store <p>Open your Steam library, then right click Sonic Origins and click <code>Manage</code> &gt; <code>Browse local files</code>.</p> <p></p> <p>In the File Explorer window that appears, open <code>image/x64/raw/retro</code>. The datapack for Sonic 3 &amp; Knuckles is <code>Sonic3ku.rsdk</code>.</p> <p></p> <p>Open your Epic Games library, then right click Sonic Origins and click <code>Manage</code>. In the menu that appears, click the  Open Install Location button next to the Uninstall button.</p> <p>TODO: screenshot of the above</p> <p>In the File Explorer window that appears, open <code>image/x64/raw/retro</code>. The datapack for Sonic 3 &amp; Knuckles is <code>Sonic3ku.rsdk</code>.</p> <p></p>"},{"location":"Guides/Games/SonicCD/Datapack/","title":"Obtaining the Sonic CD Datapack","text":"<p>The datapack for Sonic CD is required for both playing and modding the game.</p>"},{"location":"Guides/Games/SonicCD/Datapack/#prerequisites","title":"Prerequisites","text":"AndroidiOSSonic Origins (Steam)Sonic Origins (EGS)Blit (Steam) <ul> <li>ZArchiver</li> <li>Sonic CD installed from the Google Play Store</li> </ul> <ul> <li>A jailbroken iOS device</li> <li>Filza (Available on the BigBoss package repo: <code>http://apt.thebigboss.org/repofiles/cydia/</code>)</li> <li>Sonic CD installed from the App Store</li> </ul> <ul> <li>Steam installed and running</li> <li>Sonic Origins installed from Steam</li> </ul> <ul> <li>Epic Games Launcher installed and running</li> <li>Sonic Origins installed from the Epic Games Store</li> </ul> <ul> <li>Steam installed and running</li> <li>Sonic CD installed from Steam</li> </ul>"},{"location":"Guides/Games/SonicCD/Datapack/#obtaining-the-datapack","title":"Obtaining the Datapack","text":"AndroidiOSSonic Origins (Steam)Sonic Origins (EGS)Blit (Steam) <p>Open ZArchiver, then keep pressing <code>..</code> until you reach the root <code>/</code> directory.</p> <p></p> <p>Navigate to <code>/data/app/</code>, then find and open the folder attributed to Sonic CD.</p> <p> </p> <p>Open the folder beginning with <code>com.sega.soniccd.classic</code>, then you will find a file named <code>split_packs.apk</code>. Tap the file and then select <code>View</code> in the menu that appears.</p> <p> </p> <p>Open the <code>assets</code> folder, then you will find a file named <code>Data.rsdk.xmf</code>. Copy the file into a directory of your choice and then rename the file to <code>Data.rsdk</code>.</p> <p> </p> <p>Open Filza, then tap the  Favorites icon at the bottom. In the menu that appears, tap Apps manager.</p> <p></p> <p>A list of your installed apps will appear. Tap the  info icon next to Sonic CD, then choose Bundle.</p> <p> </p> <p>Tap <code>Sonic CD iOS.app</code>, then you should see the datapack <code>Data.rsdk</code>.</p> <p> </p> <p>To share one of the files with another app, tap the file, open the Hex Editor, then tap the  Share button in the top right corner. When you're finished, tap Done in the Hex Editor to close it.</p> <p> </p> <p>Open your Steam library, then right click Sonic Origins and click <code>Manage</code> &gt; <code>Browse local files</code>.</p> <p></p> <p>In the File Explorer window that appears, open <code>image/x64/raw/retro</code>. The datapack for Sonic CD is <code>SonicCDu.rsdk</code>.</p> <p></p> <p>Open your Epic Games library, then right click Sonic Origins and click <code>Manage</code>. In the menu that appears, click the  Open Install Location button next to the Uninstall button.</p> <p>TODO: screenshot of the above</p> <p>In the File Explorer window that appears, open <code>image/x64/raw/retro</code>. The datapack for Sonic CD is <code>SonicCDu.rsdk</code>.</p> <p></p> <p>Open your Steam library, then right click Sonic CD and click <code>Manage</code> &gt; <code>Browse local files</code>.</p> <p></p> <p>In the File Explorer window that appears, the datapack is <code>Data.rsdk</code>.</p> <p></p>"},{"location":"Guides/Games/SonicMania/Datapack/","title":"Obtaining the Sonic Mania Datapack","text":"<p>The datapack for Sonic Mania is required for both playing and modding the game.</p>"},{"location":"Guides/Games/SonicMania/Datapack/#prerequisites","title":"Prerequisites","text":"SteamEpic Games Store <ul> <li>Steam installed and running</li> <li>Sonic Mania installed from Steam</li> </ul> <ul> <li>Epic Games Launcher installed and running</li> <li>Sonic Mania installed from the Epic Games Store</li> </ul>"},{"location":"Guides/Games/SonicMania/Datapack/#obtaining-the-datapack","title":"Obtaining the Datapack","text":"SteamEpic Games Store <p>Open your Steam library, then right click Sonic Mania and click <code>Manage</code> &gt; <code>Browse local files</code>.</p> <p></p> <p>In the File Explorer window that appears, the datapack is <code>Data.rsdk</code>.</p> <p></p> <p>Open your Epic Games library, then right click Sonic Mania and click <code>Manage</code>. In the menu that appears, click the  Open Install Location button next to the Uninstall button.</p> <p> </p> <p>In the File Explorer window that appears, the datapack is <code>Data.rsdk</code>.</p> <p></p>"},{"location":"Guides/RSDKv3/Decompilation/Building/","title":"Building the RSDKv3 Decompilation","text":"<p>The RSDKv3 Decompilation uses CMake, a versatile building system that supports many different compilers and platforms.</p>","tags":["RSDKv3"]},{"location":"Guides/RSDKv3/Decompilation/Building/#read-before-proceeding","title":"Read before proceeding","text":"<p>This guide requires basic knowledge of how to use the appropriate terminal for your OS, such as Command Prompt for Windows. If you aren't familiar with doing basic actions with terminals, such as opening one in specific directories, look up a tutorial online.</p> <p>In addition, refer to these warnings depending on the platform you are compiling for:</p> WindowsLinuxAndroid <p>Warning</p> <p>Make sure to use Command Prompt when typing commands instead of PowerShell, as PowerShell is known to cause issues.</p> <p>Notice for Steam Deck users</p> <p>Due to how SteamOS handles packages, building the decompilation on the Steam Deck is highly difficult and not recommended. Instead, consider building it on another Arch Linux device and using that build on the Steam Deck.</p> <p>TODO</p>","tags":["RSDKv3"]},{"location":"Guides/RSDKv3/Decompilation/Building/#get-the-source-code","title":"Get the source code","text":"<p>In order to clone the repository, you need to install Git, which you can get here.</p> <p>Clone the repo recursively, using: <pre><code>git clone --recursive https://github.com/RSDKModding/RSDKv3-Decompilation\n</code></pre></p> <p>If you've already cloned the repo, run these commands inside of the repository to ensure the clone is up-to-date: <pre><code>git pull\ngit submodule update --remote --init --recursive\n</code></pre></p>","tags":["RSDKv3"]},{"location":"Guides/RSDKv3/Decompilation/Building/#getting-dependencies","title":"Getting dependencies","text":"WindowsLinuxAndroid <p>Install CMake. Make sure to enable the feature to add CMake to the system PATH during the installation.</p> <p>To handle dependencies, you'll need to install Visual Studio Community with the <code>Desktop development with C++</code> workload. If you already have Visual Studio installed, you can manage your installed workloads by opening Visual Studio Installer from the Start Menu and clicking the <code>Modify</code> button next to your Visual Studio installation.</p> <p>Warning</p> <p>An installation of Visual Studio with the <code>Desktop development with C++</code> workload uses around 8 GB of storage space. Make sure you have the necessary space on your drive before proceeding.</p> <p>You will also need to set up vcpkg. You only need to follow <code>1 - Set up vcpkg</code> in the guide.</p> <p>Tip</p> <p>It's recommended to clone vcpkg into a short path such as <code>C:/src</code> to avoid potential file path issues.</p> <p>Run the following command in the vcpkg repository:</p> 64-bit32-bit <pre><code>vcpkg.exe install glew sdl2 libogg libtheora libvorbis --triplet=x64-windows-static\n</code></pre> <pre><code>vcpkg.exe install glew sdl2 libogg libtheora libvorbis --triplet=x86-windows-static\n</code></pre> <p>Then, add vcpkg to your environment variables by running the following commands in the vcpkg repository: <pre><code>set VCPKG_ROOT=\"%CD%\"\nsetx VCPKG_ROOT %VCPKG_ROOT%\n</code></pre></p> <p>Run the following command in the terminal:</p> pacman (Arch)apt (Debian/Ubuntu)rpm (Fedora)apk (Alpine/PostmarketOS)xbps (Void) <pre><code>sudo pacman -S base-devel cmake glew sdl2 libogg libtheora libvorbis\n</code></pre> <pre><code>sudo apt install build-essential cmake libglew-dev libglfw3-dev libsdl2-dev libogg-dev libtheora-dev libvorbis-dev\n</code></pre> <pre><code>sudo dnf install make gcc cmake glew-devel glfw-devel sdl2-devel libogg-devel libtheora-devel libvorbis-devel zlib-devel\n</code></pre> <pre><code>sudo apk add build-base cmake glew-dev glfw-dev sdl2-dev libogg-dev libtheora-dev libvorbis-dev\n</code></pre> <pre><code>sudo xbps-install make cmake pkg-config glew-devel glfw-devel SDL2-devel libogg-devel libtheora-devel libvorbis-devel  zlib-devel\n</code></pre> <p>Download and install Android Studio.</p> <p>Download the ZIP archives for libogg, libvorbis, and libtheora from xiph.org, then extract and place the <code>libogg-X.X.X</code>, <code>libvorbis-X.X.X</code>, and <code>libtheora-X.X.X</code> folders into <code>RSDKv3-Decompilation/dependencies/android</code>. Rename the folders <code>libogg</code>, <code>libvorbis</code>, and <code>libtheora</code> respectively.</p> <p>Download the source code for SDL version 2.28.3, then extract and place the <code>SDL2-2.28.3</code> folder into <code>RSDKv3-Decompilation/dependencies/android</code>. Rename the folder <code>SDL2</code>.</p> <p>Download the binaries for GLEW from glew.sourceforge.net, then extract and place the <code>glew-X.X.X</code> folder into <code>RSDKv3-Decompilation/dependencies/android</code>. Rename the folder <code>glew</code>.</p> <p>Navigate to <code>RSDKv3-Decompilation/android/app/jni</code> and delete the <code>src</code> file in it, then create the symbolic links in the following table in that directory:</p> Symlink Name Path <code>SDL</code> Path to <code>RSDKv3-Decompilation/dependencies/android/SDL2</code> <code>src</code> Path to <code>RSDKv3-Decompilation</code> <p>How do I make a symbolic link?</p> <p>You can create a symlink using the appropriate command:</p> <ul> <li>Windows: <code>mklink /d \"[symlink-name]\" \"[path]\"</code> (or use Link Shell Extension)</li> <li>Linux: <code>ln -s \"[path]\" \"[symlink-name]\"</code></li> </ul>","tags":["RSDKv3"]},{"location":"Guides/RSDKv3/Decompilation/Building/#compiling","title":"Compiling","text":"WindowsLinuxAndroid <p>Enter the following commands in the RSDKv3 decompilation repository directory:</p> 64-bit32-bit <pre><code>cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=\"%VCPKG_ROOT%/scripts/buildsystems/vcpkg.cmake\" -DVCPKG_TARGET_TRIPLET=x64-windows-static -DCMAKE_PREFIX_PATH=\"%VCPKG_ROOT%/installed/x64-windows-static/\"\ncmake --build build --config release\n</code></pre> <pre><code>cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=\"%VCPKG_ROOT%/scripts/buildsystems/vcpkg.cmake\" -DVCPKG_TARGET_TRIPLET=x86-windows-static -DCMAKE_PREFIX_PATH=\"%VCPKG_ROOT%/installed/x86-windows-static/\" -A Win32\ncmake --build build --config release\n</code></pre> <p>The resulting build will be located somewhere in <code>build/</code> depending on your system.</p> <p>You can set build flags by adding <code>-D[flag-name]=[value]</code> to the end of the first command. For example, to build with <code>RETRO_DISABLE_PLUS</code> set to on, add <code>-DRETRO_DISABLE_PLUS=on</code> to the command.</p> <p>Enter the following commands in the RSDKv3 decompilation repository directory: <pre><code>cmake -B build -DCMAKE_BUILD_TYPE=Release\ncmake --build build --config release\n</code></pre></p> <p>The resulting build will be located somewhere in <code>build/</code> depending on your system.</p> <p>You can set build flags by adding <code>-D[flag-name]=[value]</code> to the end of the first command. For example, to build with <code>RETRO_DISABLE_PLUS</code> set to on, add <code>-DRETRO_DISABLE_PLUS=on</code> to the command.</p> <p>TODO: Be more descriptive</p> <p>Open <code>RSDKv3-Decompilation/android/</code> in Android Studio, install the NDK and everything else that it asks for, and build.</p>","tags":["RSDKv3"]},{"location":"Guides/RSDKv3/Decompilation/Building/#build-flags","title":"Build Flags","text":"<p>Warning</p> <p>These build flags modify certain aspects of the decomp; only use these if you know what you're doing!</p> Flag Description Value Type Default Value RETRO_DISABLE_PLUS Disables access to content from Sonic Origins's Plus Expansion Pack. Any publicly distributed builds must have this flag enabled. Boolean <code>off</code> RETRO_FORCE_CASE_INSENSITIVE Forces case insensivity when loading files. Boolean <code>off</code> RETRO_MOD_LOADER Enables the ability the load mods and certain features related to them. Boolean <code>on</code> RETRO_USE_HW_RENDER Enables the option to use the Hardware Renderer used for the mobile version of Sonic CD. Boolean <code>on</code> RETRO_SDL_VERSION Switches between using SDL 1.2 or SDL 2. Integer (<code>1</code> or <code>2</code>) <code>2</code>","tags":["RSDKv3"]},{"location":"Guides/RSDKv3/Decompilation/ModSetup/","title":"Setting Up Mods for the RSDKv3 Decompilation","text":"<p>TODO: screenshots</p> <p>Note</p> <p>This guide assumes you have already set up the RSDKv3 Decompilation.</p>","tags":["RSDKv3"]},{"location":"Guides/RSDKv3/Decompilation/ModSetup/#decompiled-scripts","title":"Decompiled Scripts","text":"<p>Info</p> <p>The decompiled scripts are required for script mods to work. When a script mod is enabled, these scripts are compiled by the decompilation at runtime and allow custom script code to function in-game.</p> <p>Go to the RSDKv3 Script Decompilation GitHub repository and download the master branch by clicking the green <code>Code</code> button, then selecting <code>Download ZIP</code> in the drop-down menu.</p> <p>Extract the ZIP file, then copy the <code>Scripts</code> folder into the decompilation directory.</p>","tags":["RSDKv3"]},{"location":"Guides/RSDKv3/Decompilation/ModSetup/#mods-folder","title":"Mods Folder","text":"<p>Warning</p> <p>Due to the original engine not being designed with mod support in mind, many mods might not be compatible with each other; using multiple mods that edit the same files/scripts can easily break the game. Only use mods together if they are completely independent of each other or are designed to be compatible with each other.</p> <p>Create a folder named <code>mods</code> in the decompilation directory.</p> <p>Download and extract the mod(s) you'd like to use into this folder. The file structure should look like this: <pre><code>mods/\n\u2514\u2500\u2500 Mod Folder/\n    \u251c\u2500\u2500 Data/\n    \u2502   \u2514\u2500\u2500 [data assets]\n    \u2514\u2500\u2500 mod.ini\n</code></pre></p>","tags":["RSDKv3"]},{"location":"Guides/RSDKv3/Decompilation/ModSetup/#using-the-mod-loader","title":"Using the Mod Loader","text":"<p>Enable the Dev Menu, then while the decompilation is running, press Esc to open the Dev Menu. You can also select it in the pause menu or the Help &amp; Options menu.</p> <p>When the Dev Menu is open, choose <code>MODS</code> to open the Mod List.</p> <p>To control the menu, press  or  to select a mod, and press  to toggle the mod on or off.</p> <p>How do I change mod priority?</p> <p>Mod priority is determined based on the order of the mods in the Mod List; mods get loaded from bottom to top. You can shift a mod up or down in the Mod List by holding  while pressing  or .</p>","tags":["RSDKv3"]},{"location":"Guides/RSDKv3/Decompilation/Setup/","title":"Setting Up the RSDKv3 Decompilation","text":"","tags":["RSDKv3"]},{"location":"Guides/RSDKv3/Decompilation/Setup/#prerequisites","title":"Prerequisites","text":"<ul> <li>A build of the RSDKv3 Decompilation for the target platform. You can get one by:<ul> <li>Building the source code (Recommended)</li> <li>Downloading the latest release (Origins Plus DLC will not be accessible)</li> <li>Downloading an autobuild (Must be signed into GitHub to download, Origins Plus DLC will not be accessible)</li> </ul> </li> <li>A datapack (Data.rsdk) for Sonic CD</li> <li>Visual C++ Redistributables (Windows only)</li> </ul>","tags":["RSDKv3"]},{"location":"Guides/RSDKv3/Decompilation/Setup/#setup","title":"Setup","text":"WindowsLinuxAndroid <p>TODO: screenshots</p> <p>Tip</p> <p>It's highly recommended to enable file extensions in File Explorer to reduce the chance of a file being named incorrectly.</p> <p>Place the decompilation EXE file (and any included DLL files) in the target directory.</p> <p>Warning</p> <p>DO NOT place the decompilation in a Windows user directory. This includes folders such as Documents, Downloads, and the Desktop. These directories are known to cause issues with the decomp, such as crashes or mods not working. It's recommended to instead place the decomp somewhere in a <code>Games</code> folder located in the root of C drive, or another drive entirely if possible.</p> <p>Place the <code>Data.rsdk</code> file in this directory. If you have the Blit release of Sonic CD, you can copy its <code>videos</code> folder here as well.</p> <p>Note</p> <p>If you're using a datapack from Sonic Origins, you will need to extract the datapack and place the extracted <code>Data</code> and <code>Bytecode</code> folders in the decompilation directory. Make sure the datapack is not present in the directory so that the decomp doesn't read it.</p> <p>Note</p> <p>If you're using a datapack from the mobile version of Sonic CD, you will need to enable the <code>HardwareRenderer</code> setting found in the <code>Window</code> category of the <code>settings.ini</code> file. If you don't see this file, opening the decomp will generate it. Make sure the decomp isn't running when editing the file.</p> <p>TODO</p> <p>TODO</p>","tags":["RSDKv3"]},{"location":"Guides/RSDKv4/Decompilation/Building/","title":"Building the RSDKv4 Decompilation","text":"<p>The RSDKv4 Decompilation uses CMake, a versatile building system that supports many different compilers and platforms.</p>","tags":["RSDKv4"]},{"location":"Guides/RSDKv4/Decompilation/Building/#read-before-proceeding","title":"Read before proceeding","text":"<p>This guide requires basic knowledge of how to use the appropriate terminal for your OS, such as Command Prompt for Windows. If you aren't familiar with doing basic actions with terminals, such as opening one in specific directories, look up a tutorial online.</p> <p>In addition, refer to these warnings depending on the platform you are compiling for:</p> WindowsLinuxAndroid <p>Warning</p> <p>Make sure to use Command Prompt when typing commands instead of PowerShell, as PowerShell is known to cause issues.</p> <p>Notice for Steam Deck users</p> <p>Due to how SteamOS handles packages, building the decompilation on the Steam Deck is highly difficult and not recommended. Instead, consider building it on another Arch Linux device and using that build on the Steam Deck.</p> <p>TODO</p>","tags":["RSDKv4"]},{"location":"Guides/RSDKv4/Decompilation/Building/#get-the-source-code","title":"Get the source code","text":"<p>In order to clone the repository, you need to install Git, which you can get here.</p> <p>Clone the repo recursively, using: <pre><code>git clone --recursive https://github.com/RSDKModding/RSDKv4-Decompilation\n</code></pre></p> <p>If you've already cloned the repo, run these commands inside of the repository to ensure the clone is up-to-date: <pre><code>git pull\ngit submodule update --remote --init --recursive\n</code></pre></p>","tags":["RSDKv4"]},{"location":"Guides/RSDKv4/Decompilation/Building/#getting-dependencies","title":"Getting dependencies","text":"WindowsLinuxAndroid <p>Install CMake. Make sure to enable the feature to add CMake to the system PATH during the installation.</p> <p>To handle dependencies, you'll need to install Visual Studio Community with the <code>Desktop development with C++</code> workload. If you already have Visual Studio installed, you can manage your installed workloads by opening Visual Studio Installer from the Start Menu and clicking the <code>Modify</code> button next to your Visual Studio installation.</p> <p>Warning</p> <p>An installation of Visual Studio with the <code>Desktop development with C++</code> workload uses around 8 GB of storage space. Make sure you have the necessary space on your drive before proceeding.</p> <p>You will also need to set up vcpkg. You only need to follow <code>1 - Set up vcpkg</code> in the guide.</p> <p>Tip</p> <p>It's recommended to clone vcpkg into a short path such as <code>C:/src</code> to avoid potential file path issues.</p> <p>Run the following command in the vcpkg repository:</p> 64-bit32-bit <pre><code>vcpkg.exe install glew sdl2 libogg libvorbis --triplet=x64-windows-static\n</code></pre> <pre><code>vcpkg.exe install glew sdl2 libogg libvorbis --triplet=x86-windows-static\n</code></pre> <p>Then, add vcpkg to your environment variables by running the following commands in the vcpkg repository: <pre><code>set VCPKG_ROOT=\"%CD%\"\nsetx VCPKG_ROOT %VCPKG_ROOT%\n</code></pre></p> <p>Run the following command in the terminal:</p> pacman (Arch)apt (Debian/Ubuntu)rpm (Fedora)apk (Alpine/PostmarketOS)xbps (Void) <pre><code>sudo pacman -S base-devel cmake glew sdl2 libogg libvorbis\n</code></pre> <pre><code>sudo apt install build-essential cmake libglew-dev libglfw3-dev libsdl2-dev libogg-dev libvorbis-dev\n</code></pre> <pre><code>sudo dnf install make gcc cmake glew-devel glfw-devel sdl2-devel libogg-devel libvorbis-devel zlib-devel\n</code></pre> <pre><code>sudo apk add build-base cmake glew-dev glfw-dev sdl2-dev libogg-dev libvorbis-dev\n</code></pre> <pre><code>sudo xbps-install make cmake pkg-config glew-devel glfw-devel SDL2-devel libogg-devel libvorbis-devel  zlib-devel\n</code></pre> <p>Download and install Android Studio.</p> <p>Download the ZIP archives for libogg and libvorbis from xiph.org, then extract and place the <code>libogg-X.X.X</code> and <code>libvorbis-X.X.X</code> folders into <code>RSDKv4-Decompilation/dependencies/android</code>. Rename the folders <code>libogg</code> and <code>libvorbis</code>, respectively.</p> <p>Download the source code for SDL version 2.28.3, then extract and place the <code>SDL2-2.28.3</code> folder into <code>RSDKv4-Decompilation/dependencies/android</code>. Rename the folder <code>SDL</code>.</p> <p>Download the binaries for GLEW from glew.sourceforge.net, then extract and place the <code>glew-X.X.X</code> folder into <code>RSDKv4-Decompilation/dependencies/android</code>. Rename the folder <code>glew</code>.</p> <p>Navigate to <code>RSDKv4-Decompilation/android/app/jni</code> and delete the <code>src</code> file in it, then create the symbolic links in the following table in that directory:</p> Symlink Name Path <code>SDL</code> Path to <code>RSDKv4-Decompilation/dependencies/android/SDL</code> <code>src</code> Path to <code>RSDKv4-Decompilation</code> <p>How do I make a symbolic link?</p> <p>You can create a symlink using the appropriate command:</p> <ul> <li>Windows: <code>mklink /d \"[symlink-name]\" \"[path]\"</code> (or use Link Shell Extension)</li> <li>Linux: <code>ln -s \"[path]\" \"[symlink-name]\"</code></li> </ul>","tags":["RSDKv4"]},{"location":"Guides/RSDKv4/Decompilation/Building/#compiling","title":"Compiling","text":"WindowsLinuxAndroid <p>Enter the following commands in the RSDKv4 decompilation repository directory:</p> 64-bit32-bit <pre><code>cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=\"%VCPKG_ROOT%/scripts/buildsystems/vcpkg.cmake\" -DVCPKG_TARGET_TRIPLET=x64-windows-static -DCMAKE_PREFIX_PATH=\"%VCPKG_ROOT%/installed/x64-windows-static/\"\ncmake --build build --config release\n</code></pre> <pre><code>cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=\"%VCPKG_ROOT%/scripts/buildsystems/vcpkg.cmake\" -DVCPKG_TARGET_TRIPLET=x86-windows-static -DCMAKE_PREFIX_PATH=\"%VCPKG_ROOT%/installed/x86-windows-static/\" -A Win32\ncmake --build build --config release\n</code></pre> <p>The resulting build will be located somewhere in <code>build/</code> depending on your system.</p> <p>You can set build flags by adding <code>-D[flag-name]=[value]</code> to the end of the first command. For example, to build with <code>RETRO_DISABLE_PLUS</code> set to on, add <code>-DRETRO_DISABLE_PLUS=on</code> to the command.</p> <p>Enter the following commands in the RSDKv4 decompilation repository directory: <pre><code>cmake -B build -DCMAKE_BUILD_TYPE=Release\ncmake --build build --config release\n</code></pre></p> <p>The resulting build will be located somewhere in <code>build/</code> depending on your system.</p> <p>You can set build flags by adding <code>-D[flag-name]=[value]</code> to the end of the first command. For example, to build with <code>RETRO_DISABLE_PLUS</code> set to on, add <code>-DRETRO_DISABLE_PLUS=on</code> to the command.</p> <p>TODO: Be more descriptive</p> <p>Open <code>RSDKv4-Decompilation/android/</code> in Android Studio, install the NDK and everything else that it asks for, and build.</p>","tags":["RSDKv4"]},{"location":"Guides/RSDKv4/Decompilation/Building/#build-flags","title":"Build Flags","text":"<p>Warning</p> <p>These build flags modify certain aspects of the decomp; only use these if you know what you're doing!</p> Flag Description Value Type Default Value RETRO_REVISION The RSDKv4 revision to compile. Datapacks for certain versions of Sonic 1/2 only work on older revisions. Integer (See Revisions) <code>3</code> RETRO_DISABLE_PLUS Disables access to content from Sonic Origins's Plus Expansion Pack. Any publicly distributed builds must have this flag enabled. Boolean <code>off</code> RETRO_FORCE_CASE_INSENSITIVE Forces case insensivity when loading files. Boolean <code>off</code> RETRO_MOD_LOADER Enables the ability the load mods and certain features related to them. Boolean <code>on</code> RETRO_NETWORKING Enables networking features used for Sonic 2's 2P VS mode. Boolean <code>on</code> RETRO_USE_HW_RENDER Enables the Hardware Renderer used for native menus and objects. The main menu, pause menu, and touch controls will not be visible if this is disabled. Boolean <code>on</code> RETRO_SDL_VERSION Switches between using SDL 1.2 or SDL 2. Integer (<code>1</code> or <code>2</code>) <code>2</code>","tags":["RSDKv4"]},{"location":"Guides/RSDKv4/Decompilation/Building/#revisions","title":"Revisions","text":"Flag Value Revision 0 REV00 (Initial Sonic 1 Release) 1 REV01 (Initial Sonic 2 Release) 2 REV02 (Sega Forever) 3 REV03 (RSDKv5U Legacy v4 Mode)","tags":["RSDKv4"]},{"location":"Guides/RSDKv4/Decompilation/ModSetup/","title":"Setting Up Mods for the RSDKv4 Decompilation","text":"<p>TODO: screenshots</p> <p>Note</p> <p>This guide assumes you have already set up the RSDKv4 Decompilation.</p>","tags":["RSDKv4"]},{"location":"Guides/RSDKv4/Decompilation/ModSetup/#decompiled-scripts","title":"Decompiled Scripts","text":"<p>Info</p> <p>The decompiled scripts are required for script mods to work. When a script mod is enabled, these scripts are compiled by the decompilation at runtime and allow custom script code to function in-game.</p> <p>Go to the RSDKv4 Script Decompilation GitHub repository and download the master branch by clicking the green <code>Code</code> button, then selecting <code>Download ZIP</code> in the drop-down menu.</p> <p>Extract the ZIP file, then copy the <code>Scripts</code> folder for the appropriate game into the decompilation directory.</p>","tags":["RSDKv4"]},{"location":"Guides/RSDKv4/Decompilation/ModSetup/#mods-folder","title":"Mods Folder","text":"<p>Warning</p> <p>Due to the original engine not being designed with mod support in mind, many mods might not be compatible with each other; using multiple mods that edit the same files/scripts can easily break the game. Only use mods together if they are completely independent of each other or are designed to be compatible with each other.</p> <p>Create a folder named <code>mods</code> in the decompilation directory.</p> <p>Download and extract the mod(s) you'd like to use into this folder. The file structure should look like this: <pre><code>mods/\n\u2514\u2500\u2500 Mod Folder/\n    \u251c\u2500\u2500 Data/\n    \u2502   \u2514\u2500\u2500 [data assets]\n    \u2514\u2500\u2500 mod.ini\n</code></pre></p>","tags":["RSDKv4"]},{"location":"Guides/RSDKv4/Decompilation/ModSetup/#using-the-mod-loader","title":"Using the Mod Loader","text":"<p>Enable the Dev Menu, then while the decompilation is running, press Esc to open the Dev Menu. You can also select it in the pause menu or the Help &amp; Options menu.</p> <p>When the Dev Menu is open, choose <code>MODS</code> to open the Mod List.</p> <p>To control the menu, press  or  to select a mod, and press  to toggle the mod on or off.</p> <p>How do I change mod priority?</p> <p>Mod priority is determined based on the order of the mods in the Mod List; mods get loaded from bottom to top. You can shift a mod up or down in the Mod List by holding  while pressing  or .</p>","tags":["RSDKv4"]},{"location":"Guides/RSDKv4/Decompilation/Setup/","title":"Setting Up the RSDKv4 Decompilation","text":"","tags":["RSDKv4"]},{"location":"Guides/RSDKv4/Decompilation/Setup/#prerequisites","title":"Prerequisites","text":"<ul> <li>A build of the RSDKv4 Decompilation for the target platform. You can get one by:<ul> <li>Building the source code (Recommended)</li> <li>Downloading the latest release (Origins Plus DLC will not be accessible)</li> <li>Downloading an autobuild (Must be signed into GitHub to download, Origins Plus DLC will not be accessible)</li> </ul> </li> <li>A datapack (Data.rsdk) for Sonic 1 or 2</li> <li>Visual C++ Redistributables (Windows only)</li> </ul>","tags":["RSDKv4"]},{"location":"Guides/RSDKv4/Decompilation/Setup/#setup","title":"Setup","text":"WindowsLinuxAndroid <p>TODO: screenshots</p> <p>Tip</p> <p>It's highly recommended to enable file extensions in File Explorer to reduce the chance of a file being named incorrectly.</p> <p>Place the decompilation EXE file (and any included DLL files) in the target directory.</p> <p>Warning</p> <p>DO NOT place the decompilation in a Windows user directory. This includes folders such as Documents, Downloads, and the Desktop. These directories are known to cause issues with the decomp, such as crashes or mods not working. It's recommended to instead place the decomp somewhere in a <code>Games</code> folder located in the root of C drive, or another drive entirely if possible.</p> <p>Place the <code>Data.rsdk</code> file in this directory.</p> <p>Note</p> <p>If you're using a datapack from Sonic Origins, you will need to extract the datapack and place the extracted <code>Data</code> and <code>Bytecode</code> folders in the decompilation directory. Make sure the datapack is not present in the directory so that the decomp doesn't read it.</p> <p>TODO</p> <p>TODO</p>","tags":["RSDKv4"]},{"location":"Guides/RSDKv5/Decompilation/Building/","title":"Building the RSDKv5 &amp; Sonic Mania Decompilations","text":"<p>The RSDKv5 and Sonic Mania decompilations use CMake, a versatile building system that supports many different compilers and platforms.</p>","tags":["RSDKv5"]},{"location":"Guides/RSDKv5/Decompilation/Building/#read-before-proceeding","title":"Read before proceeding","text":"<p>This guide requires basic knowledge of how to use the appropriate terminal for your OS, such as Command Prompt for Windows. If you aren't familiar with doing basic actions with terminals, such as opening one in specific directories, look up a tutorial online.</p> <p>In addition, refer to these warnings depending on the platform you are compiling for:</p> WindowsLinuxNintendo SwitchAndroid <p>Warning</p> <p>Make sure to use Command Prompt when typing commands instead of PowerShell, as PowerShell is known to cause issues.</p> <p>Notice for Steam Deck users</p> <p>Due to how SteamOS handles packages, building the decompilation on the Steam Deck is highly difficult and not recommended. Instead, consider building it on another Arch Linux device and using that build on the Steam Deck.</p> <p>TODO</p> <p>TODO</p>","tags":["RSDKv5"]},{"location":"Guides/RSDKv5/Decompilation/Building/#get-the-source-code","title":"Get the source code","text":"<p>In order to clone the repository, you need to install Git, which you can get here.</p> <p>Clone the repo recursively, using:</p> RSDKv5 + Sonic ManiaRSDKv5 Only <pre><code>git clone --recursive https://github.com/RSDKModding/Sonic-Mania-Decompilation\n</code></pre> <pre><code>git clone --recursive https://github.com/RSDKModding/RSDKv5-Decompilation\n</code></pre> <p>If you've already cloned the repo, run these commands inside of the repository to ensure the clone is up-to-date: <pre><code>git pull\ngit submodule update --remote --init --recursive\n</code></pre></p>","tags":["RSDKv5"]},{"location":"Guides/RSDKv5/Decompilation/Building/#getting-dependencies","title":"Getting dependencies","text":"WindowsLinuxNintendo SwitchAndroid <p>Install CMake. Make sure to enable the feature to add CMake to the system PATH during the installation.</p> <p>To handle dependencies, you'll need to install Visual Studio Community with the <code>Desktop development with C++</code> workload. If you already have Visual Studio installed, you can manage your installed workloads by opening Visual Studio Installer from the Start Menu and clicking the <code>Modify</code> button next to your Visual Studio installation.</p> <p>Warning</p> <p>An installation of Visual Studio with the <code>Desktop development with C++</code> workload uses around 8 GB of storage space. Make sure you have the necessary space on your drive before proceeding.</p> <p>You will also need to set up vcpkg. You only need to follow <code>1 - Set up vcpkg</code> in the guide.</p> <p>Tip</p> <p>It's recommended to clone vcpkg into a short path such as <code>C:/src</code> to avoid potential file path issues.</p> <p>Run the following command in the vcpkg repository:</p> 64-bit32-bit <pre><code>vcpkg.exe install libtheora libogg glew glfw3 sdl2 --triplet=x64-windows-static\n</code></pre> <pre><code>vcpkg.exe install libtheora libogg glew glfw3 sdl2 --triplet=x86-windows-static\n</code></pre> <p>Then, add vcpkg to your environment variables by running the following commands in the vcpkg repository: <pre><code>set VCPKG_ROOT=\"%CD%\"\nsetx VCPKG_ROOT %VCPKG_ROOT%\n</code></pre></p> <p>Run the following command in the terminal:</p> pacman (Arch)apt (Debian/Ubuntu)rpm (Fedora)apk (Alpine/PostmarketOS)xbps (Void) <pre><code>sudo pacman -S base-devel cmake glew glfw libtheora sdl2\n</code></pre> <pre><code>sudo apt install build-essential cmake libglew-dev libglfw3-dev libtheora-dev libsdl2-dev\n</code></pre> <pre><code>sudo dnf install make cmake gcc glew-devel glfw-devel libtheora-devel sdl2-devel zlib-devel\n</code></pre> <pre><code>sudo apk add build-base cmake gcc glew-dev glfw-dev libtheora-dev sdl2-dev\n</code></pre> <pre><code>sudo xbps-install make cmake gcc pkg-config glew-devel glfw-devel libtheora-devel SDL2-devel zlib-devel\n</code></pre> <p>Set up devKitPro, then run the following command: <pre><code>(dkp-)pacman -Syuu switch-dev switch-libogg switch-libtheora switch-sdl2 switch-glad\n</code></pre></p> <p>Download and install Android Studio.</p> RSDKv5 + Sonic ManiaRSDKv5 Only <p>Download the ZIP archives for libogg and libtheora from xiph.org, then extract and place the <code>libogg-X.X.X</code> and <code>libtheora-X.X.X</code> folders into <code>Sonic-Mania-Decompilation/dependencies/RSDKv5/dependencies/android</code>. Rename the folders <code>libogg</code> and <code>libtheora</code>, respectively.</p> <p>Navigate to <code>Sonic-Mania-Decompilation/dependencies/RSDKv5/android/app/jni</code> and create the symbolic links in the following table in that directory:</p> <p>Download the ZIP archives for libogg and libtheora from xiph.org, then extract and place the <code>libogg-X.X.X</code> and <code>libtheora-X.X.X</code> folders into <code>RSDKv5-Decompilation/dependencies/android</code>. Rename the folders <code>libogg</code> and <code>libtheora</code>, respectively.</p> <p>Navigate to <code>RSDKv5-Decompilation/android/app/jni</code> and create the symbolic links in the following table in that directory:</p> Symlink Name Path <code>Game</code> Path to <code>Sonic-Mania-Decompilation</code> (or any other game you'd like to build) Name of any mod(s) you'd like to add Path to the directory for the mod's code containing a <code>CMakeLists.txt</code> file <p>How do I make a symbolic link?</p> <p>You can create a symlink using the appropriate command:</p> <ul> <li>Windows: <code>mklink /d \"[symlink-name]\" \"[path]\"</code> (or use Link Shell Extension)</li> <li>Linux: <code>ln -s \"[path]\" \"[symlink-name]\"</code></li> </ul>","tags":["RSDKv5"]},{"location":"Guides/RSDKv5/Decompilation/Building/#compiling","title":"Compiling","text":"WindowsLinuxNintendo SwitchAndroid <p>Enter the following commands in the RSDKv5/Mania decompilation repository directory:</p> 64-bit32-bit <pre><code>cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=\"%VCPKG_ROOT%/scripts/buildsystems/vcpkg.cmake\" -DVCPKG_TARGET_TRIPLET=x64-windows-static\ncmake --build build --config release\n</code></pre> <pre><code>cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=\"%VCPKG_ROOT%/scripts/buildsystems/vcpkg.cmake\" -DVCPKG_TARGET_TRIPLET=x86-windows-static -A Win32\ncmake --build build --config release\n</code></pre> <p>The resulting build(s) will be located somewhere in <code>build/</code> depending on your system. If you built RSDKv5 and Sonic Mania together, Sonic Mania (<code>Game.dll</code>) will be found in <code>build</code> while RSDKv5 (<code>RSDKv5(U).exe</code>) will be found in <code>build/dependencies/RSDKv5</code>.</p> <p>You can set build flags by adding <code>-D[flag-name]=[value]</code> to the end of the first command. For example, to build with <code>RETRO_DISABLE_PLUS</code> set to on, add <code>-DRETRO_DISABLE_PLUS=on</code> to the command.</p> <p>Enter the following commands in the RSDKv5/Mania decompilation repository directory: <pre><code>cmake -B build -DCMAKE_BUILD_TYPE=Release\ncmake --build build --config release\n</code></pre></p> <p>The resulting build(s) will be located somewhere in <code>build/</code> depending on your system. If you built RSDKv5 and Sonic Mania together, Sonic Mania (<code>libGame.so</code>) will be found in <code>build</code> while RSDKv5 (<code>RSDKv5(U)</code>) will be found in <code>build/dependencies/RSDKv5</code>.</p> <p>You can set build flags by adding <code>-D[flag-name]=[value]</code> to the end of the first command. For example, to build with <code>RETRO_DISABLE_PLUS</code> set to on, add <code>-DRETRO_DISABLE_PLUS=on</code> to the command.</p> <p>Enter the following commands in the RSDKv5/Mania decompilation repository directory: <pre><code>cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=/opt/devkitpro/cmake/Switch.cmake\ncmake --build build --config release\n</code></pre></p> <p>The resulting build will be located somewhere in <code>build/</code> depending on your system.</p> <p>You can set build flags by adding <code>-D[flag-name]=[value]</code> to the end of the first command. For example, to build with <code>RETRO_DISABLE_PLUS</code> set to on, add <code>-DRETRO_DISABLE_PLUS=on</code> to the command.</p> <p>TODO: Be more descriptive</p> RSDKv5 + Sonic ManiaRSDKv5 Only <p>Open <code>Sonic-Mania-Decompilation/dependencies/RSDKv5/android/</code> in Android Studio, install the NDK and everything else that it asks for, and build.</p> <p>Open <code>RSDKv5-Decompilation/android/</code> in Android Studio, install the NDK and everything else that it asks for, and build.</p>","tags":["RSDKv5"]},{"location":"Guides/RSDKv5/Decompilation/Building/#build-flags","title":"Build Flags","text":"<p>Warning</p> <p>These build flags modify certain aspects of the decomps; only use these if you know what you're doing!</p>","tags":["RSDKv5"]},{"location":"Guides/RSDKv5/Decompilation/Building/#rsdkv5","title":"RSDKv5","text":"Flag Description Value Type Default Value RETRO_REVISION The RSDKv5 revision to compile. Datapacks for certain versions of Sonic Mania only work on older revisions. Set to <code>3</code> to build RSDKv5U. Integer (See Revisions) <code>3</code> RETRO_DISABLE_PLUS Disables access to content from Sonic Mania and Sonic Origins' Plus DLC. Any publicly distributed builds must have this flag enabled. Boolean <code>off</code> RETRO_MOD_LOADER Enables the ability the load mods and certain features related to them. Boolean <code>on</code> RETRO_MOD_LOADER_VER The revision of the mod loader to build. Integer (<code>1</code> or <code>2</code>) <code>2</code> RETRO_SUBSYSTEM The backend used to handle rendering, controller inputs, etc. String (See Subsystems) <code>DX9</code> on Windows, <code>OGL</code> on other platforms","tags":["RSDKv5"]},{"location":"Guides/RSDKv5/Decompilation/Building/#revisions","title":"Revisions","text":"Flag Value Revision 1 REV01 (Sonic Mania Pre-Plus) 2 REV02 (Sonic Mania Plus) 3 REV0U (RSDKv5U)","tags":["RSDKv5"]},{"location":"Guides/RSDKv5/Decompilation/Building/#subsystems","title":"Subsystems","text":"Flag Value Subsystem DX9 DirectX 9 (Windows Only) DX11 DirectX 11 (Windows Only) OGL OpenGL SDL2 SDL2 VK Vulkan","tags":["RSDKv5"]},{"location":"Guides/RSDKv5/Decompilation/Building/#sonic-mania","title":"Sonic Mania","text":"Flag Description Value Type Default Value WITH_RSDK Builds RSDKv5 alongside Sonic Mania. Boolean <code>on</code> GAME_STATIC Builds both RSDKv5 and Sonic Mania into one executable. Has no effect if <code>WITH_RSDK</code> is disabled. Boolean <code>off</code> on Windows or Linux, <code>on</code> on other platforms MANIA_FIRST_RELEASE Builds the initial console release of Sonic Mania. Boolean <code>off</code> MANIA_PRE_PLUS Builds the last release of Sonic Mania before the Plus update. Boolean <code>off</code> GAME_INCLUDE_EDITOR Includes code for use in editors such as RetroED. Boolean <code>on</code> GAME_VERSION The version of the game to build. Has no effect if <code>MANIA_FIRST_RELEASE</code> or <code>MANIA_PRE_PLUS</code> are enabled. Integer (See Game Versions) <code>6</code>","tags":["RSDKv5"]},{"location":"Guides/RSDKv5/Decompilation/Building/#game-versions","title":"Game Versions","text":"Flag Value Game Version 0 1.00 - 1.02 (Initial console release) 3 1.03 (Initial Steam release, last Pre-Plus release) 5 1.04 / 1.05 (Mania Plus release) 6 1.06 (Latest Steam release) 7 1.07 (EGS/Origin release)","tags":["RSDKv5"]},{"location":"Guides/RSDKv5/Decompilation/ModSetup/","title":"Setting Up Mods for the RSDKv5 &amp; Sonic Mania Decompilations","text":"<p>TODO: screenshots</p> <p>Note</p> <p>This guide assumes you have already set up the RSDKv5 &amp; Sonic Mania decompilations.</p>","tags":["RSDKv5"]},{"location":"Guides/RSDKv5/Decompilation/ModSetup/#mods-folder","title":"Mods Folder","text":"<p>Create a folder named <code>mods</code> in the decompilation directory.</p> <p>Download and extract the mod(s) you'd like to use into this folder. The file structure should look like this: <pre><code>mods/\n\u2514\u2500\u2500 Mod Folder/\n    \u251c\u2500\u2500 Data/\n    \u2502   \u2514\u2500\u2500 [data assets]\n    \u251c\u2500\u2500 [logic file]\n    \u2514\u2500\u2500 mod.ini\n</code></pre></p>","tags":["RSDKv5"]},{"location":"Guides/RSDKv5/Decompilation/ModSetup/#using-the-mod-loader","title":"Using the Mod Loader","text":"<p>Enable the Dev Menu, then while the decompilation is running, press Esc to open the Dev Menu. You can also click/touch the top left corner of the window/screen.</p> <p>When the Dev Menu is open, choose <code>Mods</code> to open the Manage Mods menu.</p> <p>To control the menu, press  or  to select a mod, and press  to toggle the mod on or off.</p> <p>How do I change mod priority?</p> <p>Mod priority is determined based on the order of the mods in the mod list; mods get loaded from bottom to top. You can shift a mod up or down in the mod list by holding  while pressing  or .</p>","tags":["RSDKv5"]},{"location":"Guides/RSDKv5/Decompilation/Setup/","title":"Setting Up the RSDKv5 &amp; Sonic Mania Decompilations","text":"","tags":["RSDKv5"]},{"location":"Guides/RSDKv5/Decompilation/Setup/#prerequisites","title":"Prerequisites","text":"<ul> <li>A build of the RSDKv5 Decompilation for the target platform. You can get one by:<ul> <li>Building the source code (Recommended)</li> <li>Downloading the latest release (Mania/Origins Plus DLC will not be accessible)</li> <li>Downloading an autobuild (Must be signed into GitHub to download, Mania/Origins Plus DLC will not be accessible)</li> </ul> </li> <li>A build of the Sonic Mania Decompilation for the target platform. You can get one by:<ul> <li>Building the source code (Recommended)</li> <li>Downloading the latest release</li> <li>Downloading an autobuild (Must be signed into GitHub to download)</li> </ul> </li> <li>A datapack (Data.rsdk) for Sonic Mania<ul> <li>The decompilations are not compatible with datapacks from the Netflix Games releases of the game.</li> </ul> </li> <li>Visual C++ Redistributables (Windows only)</li> </ul>","tags":["RSDKv5"]},{"location":"Guides/RSDKv5/Decompilation/Setup/#setup","title":"Setup","text":"WindowsLinuxNintendo SwitchAndroid <p>TODO: screenshots</p> <p>Tip</p> <p>It's highly recommended to enable file extensions in File Explorer to reduce the chance of a file being named incorrectly.</p> <p>Place the decompilation EXE file (and any included DLL files) in the target directory.</p> <p>Place the <code>Data.rsdk</code> and <code>Game.dll</code> files in this directory.</p> <p>Tip</p> <p>If you're not using either DirectX subsystem, it's highly recommended to install the custom shaders mod.</p> <p>TODO</p> <p>TODO</p> <p>TODO</p>","tags":["RSDKv5"]},{"location":"Guides/RetroED/S3KOEditorLink/","title":"Using S3KOEditorLink With RetroED","text":"<p>Warning</p> <p>S3KOEditorLink is only compatible with Windows and requires owning the Steam version of Sonic Origins.</p>"},{"location":"Guides/RetroED/S3KOEditorLink/#prerequisites","title":"Prerequisites","text":"<ul> <li>RetroED</li> <li>S3KOEditorLink</li> <li>A PC runnning Windows</li> <li>Sonic Origins installed from Steam</li> </ul>"},{"location":"Guides/RetroED/S3KOEditorLink/#finding-the-game-executable-directory","title":"Finding the Game Executable Directory","text":"<p>Open your Steam library, then right click Sonic Origins and click <code>Manage</code> &gt; <code>Browse local files</code>.</p> <p></p> <p>In the File Explorer window that appears, open <code>build/main/projects/exec</code>.</p> <p></p>"},{"location":"Guides/RetroED/S3KOEditorLink/#setting-up-s3koeditorlink","title":"Setting Up S3KOEditorLink","text":"<p>Place the <code>Game.dll</code> file for S3KOEditorLink next to (NOT inside) the Data folder for your project (or your Base Data Folder, if one has been set). Copy the <code>SonicOrigins.exe</code> file from the game executable directory in the same place.</p>"},{"location":"Guides/RetroED/Editors/SceneEditor/","title":"Scene Editor","text":""},{"location":"Guides/RetroED/Editors/SceneEditor/#tools","title":"Tools","text":"Pre-v5v5 <ul> <li>Pan  : Allows the user to adjust the view of the scene. Controls:<ul> <li>Left Click (Drag): Moves camera through the editor. Shortcuts:<ul></ul></li> <li>S: Selects the Pan Tool as the current tool.</li> <li>Middle Click (Drag): Lets the user move the camera as if using the pan tool regardless of the currently selected tool.</li> </ul> </li> <li>Pencil  : Draws chunks on the stage. Controls:<ul> <li>Left Click: Places chunk in the scene at the current layer.</li> <li>Right Click: Selects chunk from the current layer for future placement.</li> <li>C: Picks a tile hovered by the cursor for editing in the Tile Properties tab. Shortcuts:<ul></ul></li> <li>A: Selects the Pencil Tool as the current tool.</li> </ul> </li> <li>Eraser  : Used for cleaning chunks on the layout with left click. Shortcuts:<ul> <li>R: Selects the Eraser Tool as the current tool.</li> </ul> </li> <li>Entity  : Select and move entities when in Select mode, or places entities when in Placement mode. Controls (Select Mode):<ul> <li>Left Click: Selects an entity, hold to move it around the stage.</li> <li>Right Click: Selects an entity, will skip a previously selected entity if it's overlapping</li> <li>Ctrl+C: Copies the currently selected entity.</li> <li>Ctrl+V: Pastes an stored entity at cursor's position.</li> <li>Up | Down | Left | Right: Moves the selected entity 4 px in the chosen direction.</li> <li>Up | Down | Left | Right + Ctrl: Moves the selected entity 16 px in the chosen direction.</li> <li>Up | Down | Left | Right + Shift: Moves the selected entity 1 px in the chosen direction.</li> <li>Del | Backspace: Deletes the selected entity.  Controls (Placement Mode):<ul></ul></li> <li>Left Click: Places an entity at the cursor's position.</li> <li>Right Click: Clears selected object and returns to Select mode. Shortcuts:<ul></ul></li> <li>E: Selects the Entity Tool as the current tool.</li> </ul> </li> <li>Select  : Selects and moves various entities. Controls:<ul> <li>Left Click (Drag): Selects all entities inside the select box.</li> <li>Left Click (Hold &amp; Drag on selected entity): Moves all entities using the hovered entity as an anchor.</li> <li>Del | Backspace: Deletes all selected entities. Shortcuts:<ul></ul></li> <li>W: Selects the Select Tool as the current tool.</li> </ul> </li> </ul> <ul> <li>Pan  : Allows the user to adjust the view of the scene. Controls:<ul> <li>Left Click (Drag): Moves camera through the editor. Shortcuts:<ul></ul></li> <li>S: Selects the Pan Tool as the current tool.</li> <li>Middle Click (Drag): Lets the user move the camera as if using the pan tool regardless of the currently selected tool.</li> </ul> </li> <li>Pencil  : Draws tiles on the stage. Controls:<ul> <li>Left Click: Places tile in the scene at the current layer.</li> <li>Right Click: Selects tile from the current layer for future placement.</li> <li>Z: Flips tile for placement horizontally.</li> <li>X: Flips tile for placement tile vertically. Shortcuts:<ul></ul></li> <li>A: Selects the Pencil Tool as the current tool.</li> </ul> </li> <li>Eraser  : Used for cleaning tiles on the layout with left click. Controls:<ul> <li>Left Click (Drag): Cleans tiles on the current layer at cursors position. Shortcuts:<ul></ul></li> <li>R: Selects the Eraser Tool as the current tool.</li> </ul> </li> <li>Stamp  : Places on the stage a preset of tiles selected from the Stamp List tab. Shortcuts:<ul> <li>K: Selects the Stamp Tool as the current tool.</li> </ul> </li> <li>Stamp Copy  : Stores a preset of tiles from the stage in the Stamp List by dragging with left click. Shortcuts:<ul> <li>L: Selects the Stamp Copy Tool as the current tool.</li> </ul> </li> <li>Entity  : Select and move entities when in Select mode, or places entities when in Placement mode. Controls (Select Mode):<ul> <li>Left Click: Selects an entity, hold to move it around the stage.</li> <li>Right Click: Selects an entity, will skip a previously selected entity if it's overlapping</li> <li>Ctrl+C: Copies the currently selected entity.</li> <li>Ctrl+V: Pastes an stored entity at cursor's position.</li> <li>Up | Down | Left | Right: Moves the selected entity 4 px in the chosen direction.</li> <li>Up | Down | Left | Right + Ctrl: Moves the selected entity 16 px in the chosen direction.</li> <li>Up | Down | Left | Right + Shift: Moves the selected entity 1 px in the chosen direction.</li> <li>Del | Backspace: Deletes the selected entity.  Controls (Placement Mode):<ul></ul></li> <li>Left Click: Places an entity at the cursor's position.</li> <li>Right Click: Clears selected object and returns to Select mode. Shortcuts:<ul></ul></li> <li>E : Selects the Entity Tool as the current tool.</li> </ul> </li> <li>Select  : Selects and moves various entities. Controls:<ul> <li>Left Click (Drag): Selects all entities inside the select box.</li> <li>Left Click (Hold &amp; Drag on selected entity): Moves all entities using the hovered entity as an anchor.</li> <li>Up | Down | Left | Right: Moves the selected entity 4 px in the chosen direction.</li> <li>Up | Down | Left | Right + Ctrl: Moves the selected entity 16 px in the chosen direction.</li> <li>Up | Down | Left | Right + Shift: Moves the selected entity 1 px in the chosen direction.</li> <li>Del | Backspace: Deletes all selected entities. Shortcuts:<ul></ul></li> <li>W: Selects the Select Tool as the current tool.</li> </ul> </li> </ul>"},{"location":"Guides/RetroED/Editors/SceneEditor/#scene-lists","title":"Scene Lists","text":""},{"location":"Guides/RetroED/Editors/SceneEditor/#tile-layers","title":"Tile Layers","text":"Pre-v5v5 <p>Lists the layers of the scene, composed by one foreground layer and 8 backgrounds layers, selecting any of them on the list will highlight the layer in the scene viewer for chunk editing, the checkbox determines which layers should be visible on the scene editor.</p> <p>Lists the existing layers of the scene, selecting any of them on the list will highlight the layer in the scene viewer for chunk editing, the checkbox determines which layers should be visible on the scene editor. Add: Creates a new layer on the scene and prompts the Layer Properties tab, scenes are limited to 8 layers. Remove: Deletes the selected layer from the scene. Move Up/Down: Moves the position of the Layer on the list.</p>"},{"location":"Guides/RetroED/Editors/SceneEditor/#chunktile-list","title":"Chunk/Tile List","text":"Pre-v5v5 <p>Lists all 512 (256 in v1) available chunks on the scene, clicking any of them will select the chunk for it's use with the Pencil tool.</p> <p>Lists all 1024 available tiles on the scene, clicking any of them will select the tile for it's use with the Pencil tool. Defaults: Properties used by the Pencil tool to determine how the tile from the tile list should be placed and what solidity must have by default Flip X/Y: Flips the tile horizontally/vertically. Solid A/B (Top): The tile will be placed with top collision enabled. Solid A/B (LRB): The tile will be placed with left, right, and bottom collision enabled. These options are not mutually exclusive, meaning is possible(and expected) to combine them.</p>"},{"location":"Guides/RetroED/Editors/SceneEditor/#stamp-list-v5","title":"Stamp List (v5)","text":"<p>Displays a list of stamps loaded from a Stamp library and those created by the Stamp Copy tool, clicking any of them will select the stamp for it's use with the Stamp tool. Add Stamp: Creates a new empty stamp, prompts the Stamp Properties tab. Remove Stamp: Deletes the selected stamp.</p>"},{"location":"Guides/RetroED/Editors/SceneEditor/#object-list","title":"Object List","text":"<p>Displays the available objects loaded from the Gameconfig (if the scene has \"Load Global Objects\" enabled) and Stageconfig that entities can use. Clicking any of them with the entity tool selected will set it to Placement Mode with the desired object.</p> Pre-v5v5 <p>Add Object: Creates a \"New Object\" in the Stageconfig. Remove Object: Deletes the object from the scene, along with any entity that was using the object.</p> <p>Add Object (Game Link Required):     Prompts an Object Search tool, which loads any objects detected in the Game Link, any object with it's checkbox marked will be added into the stage.  </p> <p>Remove Object: Deletes the object from the scene, along with any entity that was using the object.</p>"},{"location":"Guides/RetroED/Editors/SceneEditor/#entity-list","title":"Entity List","text":"<p>Shows the existing entities on the scene with their respective object names and slot. Pre-v5 scenes have an entity limit of 1024 entities on scene, while v5 has a limit of 2048 active entities based on the filter of the entity. This means, for example, that you can have:</p> <ul> <li>2048 active entities on the scene across all filters.</li> <li>2048 active entities on each individual filter. (16384)</li> <li>1640 active entities w/ filter 1, 1280 w/ filter 2, 360 w/ filter 1 &amp; 3 (sum gives 2000), 130 w/ filter 2, 3 &amp; 4 (sum gives 1770). but you can't have:<ul></ul></li> <li>2371 active entities across all filters.</li> <li>2049 active entities on an individual filter.</li> <li>1640 active entities w/ filter 1, 1280 w/ filter 2, 789 w/ filter 1 &amp; 3 (exceeded by 381 entities)</li> </ul> <p>Selecting an entity from the list will move the camera to it's location and prompt the Entity Properties tab with it's information.  </p> <p>Add Entity: Creates a Blank Object in the middle of the screen, this option is disabled if the entity cap is reached. Delete Entity: Deletes the entity selected either from the list or with the Entity tool. Move Up/Down: switches the entity slot of the selected entity with the previous/next entity on the list.  </p>"},{"location":"Guides/RetroED/Editors/SceneEditor/#parallax-list","title":"Parallax List","text":"Pre-v5v5 <p>Lists all parallax entries used by layers with type \"Horizontal Scroll\" or \"Vertical Scroll\"</p> <p>Lists all parallax entries of the currently selected layer if it's layer type is \"Horizontal Scroll\" or \"Vertical Scroll\"\"</p> <p>Add Parallax: Adds a new parallax entry to the list and prompts the Scroll Properties tab. Remove Parallax: Deletes the currently selected parallax entry from the list. Import Parallax: Loads parallax data from a .xml file loaded from the file search prompt. Export Parallax: Saves the current parallax data on a .xml file.  </p>"},{"location":"Guides/RetroED/Editors/SceneEditor/#properties","title":"Properties","text":""},{"location":"Guides/RetroED/Editors/SceneEditor/#scene-properties","title":"Scene Properties","text":"<p>Allan please add details.</p>"},{"location":"Guides/RetroED/Editors/SceneEditor/#layer-properties","title":"Layer Properties","text":"<p>Allan please add details.</p>"},{"location":"Guides/RetroED/Editors/SceneEditor/#tile-properties","title":"Tile Properties","text":"<p>Allan please add details.</p>"},{"location":"Guides/RetroED/Editors/SceneEditor/#stamp-properties-v5","title":"Stamp Properties (v5)","text":"<p>Allan please add details.</p>"},{"location":"Guides/RetroED/Editors/SceneEditor/#entity-properties","title":"Entity Properties","text":"<p>Allan please add details.</p>"},{"location":"Guides/RetroED/Editors/SceneEditor/#scroll-properties","title":"Scroll Properties","text":"<p>Allan please add details.</p>"},{"location":"RSDK/","title":"Retro Engine","text":"<p>The Retro Engine is a 2D video game engine created by Christian Whitehead and owned by Evening Star. The engine is designed for retro-style games with pixel art graphics, supporting features such as palette manipulation, shape rasterization, and 3D floors and skies reminiscent of the Super Nintendo's Mode 7 technology.</p> <p>TODO: more</p>"},{"location":"RSDKv1/","title":"Retro Engine v1","text":"<p>TODO: this</p>","tags":["RSDKv1"]},{"location":"RSDKv2/","title":"Retro Engine v2","text":"<p>Retro Engine v2, debuting in 2008, is the version of RSDK used for the 2008 SAGExpo demo of Sonic Nexus. TODO: write info about RSDKv2 and stuff relating to Nexus in general.</p>","tags":["RSDKv2"]},{"location":"RSDKv2/#documentation","title":"Documentation","text":"<ul> <li>Overview</li> <li>Subs</li> <li>Functions</li> </ul>","tags":["RSDKv2"]},{"location":"RSDKv2/#tools","title":"Tools","text":"<ul> <li>RetroED</li> </ul>","tags":["RSDKv2"]},{"location":"RSDKv2/#tutorials","title":"Tutorials","text":"","tags":["RSDKv2"]},{"location":"RSDKv2/#other-resources","title":"Other Resources","text":"","tags":["RSDKv2"]},{"location":"RSDKv2/Decompilation/","title":"RSDKv2 Decompilation","text":"<p>TODO: everything</p>","tags":["RSDKv2"]},{"location":"RSDKv2/Decompilation/#tutorials","title":"Tutorials","text":"","tags":["RSDKv2"]},{"location":"RSDKv3/","title":"Retro Engine v3","text":"<p>Retro Engine v3, debuting in 2011, is the version of RSDK used for the Sonic CD remaster. TODO: write info about RSDKv3 and anything relating to CD</p>","tags":["RSDKv3"]},{"location":"RSDKv3/#documentation","title":"Documentation","text":"<ul> <li>Overview</li> <li>Subs</li> <li>Variables</li> <li>Functions</li> </ul>","tags":["RSDKv3"]},{"location":"RSDKv3/#tools","title":"Tools","text":"<ul> <li>RetroED</li> <li>RSDK Animation Editor</li> </ul>","tags":["RSDKv3"]},{"location":"RSDKv3/#tutorials","title":"Tutorials","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/#other-resources","title":"Other Resources","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Decompilation/","title":"RSDKv3 Decompilation","text":"<p>TODO: everything</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Decompilation/#tutorials","title":"Tutorials","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Subs/","title":"RSDKv3 Subs","text":"<p>RetroScript v3, the scripting language used by RSDKv3, is comprised of four main subs, along with three optional editor subs. Subs are akin to \"default functions\" of sorts, and are called by the engine every frame to achieve a specific task. To define subs, <code>sub [name]</code> is used to open one and <code>end sub</code> is used to close one.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Subs/#objectmain","title":"ObjectMain","text":"<p>Called once every frame (if priority allows) to run a general update of the object, for things like movement and animation processing.</p> Example<pre><code>sub ObjectMain\n    Object.XPos += Object.Value0\n    Object.YPos += Object.Value1\n\n    Object.AnimationTimer++\n    if Object.AnimationTimer &gt;= 8\n        Object.Frame++\n        if Object.Frame &gt;= 4\n            Object.Frame = 0\n        end if\n        Object.AnimationTimer = 0\n    end if\nend sub\n</code></pre> <p>Note</p> <p><code>ObjectMain</code> is parallel to the <code>ObjectUpdate</code> event seen in RSDKv4, though there the name was changed to match better.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Subs/#objectplayerinteraction","title":"ObjectPlayerInteraction","text":"<p>Called after <code>ObjectMain</code> for each active player to handle interactions between the object and the player(s).</p> Example<pre><code>sub ObjectPlayerInteraction\n    PlayerObjectCollision(C_TOUCH, -8, -8, 8, 8)\n    if CheckResult == true\n        Object.State = 2\n    end if\nend sub\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Subs/#objectdraw","title":"ObjectDraw","text":"<p>Called once every frame (if priority allows) to draw the object. Although some objects in Sonic CD also have movement or animation processing code in this sub, it's strongly recommended to only include drawing code. Draw order is based on the object's <code>Object.DrawOrder</code> value.</p> Example<pre><code>sub ObjectDraw\n    DrawSprite(Object.Frame)\nend sub\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Subs/#objectstartup","title":"ObjectStartup","text":"<p>Called once per object type on stage startup. Used to load spritesheets and set up SpriteFrames, apply any starting values needed for the object type, or other initialization code.</p> Example<pre><code>sub ObjectStartup\n    LoadSpriteSheet(\"Global/Items.gif\")\n\n    SpriteFrame(-8, -8, 16, 16, 1, 1)\n    SpriteFrame(-8, -8, 16, 16, 1, 18)\n    SpriteFrame(-8, -8, 16, 16, 1, 35)\n    SpriteFrame(-8, -8, 16, 16, 1, 52)\n\n    TempValue0 = 32\n    while TempValue0 &lt; 1056\n        if Object[ArrayPos0].Type == TypeName[Test Object]\n            Object[ArrayPos0].DrawOrder = 4\n        end if\n        TempValue0++\n    loop\nend sub\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Subs/#rsdkedit","title":"RSDKEdit","text":"<p>Called whenever modifying an object's editor variable in an editor. This sub can be excluded from your script if the object doesn't have an editor variable.</p> Example<pre><code>sub RSDKEdit\n    if Editor.ReturnVariable == true\n        switch Editor.VariableID\n        case EDIT_VAR_PROPVAL // Property Value\n            CheckResult = Object.PropertyValue\n            break\n\n        case 0 // Alignment\n            CheckResult = Object.PropertyValue\n            break\n        end switch\n    else\n        switch Editor.VariableID\n        case EDIT_VAR_PROPVAL // Property Value\n            Object.PropertyValue = Editor.VariableValue\n            break\n\n        case 0 // Alignment\n            Object.PropertyValue = Editor.VariableValue\n            break\n        end switch\n    end if\nend sub\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Subs/#rsdkdraw","title":"RSDKDraw","text":"<p>Called once every frame to draw the object in an editor.</p> Example<pre><code>sub RSDKDraw\n    DrawSprite(0)\n    if Editor.ShowGizmos == true\n        DrawSprite(1)\n    end if\nend sub\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Subs/#rsdkload","title":"RSDKLoad","text":"<p>Called once per object type when game logic is (re)loaded in an editor. Used to load spritesheets, set up SpriteFrames, and add editor variables and aliases.</p> Example<pre><code>sub RSDKLoad\n    LoadSpriteSheet(\"Global/Items.gif\")\n    SpriteFrame(-8, -8, 16, 16, 1, 1)\n    SpriteFrame(-8, -8, 16, 16, 1, 18)\n\n    AddEditorVariable(\"Alignment\")\n    SetActiveVariable(\"Alignment\")\n    AddEnumVariable(\"Left\", 0)\n    AddEnumVariable(\"Center\", 1)\n    AddEnumVariable(\"Right\", 2)\n\n    SetVariableAlias(ALIAS_VAR_VAL0, \"Width\")\nend sub\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Variables/","title":"RSDKv3 Variables","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Variables/#script","title":"Script","text":"Variable Description TempValue0-7 Temporary values used to store values during arithmetic or other similar operations. ArrayPos0/1 Used to store an array of data. Global Can be used to use global variables as an array (Ex. Global[ArrayPos0] = 0).","tags":["RSDKv3"]},{"location":"RSDKv3/Variables/#object","title":"Object","text":"Variable Description Object.Type The object's type. Object.PropertyValue The object's subtype. Its purpose differs from object to object.","tags":["RSDKv3"]},{"location":"RSDKv3/Variables/#player","title":"Player","text":"Variable Description Player.Type The Player's type. Should almost always be a Player Object. Player.State The Player's state. Handles gameplay and processing the Player in general. Player.ControlMode The status of the Player's control mode. Player.CollisionMode The collision that the Player's currently on. Player.X/YPos The object's x/ypos on the x and y axis. Position is based in world-space, which in v3 is 0x10000 (65536), which is equal is 1.0. Player.ScreenX/YPos The object's screenx/ypos on the x and y axis. Screen position is based in screen-space, which in v3 is truncated from world-space (1 == 1). Player.Speed The Player's general speed in world-space","tags":["RSDKv3"]},{"location":"RSDKv3/Variables/#stage","title":"Stage","text":"Variable Description Stage.ActiveList The active stage list. Ranges from Presentation, Regular, Special, and Bonus Stages. Stage.ListPos The position of a stage in a stage list. Stage.TimeEnabled Handles the stage's time. When enabled, the engine will automatically start a timer, and sets the time to <code>Stage.MilliSeconds/Seconds/Minutes</code>. Stage.MilliSeconds The stage's milliSecond count. Stage.Minutes The stage's minute count. Stage.Seconds The stage's second count. Stage.ActNo The number of the current act. (Ex. Stage.ActNo = 1 -&gt; Act1) Stage.PausedEnabled If enabled, this allows the engine to do a Genesis type pause by pressing the Start button. Stage.ListSize The size of the current stage list. Stage.NewX/YBoundary1/2 The boundaries for the stage camera. Used to set new camera boundaries during gameplay. Stage.X/YBoundary1/2 The boundaries for the stage camera. The camera will never go past these boundaries.","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/","title":"RSDKv3 Functions","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/#3d","title":"3D","text":"Function Description Draw3DScene Draws the active 3DScene data to the screen. SetIdentityMatrix Sets the matrix of <code>MatID</code> to the identity state. MatrixMultiply Multiplies <code>MatrixA</code> by <code>MatrixB</code>. MatrixTranslateXYZ Translates <code>Matrix</code> to <code>TranslateX</code>, <code>TranslateY</code> and <code>TranslateZ</code>. MatrixScaleXYZ Scales <code>Matrix</code> to <code>ScaleX</code>, <code>ScaleY</code> and <code>ScaleZ</code>. MatrixRotate Rotates <code>Matrix</code> to <code>Angle</code> on the specified axis. MatrixRotateXYZ Rotates <code>Matrix</code> to <code>AngleX</code>, <code>AngleY</code> and <code>AngleZ</code>. TransformVertices Transform all vertices from <code>StartIndex</code> to <code>EndIndex</code> using <code>Matrix</code>.","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/#audio","title":"Audio","text":"Function Description SetMusicTrack Loads a music file in the given track slot with the given loop point. PlayMusic Plays the music currently loaded in the given track slot. StopMusic Stops playing the currently playing music track, if one is playing. PauseMusic Pauses the currently playing music track, if one is playing. ResumeMusic If a track has been paused with PauseMusic(), resumes playing the track. PlaySfx Plays the sound effect in the given slot in the GameConfig, looping it if set to do so. StopSfx Stops all instances of the given sound effect slot in the GameConfig playing. SetSfxAttributes Sets the loop count and panning of the given sound effect slot in the GameConfig to the given values. PlayStageSfx Plays the sound effect in the given slot in the StageConfig, looping it if set to do so. StopStageSfx Stops all instances of the given sound effect slot in the StageConfig playing.","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/#drawing","title":"Drawing","text":"Function Description DrawTintRect Draws a tinted rectangle to <code>iXPos</code> and <code>iYPos</code> in screen-space. LoadPalette Loads a palette into <code>PalBank</code> starting from <code>StartPalIndex</code>, with an offset of <code>StartIndex</code> and reading all colors through to <code>EndIndex</code>. RotatePalette Rotates all colors in <code>PalBank</code> from <code>StartIndex</code> to <code>EndIndex</code>, moving left or right depending on <code>RotRight</code>. SetScreenFade Adds a screen fade effect based on the <code>R</code>, <code>G</code>, <code>B</code> and <code>Alpha</code> values. SetActivePalette Sets the active palette to <code>PalBank</code> for all vertical screen lines from <code>StartLine</code> to <code>EndLine</code>. SetPaletteFade Blends the currectly active palette from <code>StartIndex</code> to <code>EndIndex</code> based on <code>R</code>, <code>G</code>, <code>B</code>, and <code>BlendAmount</code>, and stores the new palette in <code>DstBank</code>. CopyPalette Copies <code>SrcPal</code> into <code>DstPal</code>. ClearScreen Clears all pixels on screen with color <code>ClearIndex</code> from the active palette. DrawRect Draws a rectangle to <code>iXPos</code> and <code>iYPos</code> in screen-space, with a color based on the <code>R</code>, <code>G</code>, <code>B</code>, and <code>Alpha</code>. ClearDrawList Removes all entries in drawList <code>Layer</code>. AddDrawListEntityRef Adds <code>ObjectPos</code> to drawList <code>Layer</code>. GetDrawListEntityRef Gets <code>ObjectPos</code> in drawList <code>Layer</code> and stores it in <code>Store</code>. SetDrawListEntityRef Sets <code>ObjectPos</code> in drawList <code>Layer</code> to <code>Value</code>.","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/#graphics","title":"Graphics","text":"Function Description LoadSpriteSheet Loads a spritesheet and assigns the ID to <code>Object.SpriteSheet</code>. RemoveSpriteSheet Removes the given spritesheet from memory, if it is already loaded. DrawSprite Draws <code>Frame</code> at the object's X and Y position. DrawSpriteXY Draws <code>Frame</code> at a specified X and Y position. DrawSpriteScreenXY Draws <code>Frame</code> at a specified X and Y position in screen-space. SpriteFrame Adds a SpriteFrame with the specified values. EditFrame Edits the pivots, width, height, and sheet coordinates of <code>Frame</code>. DrawSpriteFX Draws <code>Frame</code> at a specified X and Y position with visual effects. DrawSpriteScreenFX Draws <code>Frame</code> at a specified X and Y position in screen-space with visual effects. LoadAnimation Loads an animation file for the current object type. ProcessAnimation Processes the current object's animation, based on the animation file loaded prior via LoadAnimation(). DrawObjectAnimation Draws an object's sprites from the animation file loaded prior via LoadAnimation(). DrawPlayerAnimation Draws the player's sprites from the animation file loaded prior via LoadAnimation().","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/#math","title":"Math","text":"Function Description Rand Gets a random value from 0 to <code>Max</code> (not inclusive) and stores it in <code>Store</code>. Sin Gets the value from the <code>sin512</code> lookup table based on <code>Angle</code> and sets it in <code>Store</code>. Cos Gets the value from the <code>cos512</code> lookup table based on <code>Angle</code> and sets it in <code>Store</code>. Sin256 Gets the value from the <code>sin256</code> lookup table based on <code>Angle</code> and sets it in <code>Store</code>. Cos256 Gets the value from the <code>cos256</code> lookup table based on <code>Angle</code> and sets it in <code>Store</code>. ATan2 Performs an arctan operation using <code>X</code> and <code>Y</code>, storing the result in <code>Store</code>. Interpolate Linearly interpolates <code>X</code> and <code>Y</code> by <code>Percent</code> and stores the result in <code>Store</code>. InterpolateXY Linearly interpolates two points at once and stores the result in <code>StoreX</code> and <code>StoreY</code> respectively. Not Performs a NOT operation on <code>Value</code>. GetBit Gets the binary bit at index <code>BitPos</code> from <code>Value</code> and stores it in <code>Store</code>. SetBit Sets index <code>BitPos</code> of <code>Value</code> to <code>Bit</code> and updates <code>Value</code> accordingly.","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/#object","title":"Object","text":"Function Description ResetObjectEntity Resets an object in position <code>Slot</code> to the <code>Type</code>, <code>PropertyValue</code>, <code>XPos</code>, and <code>YPos</code> specified. CreateTempObject Creates a temporary object specified by <code>Type</code>, <code>PropertyValue</code>, <code>XPos</code> and <code>YPos</code> near the end of the object list. PlayerObjectCollision Checks for collision of an object with the player, using the hitbox values passed. ProcessPlayerControl Handles player input variables and sidekick input buffering. ObjectTileCollision Tries to collide with the foreground layer based on the position of <code>Object.iXPos</code> + <code>xOffset</code>, <code>Object.iYPos</code> + <code>yOffset</code>. ObjectTileGrip Tries to collide with the foreground layer based on the position of <code>Object.iXPos</code> + <code>xOffset</code>, <code>Object.iYPos</code> + <code>yOffset</code>. PlayerTileCollision Handles tile collision of the player. BindPlayerToObject Binds a Player set to <code>ListPos</code> in the player list to entity slot number <code>EntityNo</code>.","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/#stages","title":"Stages","text":"Function Description LoadStage Loads a stage based on <code>Stage.ActiveList</code> and <code>Stage.ListPos</code>. SetLayerDeformation Sets the deformation data array of <code>DeformID</code>, based on <code>DeformA</code> and <code>DeformB</code>. GetTileLayerEntry Gets the ID of the chunk at <code>ChunkX</code>, <code>ChunkY</code> in tile layer <code>Layer</code> and stores it in <code>Store</code>. SetTileLayerEntry Sets the chunk at <code>ChunkX</code>, <code>ChunkY</code> in tile layer <code>Layer</code> to the index of <code>Value</code>. Get16x16TileInfo Gets the value for <code>InfoTile</code> from the tile at <code>TileX</code>, <code>TileY</code> and stores it in <code>Store</code>. Set16x16TileInfo Sets the value for <code>InfoType</code> from the tile at <code>TileX</code>, <code>TileY</code> to <code>Value</code>. Copy16x16Tile Copies the tileset image data of <code>SrcTile</code> to <code>DstTile</code>.","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/#miscellaneous","title":"Miscellaneous","text":"Function Description DrawMenu Draws <code>Menu</code> at <code>XPos</code> and <code>YPos</code> relative to the screen. SetupMenu Sets up <code>Menu</code> with <code>RowCount</code> rows, <code>SelectionCount</code> active selections and aligning set to <code>Alignment</code>. AddMenuEntry Adds an entry to <code>Menu</code> with the contents of <code>Text</code>. EditMenuEntry Edits an entry of <code>Menu</code> with the contents of <code>Text</code> in <code>RowID</code>. LoadVideo Loads and plays a video. NextVideoFrame Advances the video frame of an RSV video. CheckTouchRect Checks if there's a touch input between the given coordinates. ReadSaveRAM Reads the contents of the save file on disk into SaveRAM. WriteSaveRAM Writes the contents of SaveRAM to the save file on disk. LoadTextFont Loads a bitmap font from <code>FilePath</code> for use with text menus. LoadTextFile Loads <code>Menu</code> based on the text file loaded from <code>FilePath</code>. DrawText Draws the contents of <code>menu</code>. GetTextInfo Gets the data of <code>Type</code> from <code>Menu</code> using <code>Index</code> and stores it in <code>Store</code>. GetVersionNumber Adds a text entry to <code>Menu</code> with the engine's version as the text. SetAchievement Sets the status of the given achievement. SetLeaderboard Submits the given score to the given leaderboard. LoadOnlineMenu Loads the data for the specified online menu. EngineCallback Sends a callback to the engine.","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/Draw3DScene/","title":"Draw3DScene","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/Draw3DScene/#description","title":"Description","text":"<p>Draws the active 3DScene data to the screen.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/Draw3DScene/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/Draw3DScene/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/Draw3DScene/#example","title":"Example","text":"<pre><code>Draw3DScene()\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixMultiply/","title":"MatrixMultiply","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixMultiply/#description","title":"Description","text":"<p>Multiplies <code>MatrixA</code> by <code>MatrixB</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixMultiply/#parameters","title":"Parameters","text":"<code>MatrixA</code> <p>First factor of the multiplication.</p> <code>MatrixB</code> <p>Second factor of the multiplication.</p> <p>Valid matrices for both factors are <code>MAT_WORLD</code>, <code>MAT_VIEW</code>, and <code>MAT_TEMP</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixMultiply/#return-value","title":"Return Value","text":"<p>Updates <code>MatrixA</code> with the result.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixMultiply/#syntax","title":"Syntax","text":"<pre><code>MatrixMultiply(int MatrixA, int MatrixB)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixMultiply/#example","title":"Example","text":"<pre><code>MatrixMultiply(MAT_WORLD, MAT_TEMP)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixRotate/","title":"MatrixRotate X/Y/Z","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixRotate/#description","title":"Description","text":"<p>Rotates <code>Matrix</code> to <code>Angle</code> on the specified axis.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixRotate/#parameters","title":"Parameters","text":"<code>Matrix</code> <p>The selected matrix for rotation. Valid matrices are <code>MAT_WORLD</code>, <code>MAT_VIEW</code>, and <code>MAT_TEMP</code>.</p> <code>Angle</code> <p>Angle of the rotation. Values are 512-based.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixRotate/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixRotate/#syntax","title":"Syntax","text":"<p><pre><code>MatrixRotateX(int Matrix, int Angle)\n</code></pre> <pre><code>MatrixRotateY(int Matrix, int Angle)\n</code></pre> <pre><code>MatrixRotateZ(int Matrix, int Angle)\n</code></pre></p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixRotate/#examples","title":"Examples","text":"<p><pre><code>MatrixRotateX(MAT_WORLD, 43)\n</code></pre> <pre><code>MatrixRotateY(MAT_VIEW, 76)\n</code></pre> <pre><code>MatrixRotateZ(MAT_TEMP, 22)\n</code></pre></p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixRotateXYZ/","title":"MatrixRotateXYZ","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixRotateXYZ/#description","title":"Description","text":"<p>Rotates <code>Matrix</code> to <code>AngleX</code>, <code>AngleY</code> and <code>AngleZ</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixRotateXYZ/#parameters","title":"Parameters","text":"<code>Matrix</code> <p>The selected matrix for rotation. Valid matrices are <code>MAT_WORLD</code>, <code>MAT_VIEW</code>, and <code>MAT_TEMP</code>.</p> <code>AngleX</code>, <code>AngleY</code>, <code>AngleZ</code> <p>Angle of the rotation. Values are 512-based.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixRotateXYZ/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixRotateXYZ/#syntax","title":"Syntax","text":"<pre><code>MatrixRotateXYZ(int Matrix, int AngleX, int AngleY, int AngleZ)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixRotateXYZ/#example","title":"Example","text":"<pre><code>MatrixRotateXYZ(MAT_WORLD, 43, 85, 29)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixScaleXYZ/","title":"MatrixScaleXYZ","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixScaleXYZ/#description","title":"Description","text":"<p>Scales <code>Matrix</code> to <code>ScaleX</code>, <code>ScaleY</code> and <code>ScaleZ</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixScaleXYZ/#parameters","title":"Parameters","text":"<code>Matrix</code> <p>The selected matrix for scalling. Valid matrices are <code>MAT_WORLD</code>, <code>MAT_VIEW</code>, and <code>MAT_TEMP</code>.</p> <code>ScaleX</code>, <code>ScaleY</code>, <code>ScaleZ</code> <p>Scale value for the matrix, all shifted 8 bits (0x100 = 1.0)</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixScaleXYZ/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixScaleXYZ/#syntax","title":"Syntax","text":"<pre><code>MatrixScaleXYZ(int Matrix, int ScaleX, int ScaleY, int ScaleZ)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixScaleXYZ/#example","title":"Example","text":"<pre><code>MatrixScaleXYZ(MAT_VIEW, 0x200, 0x1A0, 0x180)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixTranslateXYZ/","title":"MatrixTranslateXYZ","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixTranslateXYZ/#description","title":"Description","text":"<p>Translates <code>Matrix</code> to <code>TranslateX</code>, <code>TranslateY</code> and <code>TranslateZ</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixTranslateXYZ/#parameters","title":"Parameters","text":"<code>Matrix</code> <p>The selected matrix to translate. Valid matrices are <code>MAT_WORLD</code>, <code>MAT_VIEW</code>, and <code>MAT_TEMP</code>.</p> <code>TranslateX</code>, <code>TranslateY</code>, <code>TranslateZ</code> <p>Translate values for the matrix, all shifted 8 bits (0x100 = 1.0)</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixTranslateXYZ/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixTranslateXYZ/#syntax","title":"Syntax","text":"<pre><code>MatrixTranslateXYZ(int Matrix, int TranslateX, int TranslateY, int TranslateZ)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/MatrixTranslateXYZ/#example","title":"Example","text":"<pre><code>MatrixTranslateXYZ(MAT_WORLD, -512, 720, TempValue0)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/SetIdentityMatrix/","title":"SetIdentityMatrix","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/SetIdentityMatrix/#description","title":"Description","text":"<p>Sets the matrix of <code>MatID</code> to the identity state.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/SetIdentityMatrix/#parameters","title":"Parameters","text":"<code>MatID</code> <p>The matrix to set the identity. Valid matrices are <code>MAT_WORLD</code>, <code>MAT_VIEW</code>, and <code>MAT_TEMP</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/SetIdentityMatrix/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/SetIdentityMatrix/#syntax","title":"Syntax","text":"<pre><code>SetIdentityMatrix(int MatID)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/SetIdentityMatrix/#example","title":"Example","text":"<pre><code>SetIdentityMatrix(MAT_WORLD)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/TransformVertices/","title":"TransformVertices","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/TransformVertices/#description","title":"Description","text":"<p>Transform all vertices from <code>StartIndex</code> to <code>EndIndex</code> using <code>Matrix</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/TransformVertices/#parameters","title":"Parameters","text":"<code>Matrix</code> <p>The matrix used to transform the vertices. Valid matrices are <code>MAT_WORLD</code>, <code>MAT_VIEW</code>, and <code>MAT_TEMP</code>.</p> <code>StartIndex</code> <p>The start of the range of tranforming vertices.</p> <code>EndIndex</code> <p>The end of the range of tranforming vertices.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/TransformVertices/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/TransformVertices/#syntax","title":"Syntax","text":"<pre><code>TransformVertices(int Matrix, int StartIndex, int EndIndex)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/3D/TransformVertices/#example","title":"Example","text":"<pre><code>TransformVertices(MAT_VIEW, 0xFFE, 0x1000)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PauseMusic/","title":"PauseMusic","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PauseMusic/#description","title":"Description","text":"<p>Pauses the currently playing music track, if one is playing. The track can be resumed with ResumeMusic().</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PauseMusic/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PauseMusic/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PauseMusic/#example","title":"Example","text":"<pre><code>PauseMusic()\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PlayMusic/","title":"PlayMusic","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PlayMusic/#description","title":"Description","text":"<p>Plays the music currently loaded in the given track slot.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PlayMusic/#parameters","title":"Parameters","text":"<code>TrackID</code> <p>The trackList slot the music is loaded in.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PlayMusic/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PlayMusic/#syntax","title":"Syntax","text":"<pre><code>PlayMusic(int TrackID)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PlayMusic/#example","title":"Example","text":"<pre><code>PlayMusic(0)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PlaySfx/","title":"PlaySfx","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PlaySfx/#description","title":"Description","text":"<p>Plays the sound effect in the given slot in the GameConfig, looping it if set to do so.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PlaySfx/#parameters","title":"Parameters","text":"<code>SFX</code> <p>The slot of the sound effect in the GameConfig.</p> <code>Loop</code> <p>Determines whether or not the sound effect should loop.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PlaySfx/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PlaySfx/#syntax","title":"Syntax","text":"<pre><code>PlaySfx(int SFX, bool Loop)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PlaySfx/#example","title":"Example","text":"<pre><code>PlaySfx(0, false)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PlayStageSfx/","title":"PlayStageSfx","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PlayStageSfx/#description","title":"Description","text":"<p>Plays the sound effect in the given slot in the StageConfig, looping it if set to do so.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PlayStageSfx/#parameters","title":"Parameters","text":"<code>SFX</code> <p>The slot of the sound effect in the StageConfig.</p> <code>Loop</code> <p>Determines whether or not the sound effect should loop.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PlayStageSfx/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PlayStageSfx/#syntax","title":"Syntax","text":"<pre><code>PlayStageSfx(int SFX, bool Loop)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/PlayStageSfx/#example","title":"Example","text":"<pre><code>PlayStageSfx(0, false)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/ResumeMusic/","title":"ResumeMusic","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/ResumeMusic/#description","title":"Description","text":"<p>If a track has been paused with PauseMusic(), resumes playing the track.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/ResumeMusic/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/ResumeMusic/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/ResumeMusic/#example","title":"Example","text":"<pre><code>ResumeMusic()\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/SetMusicTrack/","title":"SetMusicTrack","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/SetMusicTrack/#description","title":"Description","text":"<p>Loads a music file in the given track slot with the given loop point.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/SetMusicTrack/#parameters","title":"Parameters","text":"<code>Path</code> <p>The file path to load the music file from, relative to <code>Data/Music/</code>. The music file must be in OGG format.</p> <code>TrackID</code> <p>The trackList slot to load the music in.</p> <code>LoopPoint</code> <p>The track's loop point, in samples. <code>0</code> will disable looping, <code>1</code> will loop from the beginning of the track, and anything else is the sample to loop from.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/SetMusicTrack/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/SetMusicTrack/#syntax","title":"Syntax","text":"<pre><code>SetMusicTrack(string Path, int TrackID, int LoopPoint)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/SetMusicTrack/#example","title":"Example","text":"<pre><code>SetMusicTrack(\"Test.ogg\", 0, 1)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/SetSfxAttributes/","title":"SetSfxAttributes","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/SetSfxAttributes/#description","title":"Description","text":"<p>Sets the loop count and panning of the given sound effect slot in the GameConfig to the given values.</p> <p>Note</p> <p>Unlike PlaySfx() and StopSfx(), this function does not have an equivalent for sound effects in the StageConfig.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/SetSfxAttributes/#parameters","title":"Parameters","text":"<code>SFX</code> <p>The slot of the sound effect in the GameConfig to set the values for.</p> <code>LoopCount</code> <p>The number of times the sound effect should loop, if it's set to play on loop. Setting this to -1 will leave the loop count unchanged.</p> <code>Panning</code> <p>The panning of the sound effect. The minimum and maximum values are -100 and 100 respectively, with 0 being balanced.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/SetSfxAttributes/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/SetSfxAttributes/#syntax","title":"Syntax","text":"<pre><code>SetSfxAttributes(int SFX, int LoopCount, int Panning)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/SetSfxAttributes/#example","title":"Example","text":"<pre><code>SetSfxAttributes(0, 5, -50)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/StopMusic/","title":"StopMusic","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/StopMusic/#description","title":"Description","text":"<p>Stops playing the currently playing music track, if one is playing.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/StopMusic/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/StopMusic/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/StopMusic/#example","title":"Example","text":"<pre><code>StopMusic()\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/StopSfx/","title":"StopSfx","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/StopSfx/#description","title":"Description","text":"<p>Stops all instances of the given sound effect slot in the GameConfig playing.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/StopSfx/#parameters","title":"Parameters","text":"<code>SFX</code> <p>The slot of the sound effect in the GameConfig.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/StopSfx/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/StopSfx/#syntax","title":"Syntax","text":"<pre><code>StopSfx(int SFX)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/StopSfx/#example","title":"Example","text":"<pre><code>StopSfx(0)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/StopStageSfx/","title":"StopStageSfx","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/StopStageSfx/#description","title":"Description","text":"<p>Stops all instances of the given sound effect slot in the StageConfig playing.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/StopStageSfx/#parameters","title":"Parameters","text":"<code>SFX</code> <p>The slot of the sound effect in the StageConfig.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/StopStageSfx/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/StopStageSfx/#syntax","title":"Syntax","text":"<pre><code>StopStageSfx(int SFX)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Audio/StopStageSfx/#example","title":"Example","text":"<pre><code>StopStageSfx(0)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/AddDrawListEntityRef/","title":"AddDrawListEntityRef","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/AddDrawListEntityRef/#description","title":"Description","text":"<p>Adds <code>ObjectPos</code> to drawList <code>Layer</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/AddDrawListEntityRef/#parameters","title":"Parameters","text":"<code>Layer</code> <p>Layer of the drawList to add the reference. Indices 0-6 are valid, as well as 7 in RSDKv5U.</p> <code>ObjectPos</code> <p>The position of the object to add.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/AddDrawListEntityRef/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/AddDrawListEntityRef/#syntax","title":"Syntax","text":"<pre><code>AddDrawListEntityRef(int Layer, int ObjectPos)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/AddDrawListEntityRef/#example","title":"Example","text":"<pre><code>AddDrawListEntityRef(4, Object.EntityNo)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/ClearDrawList/","title":"ClearDrawList","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/ClearDrawList/#description","title":"Description","text":"<p>Removes all entries in drawList <code>Layer</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/ClearDrawList/#parameters","title":"Parameters","text":"<code>Layer</code> <p>Layer of the drawList to clean.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/ClearDrawList/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/ClearDrawList/#syntax","title":"Syntax","text":"<pre><code>ClearDrawList(int Layer)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/ClearDrawList/#example","title":"Example","text":"<pre><code>ClearDrawList(3)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/ClearScreen/","title":"ClearScreen","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/ClearScreen/#description","title":"Description","text":"<p>Clears all pixels on screen with color <code>ClearIndex</code> from the active palette.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/ClearScreen/#parameters","title":"Parameters","text":"<code>ClearIndex</code> <p>The index of the color in the active palette that will override the pixels on the screen.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/ClearScreen/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/ClearScreen/#syntax","title":"Syntax","text":"<pre><code>ClearScreen(int ClearIndex)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/ClearScreen/#example","title":"Example","text":"<pre><code>ClearScreen(5)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/CopyPalette/","title":"CopyPalette","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/CopyPalette/#description","title":"Description","text":"<p>Copies <code>SrcPal</code> into <code>DstPal</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/CopyPalette/#parameters","title":"Parameters","text":"<code>SrcPal</code> <p>The palette bank to copy. Indices 0-7 are valid.</p> <code>DstPal</code> <p>The palette bank to paste. Indices 0-7 are valid.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/CopyPalette/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/CopyPalette/#syntax","title":"Syntax","text":"<pre><code>CopyPalette(int SrcPal, int DstPal)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/CopyPalette/#example","title":"Example","text":"<pre><code>CopyPalette(0, 7)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/DrawRect/","title":"DrawRect","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/DrawRect/#description","title":"Description","text":"<p>Draws a rectangle to <code>iXPos</code> and <code>iYPos</code> in screen-space, with a color based on the <code>R</code>, <code>G</code>, <code>B</code>, and <code>Alpha</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/DrawRect/#parameters","title":"Parameters","text":"<code>iXPos</code> <p>The position of the rectangle on the horizontal axis in screen-space.</p> <code>iYPos</code> <p>The position of the rectangle on the vertical axis in screen-space.</p> <code>Width</code> <p>The width of the rectangle.</p> <code>Height</code> <p>The height of the rectangle.</p> <code>R</code> <p>A value range of 0-255 for the color red.</p> <code>G</code> <p>A value range of 0-255 for the color green.</p> <code>B</code> <p>A value range of 0-255 for the color blue.</p> <code>Alpha</code> <p>A value range of 0-255 for transparency, 255 being no transparency.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/DrawRect/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/DrawRect/#syntax","title":"Syntax","text":"<pre><code>DrawRect(int iXPos, int iYPos, int Width, int Height, int R, int G, int B, int Alpha)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/DrawRect/#example","title":"Example","text":"<pre><code>DrawRect(30, 220, 60, 20, 255, 128, 128, 255)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/DrawTintRect/","title":"DrawTintRect","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/DrawTintRect/#description","title":"Description","text":"<p>Draws a tinted rectangle to <code>iXPos</code> and <code>iYPos</code> in screen-space.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/DrawTintRect/#parameters","title":"Parameters","text":"<code>iXPos</code> <p>The position of the rectangle on the horizontal axis in screen-space.</p> <code>iYPos</code> <p>The position of the rectangle on the vertical axis in screen-space.</p> <code>Width</code> <p>The width of the rectangle.</p> <code>Height</code> <p>The height of the rectangle.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/DrawTintRect/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/DrawTintRect/#syntax","title":"Syntax","text":"<pre><code>DrawTintRect(int iXPos, int iYPos, int Width, int Height)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/DrawTintRect/#example","title":"Example","text":"<pre><code>DrawTintRect(30, 220, 60, 20)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/GetDrawListEntityRef/","title":"GetDrawListEntityRef","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/GetDrawListEntityRef/#description","title":"Description","text":"<p>Gets <code>ObjectPos</code> in drawList <code>Layer</code> and stores it in <code>Store</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/GetDrawListEntityRef/#parameters","title":"Parameters","text":"<code>Store</code> <p>The variable where <code>ObjectPos</code> will be stored.</p> <code>Layer</code> <p>Layer of the drawList to add the reference. Indices 0-6 are valid, as well as 7 in RSDKv5U.</p> <code>ObjectPos</code> <p>The position of the object to add.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/GetDrawListEntityRef/#return-value","title":"Return Value","text":"<p>Sets <code>Store</code> to the result.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/GetDrawListEntityRef/#syntax","title":"Syntax","text":"<pre><code>GetDrawListEntityRef(var Store, int Layer, int ObjectPos)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/GetDrawListEntityRef/#example","title":"Example","text":"<pre><code>GetDrawListEntityRef(Object.Value0, 4, Object.EntityNo)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/LoadPalette/","title":"LoadPalette","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/LoadPalette/#description","title":"Description","text":"<p>Loads a palette into <code>PalBank</code> starting from <code>StartPalIndex</code>, with an offset of <code>StartIndex</code> and reading all colors through to <code>EndIndex</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/LoadPalette/#parameters","title":"Parameters","text":"<code>Path</code> <p>The path to the palette file, relative to <code>Data/Palettes/</code>.</p> <code>PalBank</code> <p>The ID of the palette bank for the palette to load into. Indices 0-7 are valid.</p> <code>StartPalIndex</code> <p>The starting index to load colors from in the loaded palette file.</p> <code>StartIndex</code> <p>The starting index of the palette bank from which the loaded palette will overwrite.</p> <code>EndIndex</code> <p>The ending index of the palette bank from which the loaded palette will overwrite.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/LoadPalette/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/LoadPalette/#syntax","title":"Syntax","text":"<pre><code>LoadPalette(string Path, int PalBank, int StartPalIndex, int StartIndex, int EndIndex)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/LoadPalette/#example","title":"Example","text":"<pre><code>LoadPalette(\"MasterPalette.act\", 2, 16, 24, 32)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/RotatePalette/","title":"RotatePalette","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/RotatePalette/#description","title":"Description","text":"<p>Rotates all colors in the active palette bank from <code>StartIndex</code> to <code>EndIndex</code>, moving left or right depending on <code>RotRight</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/RotatePalette/#parameters","title":"Parameters","text":"<code>StartIndex</code> <p>The starting index of the palette bank for the rotation.</p> <code>EndIndex</code> <p>The ending index of the palette bank for the rotation.</p> <code>RotRight</code> <p>Rotates right if <code>true</code>; otherwise, rotates left.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/RotatePalette/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/RotatePalette/#syntax","title":"Syntax","text":"<pre><code>RotatePalette(int StartIndex, int EndIndex, bool RotRight)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/RotatePalette/#example","title":"Example","text":"<pre><code>RotatePalette(16, 24, 1)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetActivePalette/","title":"SetActivePalette","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetActivePalette/#description","title":"Description","text":"<p>Sets the active palette to <code>PalBank</code> for all vertical screen lines from <code>StartLine</code> to <code>EndLine</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetActivePalette/#parameters","title":"Parameters","text":"<code>PalBank</code> <p>The ID of the new active palette. Indices 0-7 are valid.</p> <code>StartLine</code> <p>The starting vertical screen-line for the new active palette.</p> <code>EndLine</code> <p>The ending vertical screen-line for the new active palette.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetActivePalette/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetActivePalette/#syntax","title":"Syntax","text":"<pre><code>SetActivePalette(int PalBank, int StartLine, int EndLine)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetActivePalette/#example","title":"Example","text":"<pre><code>SetActivePalette(0, 76, Screen.YSize)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetDrawListEntityRef/","title":"SetDrawListEntityRef","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetDrawListEntityRef/#setdrawlistentityref","title":"SetDrawListEntityRef","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetDrawListEntityRef/#description","title":"Description","text":"<p>Sets <code>ObjectPos</code> in drawList <code>Layer</code> to <code>Value</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetDrawListEntityRef/#parameters","title":"Parameters","text":"<code>Value</code> <p>The new value for <code>ObjectPos</code>.</p> <code>Layer</code> <p>The Layer of the drawList to add the reference. Indices 0-6 are valid, as well as 7 in RSDKv5U.</p> <code>ObjectPos</code> <p>The position of the object to add.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetDrawListEntityRef/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetDrawListEntityRef/#syntax","title":"Syntax","text":"<pre><code>SetDrawListEntityRef(int Value, int Layer, int ObjectPos)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetDrawListEntityRef/#example","title":"Example","text":"<pre><code>SetDrawListEntityRef(Object.Value0, 4, Object.EntityNo)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetPaletteFade/","title":"SetPaletteFade","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetPaletteFade/#description","title":"Description","text":"<p>Blends the currectly active palette from <code>StartIndex</code> to <code>EndIndex</code> based on <code>R</code>, <code>G</code>, <code>B</code>, and <code>BlendAmount</code>, and stores the new palette in <code>DstBank</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetPaletteFade/#parameters","title":"Parameters","text":"<code>DstBank</code> <p>The ID of the palette for store. Indices 0-7 are valid.</p> <code>R</code> <p>A value range of 0-255 for the color red.</p> <code>G</code> <p>A value range of 0-255 for the color green.</p> <code>B</code> <p>A value range of 0-255 for the color blue.</p> <code>BlendAmount</code> <p>A value range of 0-255 for blending.</p> <code>StartIndex</code> <p>The starting index of the palette bank to blend.</p> <code>EndIndex</code> <p>The ending index of the palette bank to blend.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetPaletteFade/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetPaletteFade/#syntax","title":"Syntax","text":"<pre><code>SetPaletteFade(int DstBank, int R, int G, int B, int BlendAmount, int StartIndex, int EndIndex)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetPaletteFade/#example","title":"Example","text":"<pre><code>SetPaletteFade(1, 128, 128, 128, 255, 64, 144)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetScreenFade/","title":"SetScreenFade","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetScreenFade/#description","title":"Description","text":"<p>Adds a screen fade effect based on the <code>R</code>, <code>G</code>, <code>B</code> and <code>Alpha</code> values.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetScreenFade/#parameters","title":"Parameters","text":"<code>R</code> A value range of 0-255 for the color red. <code>G</code> <p>A value range of 0-255 for the color green.</p> <code>B</code> <p>A value range of 0-255 for the color blue.</p> <code>Alpha</code> <p>A value range of 0-255 for transparency, 255 being no transparency</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetScreenFade/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetScreenFade/#syntax","title":"Syntax","text":"<pre><code>SetScreenFade(int R, int G, int B, int Alpha)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Drawing/SetScreenFade/#example","title":"Example","text":"<pre><code>SetScreenFade(255, 255, 255, object.alpha)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawObjectAnimation/","title":"DrawObjectAnimation","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawObjectAnimation/#description","title":"Description","text":"<p>Draws an object's sprites from the animation file loaded prior via LoadAnimation(). The sprite will be drawn at <code>object.xpos</code> and <code>object.ypos</code>, with flipping and rotation applied based on the current animation's rotate style.</p> <p>Note</p> <p>Object animations cannot use scale or ink effects.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawObjectAnimation/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawObjectAnimation/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawObjectAnimation/#example","title":"Example","text":"<pre><code>DrawObjectAnimation()\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawPlayerAnimation/","title":"DrawPlayerAnimation","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawPlayerAnimation/#description","title":"Description","text":"<p>Draws the player's sprites from the animation file loaded prior via LoadAnimation(), with flipping and rotation applied based on the current animation's rotate style.</p> <p>Unlike DrawObjectAnimation(), DrawPlayerAnimation() only draws the player if <code>Player.Visible</code> is <code>true</code>, and sets the position of the sprite based on the camera's target.</p> <p>Note</p> <p>Player animations cannot use scale or ink effects.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawPlayerAnimation/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawPlayerAnimation/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawPlayerAnimation/#example","title":"Example","text":"<pre><code>DrawPlayerAnimation()\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSprite/","title":"DrawSprite","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSprite/#description","title":"Description","text":"<p>Draws <code>Frame</code> at the object's X and Y position.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSprite/#parameters","title":"Parameters","text":"<code>Frame</code> <p>The ID of the SpriteFrame to draw.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSprite/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSprite/#syntax","title":"Syntax","text":"<pre><code>DrawSprite(int Frame)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSprite/#example","title":"Example","text":"<pre><code>DrawSprite(0)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteFX/","title":"DrawSpriteFX","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteFX/#description","title":"Description","text":"<p>Draws <code>Frame</code> at a specified X and Y position with visual effects.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteFX/#parameters","title":"Parameters","text":"<code>Frame</code> <p>The ID of the SpriteFrame to draw.</p> <code>DrawFXFlag</code> <p>The visual effect to apply.</p> <code>XPos</code> <p>The position of the sprite on the horizontal axis in world-space.</p> <code>YPos</code> <p>The position of the sprite on the vertical axis in world-space.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteFX/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteFX/#syntax","title":"Syntax","text":"<pre><code>DrawSpriteFX(int Frame, int DrawFXFlag, int XPos, int YPos)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteFX/#example","title":"Example","text":"<pre><code>DrawSpriteFX(2, FX_FLIP, Object.Value0, Object.YPos)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteFX/#drawfxflag-effects","title":"drawFXFlag Effects","text":"Effect Description <code>FX_SCALE</code> Allows the scaling of the sprite via <code>object.scale</code>. <code>FX_ROTATE</code> Allows the rotation of the sprite via <code>object.rotation</code>. <code>FX_ROTOZOOM</code> Allows both scaling via <code>object.scale</code> and rotation via <code>object.rotation</code>. <code>FX_INK</code> Allows using transparency based on <code>object.inkEffect</code>. <code>FX_TINT</code> Tints the sprite to grayscale if <code>object.inkEffect</code> is set to <code>INK_ALPHA</code>, otherwise it acts like <code>FX_SCALE</code>. <code>FX_FLIP</code> Flips the sprite depending on <code>object.direction</code>. <p>Note</p> <p><code>FX_TINT</code> does not have an alias set by default. Its numeric ID is <code>4</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteFX/#ink-effects","title":"Ink Effects","text":"ID Ink Effect Description 0 <code>INK_NONE</code> No effect. 1 <code>INK_BLEND</code> 50% transparency. 2 <code>INK_ALPHA</code> Transparency based on <code>object.alpha</code>, with a range of 0-255, 255 being no transparency. 3 <code>INK_ADD</code> Additive blending. 4 <code>INK_SUB</code> Subtractive blending.","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteScreenFX/","title":"DrawSpriteScreenFX","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteScreenFX/#description","title":"Description","text":"<p>Draws <code>Frame</code> at a specified X and Y position in screen-space with visual effects.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteScreenFX/#parameters","title":"Parameters","text":"<code>Frame</code> <p>The ID of the SpriteFrame to draw.</p> <code>DrawFXFlag</code> <p>The visual effect to apply.</p> <code>iXPos</code> <p>The position of the sprite on the horizontal axis in screen-space.</p> <code>iYPos</code> <p>The position of the sprite on the vertical axis in screen-space.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteScreenFX/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteScreenFX/#syntax","title":"Syntax","text":"<pre><code>DrawSpriteScreenFX(int Frame, int DrawFXFlag, int iXPos, int iYPos)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteScreenFX/#example","title":"Example","text":"<pre><code>DrawSpriteScreenFX(2, FX_FLIP, Screen.CenterX, 15)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteScreenFX/#drawfxflag-effects","title":"drawFXFlag Effects","text":"Effect Description <code>FX_SCALE</code> Allows the scaling of the sprite via <code>object.scale</code>. <code>FX_ROTATE</code> Allows the rotation of the sprite via <code>object.rotation</code>. <code>FX_ROTOZOOM</code> Allows both scaling via <code>object.scale</code> and rotation via <code>object.rotation</code>. <code>FX_INK</code> Allows using transparency based on <code>object.inkEffect</code>. <code>FX_TINT</code> Tints the sprite to grayscale if <code>object.inkEffect</code> is set to <code>INK_ALPHA</code>, otherwise it acts like <code>FX_SCALE</code>. <code>FX_FLIP</code> Flips the sprite depending on <code>object.direction</code>. <p>Note</p> <p><code>FX_TINT</code> does not have an alias set by default. Its numeric ID is <code>4</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteScreenFX/#ink-effects","title":"Ink Effects","text":"ID Ink Effect Description 0 <code>INK_NONE</code> No effect. 1 <code>INK_BLEND</code> 50% transparency. 2 <code>INK_ALPHA</code> Transparency based on <code>object.alpha</code>, with a range of 0-255, 255 being no transparency. 3 <code>INK_ADD</code> Additive blending. 4 <code>INK_SUB</code> Subtractive blending.","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteScreenXY/","title":"DrawSpriteScreenXY","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteScreenXY/#description","title":"Description","text":"<p>Draws <code>Frame</code> at a specified X and Y position in screen-space.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteScreenXY/#parameters","title":"Parameters","text":"<code>Frame</code> <p>The ID of the SpriteFrame to draw.</p> <code>iXPos</code> <p>The position of the sprite on the horizontal axis in screen-space.</p> <code>iYPos</code> <p>The position of the sprite on the vertical axis in screen-space.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteScreenXY/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteScreenXY/#syntax","title":"Syntax","text":"<pre><code>DrawSpriteScreenXY(int Frame, int iXPos, int iYPos)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteScreenXY/#example","title":"Example","text":"<pre><code>DrawSpriteScreenXY(0, Screen.CenterX, 15)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteXY/","title":"DrawSpriteXY","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteXY/#description","title":"Description","text":"<p>Draws <code>Frame</code> at a specified X and Y position.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteXY/#parameters","title":"Parameters","text":"<code>Frame</code> <p>The ID of the SpriteFrame to draw.</p> <code>XPos</code> <p>The position of the sprite on the horizontal axis in world-space.</p> <code>YPos</code> <p>The position of the sprite on the vertical axis in world-space.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteXY/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteXY/#syntax","title":"Syntax","text":"<pre><code>DrawSpriteXY(int Frame, int XPos, int YPos)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/DrawSpriteXY/#example","title":"Example","text":"<pre><code>DrawSpriteXY(0, Object.Value0, Object.YPos)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/EditFrame/","title":"EditFrame","text":"<p>Note</p> <p>This function does not exist in the Blit releases of Sonic CD.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/EditFrame/#description","title":"Description","text":"<p>Edits the pivots, width, height, and sheet coordinates of <code>frame</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/EditFrame/#parameters","title":"Parameters","text":"<code>Frame</code> <p>The ID of the spriteFrame to edit.</p> <code>xPivot</code> <p>The horizontal offset of the sprite. Negative values will move it to the left, while positive values will move it to the right.</p> <code>yPivot</code> <p>The vertical offset of the sprite. Negative values will move it upwards, while positive values will move it downwards.</p> <code>Width</code> <p>The width of the sprite.</p> <code>Height</code> <p>The height of the sprite.</p> <code>SheetXPos</code> <p>The position of the upper-left border of the sprite, on the X axis.</p> <code>SheetYPos</code> <p>The position of the upper-left border of the sprite, on the Y axis.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/EditFrame/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/EditFrame/#syntax","title":"Syntax","text":"<pre><code>EditFrame(int Frame, int xPivot, int yPivot, int Width, int Height, int SheetXPos, int SheetYPos)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/EditFrame/#example","title":"Example","text":"<pre><code>EditFrame(2, -8, -8, 8, 8, 1, 35)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/LoadAnimation/","title":"LoadAnimation","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/LoadAnimation/#description","title":"Description","text":"<p>Loads an animation file for the current object type.</p> <p>Note</p> <p>Loaded animation files are stored per object type, not per object entity.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/LoadAnimation/#parameters","title":"Parameters","text":"<code>Path</code> <p>The file path to load the animation from, relative to <code>Data/Animations/</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/LoadAnimation/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/LoadAnimation/#syntax","title":"Syntax","text":"<pre><code>LoadAnimation(string Path)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/LoadAnimation/#example","title":"Example","text":"<pre><code>LoadAnimation(\"Test.Ani\")\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/LoadSpriteSheet/","title":"LoadSpriteSheet","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/LoadSpriteSheet/#description","title":"Description","text":"<p>Loads a spritesheet and assigns the ID to <code>Object.SpriteSheet</code>. The spritesheet must be a GIF file.</p> <p>Note</p> <p>Sonic CD Lite can also load PVR files with this function.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/LoadSpriteSheet/#parameters","title":"Parameters","text":"<code>Path</code> <p>The file path of the spritesheet to load, relative to <code>Data/Sprites/</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/LoadSpriteSheet/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/LoadSpriteSheet/#syntax","title":"Syntax","text":"<pre><code>LoadSpriteSheet(string Path)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/LoadSpriteSheet/#example","title":"Example","text":"<pre><code>LoadSpriteSheet(\"Test/Objects.gif\")\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/ProcessAnimation/","title":"ProcessAnimation","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/ProcessAnimation/#description","title":"Description","text":"<p>Processes the current object's animation, based on the animation file loaded prior via LoadAnimation(). The animation is processed based on <code>Object.Animation</code>, and uses <code>Object.AnimationSpeed</code>, <code>Object.AnimationTimer</code>, and <code>Object.Frame</code> as well.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/ProcessAnimation/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/ProcessAnimation/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/ProcessAnimation/#example","title":"Example","text":"<pre><code>ProcessAnimation()\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/RemoveSpriteSheet/","title":"RemoveSpriteSheet","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/RemoveSpriteSheet/#description","title":"Description","text":"<p>Removes the given spritesheet from memory, if it is already loaded.</p> <p>Note</p> <p>This function does not affect files in the datafile or device storage, only the engine memory.</p> <p>Note</p> <p>Spritesheets loaded from animation files cannot be removed.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/RemoveSpriteSheet/#parameters","title":"Parameters","text":"<code>Path</code> <p>The file path of the target spritesheet to remove, relative to <code>Data/Sprites/</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/RemoveSpriteSheet/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/RemoveSpriteSheet/#syntax","title":"Syntax","text":"<pre><code>RemoveSpriteSheet(string Path)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/RemoveSpriteSheet/#example","title":"Example","text":"<pre><code>RemoveSpriteSheet(\"Test/Objects.gif\")\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/SpriteFrame/","title":"SpriteFrame","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/SpriteFrame/#description","title":"Description","text":"<p>Adds a SpriteFrame with the specified values.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/SpriteFrame/#parameters","title":"Parameters","text":"<code>xPivot</code> <p>The horizontal offset of the sprite. Negative values will move it to the left, while positive values will move it to the right.</p> <code>yPivot</code> <p>The vertical offset of the sprite. Negative values will move it upwards, while positive values will move it downwards.</p> <code>Width</code> <p>The width of the sprite.</p> <code>Height</code> <p>The height of the sprite.</p> <code>SheetXPos</code> <p>The position of the upper-left border of the sprite, on the X axis.</p> <code>SheetYPos</code> <p>The position of the upper-left border of the sprite, on the Y axis.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/SpriteFrame/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/SpriteFrame/#syntax","title":"Syntax","text":"<pre><code>SpriteFrame(int xPivot, int yPivot, int Width, int Height, int SheetXPos, int SheetYPos)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Graphics/SpriteFrame/#example","title":"Example","text":"<pre><code>SpriteFrame(-16, -16, 32, 32, 75, 129)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/ATan2/","title":"ATan2","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/ATan2/#description","title":"Description","text":"<p>Performs an arctan operation using <code>X</code> and <code>Y</code>, storing the result in <code>Store</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/ATan2/#parameters","title":"Parameters","text":"<code>Store</code> <p>The variable to store the result.</p> <code>X</code>, <code>Y</code> <p>The values used in the arctan operation.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/ATan2/#return-value","title":"Return Value","text":"<p>Sets <code>Store</code> to the result.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/ATan2/#syntax","title":"Syntax","text":"<pre><code>ATan2(var Store, int X, int Y)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/ATan2/#example","title":"Example","text":"<pre><code>ATan2(TempValue1, Object.Value5, TempValue0)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Cos/","title":"Cos","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Cos/#description","title":"Description","text":"<p>Gets the value from the <code>cos512</code> lookup table based on <code>Angle</code> and sets it in <code>Store</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Cos/#parameters","title":"Parameters","text":"<code>Store</code> <p>The variable to store the result.</p> <code>Angle</code> <p>The value of angle.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Cos/#return-value","title":"Return Value","text":"<p>Sets <code>Store</code> to the result.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Cos/#syntax","title":"Syntax","text":"<pre><code>Cos(var Store, int Angle)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Cos/#example","title":"Example","text":"<pre><code>Cos(TempValue0, Object.Value2)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Cos256/","title":"Cos256","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Cos256/#description","title":"Description","text":"<p>Gets the value from the <code>cos256</code> lookup table based on <code>Angle</code> and sets it in <code>Store</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Cos256/#parameters","title":"Parameters","text":"<code>Store</code> <p>The variable to store the result.</p> <code>Angle</code> <p>The value of angle.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Cos256/#return-value","title":"Return Value","text":"<p>Sets <code>Store</code> to the result.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Cos256/#syntax","title":"Syntax","text":"<pre><code>Cos256(var Store, int Angle)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Cos256/#example","title":"Example","text":"<pre><code>Cos256(TempValue0, Object.Value2)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/GetBit/","title":"GetBit","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/GetBit/#description","title":"Description","text":"<p>Gets the binary bit at index <code>BitPos</code> from <code>Value</code> and stores it in <code>Store</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/GetBit/#parameters","title":"Parameters","text":"<code>Store</code> <p>The variable to store the bit.</p> <code>Value</code> <p>The value from where to search the required Bit.</p> <code>BitPos</code> <p>The position of the bit to get. Indices 0-7 are valid.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/GetBit/#return-value","title":"Return Value","text":"<p>Sets <code>Store</code> to the result.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/GetBit/#syntax","title":"Syntax","text":"<pre><code>GetBit(var Store, int Value, int BitPos)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/GetBit/#example","title":"Example","text":"<pre><code>GetBit(ArrayPos0, TempValue3, 6)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Interpolate/","title":"Interpolate","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Interpolate/#description","title":"Description","text":"<p>Linearly interpolates (LERPs) <code>X</code> and <code>Y</code> by <code>Percent</code> and stores the result in <code>Store</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Interpolate/#parameters","title":"Parameters","text":"<code>Store</code> <p>The variable to store the result.</p> <code>X</code>,<code>Y</code> <p>The values used for the interpolation.</p> <code>Percent</code> <p>Percentage of interpolation, with a range of 0 to 256.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Interpolate/#return-value","title":"Return Value","text":"<p>Sets <code>Store</code> to the result.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Interpolate/#syntax","title":"Syntax","text":"<pre><code>Interpolate(var Store, int X, int Y, int Percent)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Interpolate/#example","title":"Example","text":"<pre><code>Interpolate(Object.Value2, 26, 29, 128)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/InterpolateXY/","title":"InterpolateXY","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/InterpolateXY/#description","title":"Description","text":"<p>Linearly interpolates two points at once, <code>AX</code> with <code>AY</code>, and <code>BX</code> with <code>BY</code>, by <code>Percent</code>, and stores the result in <code>StoreX</code> and <code>StoreY</code> respectively.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/InterpolateXY/#parameters","title":"Parameters","text":"<code>StoreX</code>, <code>StoreY</code> <p>The variables to store the results.</p> <code>AX</code>, <code>AY</code>, <code>BX</code>, <code>BY</code> <p>The values used for the interpolations.</p> <code>Percent</code> <p>Percentage of interpolation, with a range of 0 to 256.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/InterpolateXY/#return-value","title":"Return Value","text":"<p>Sets <code>StoreX</code> and <code>StoreY</code> to the results.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/InterpolateXY/#syntax","title":"Syntax","text":"<pre><code>InterpolateXY(var StoreX, var StoreY, int AX, int AY, int BX, int BY, int Percent)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/InterpolateXY/#example","title":"Example","text":"<pre><code>InterpolateXY(Object.Value2, Object.Value3, 26, 29, 33, 37, 220)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Not/","title":"Not","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Not/#description","title":"Description","text":"<p>Performs a NOT operation on <code>Value</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Not/#parameters","title":"Parameters","text":"<code>Value</code> <p>The variable to negate.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Not/#return-value","title":"Return Value","text":"<p>Updates <code>Value</code> with the result.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Not/#syntax","title":"Syntax","text":"<pre><code>Not(var Value)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Not/#example","title":"Example","text":"<pre><code>Not(TempValue4)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Rand/","title":"Rand","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Rand/#description","title":"Description","text":"<p>Gets a random value from 0 to <code>Max</code> (not inclusive) and stores it in <code>Store</code>.</p> <p>Note</p> <p><code>Max</code> is exclusive, meaning the number it's set to will never be chosen, e.g. a <code>Max</code> value of 4 will result in only numbers 0-3 being picked.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Rand/#parameters","title":"Parameters","text":"<code>Store</code> <p>Variable from where to store the result.</p> <code>Max</code> <p>Exclusive maximum for the random value to get.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Rand/#return-value","title":"Return Value","text":"<p>Sets <code>Store</code> to the result.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Rand/#syntax","title":"Syntax","text":"<pre><code>Rand(var Store, int Max)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Rand/#example","title":"Example","text":"<pre><code>Rand(Object.Value3, 8)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/SetBit/","title":"SetBit","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/SetBit/#description","title":"Description","text":"<p>Sets index <code>BitPos</code> of <code>Value</code> to <code>Bit</code> and updates <code>Value</code> accordingly.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/SetBit/#parameters","title":"Parameters","text":"<code>Value</code> <p>The variable to update.</p> <code>BitPos</code> <p>The position of the bit to set. Indices 0-7 are valid.</p> <code>Bit</code> <p>Updated boolean value.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/SetBit/#return-value","title":"Return Value","text":"<p>Updates <code>Value</code> with the applied bit.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/SetBit/#syntax","title":"Syntax","text":"<pre><code>SetBit(var Value, int BitPos, bool Bit)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/SetBit/#example","title":"Example","text":"<pre><code>SetBit(Object.Value7, 3, 1)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Sin/","title":"Sin","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Sin/#description","title":"Description","text":"<p>Gets the value from the <code>sin512</code> lookup table based on <code>Angle</code> and sets it in <code>Store</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Sin/#parameters","title":"Parameters","text":"<code>Store</code> <p>The variable to store the result.</p> <code>Angle</code> <p>The value of angle.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Sin/#return-value","title":"Return Value","text":"<p>Sets <code>Store</code> to the result.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Sin/#syntax","title":"Syntax","text":"<pre><code>Sin(var Store, int Angle)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Sin/#example","title":"Example","text":"<pre><code>Sin(Object.Value3, TempValue0)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Sin256/","title":"Sin256","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Sin256/#description","title":"Description","text":"<p>Gets the value from the <code>sin256</code> lookup table based on <code>Angle</code> and sets it in <code>Store</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Sin256/#parameters","title":"Parameters","text":"<code>Store</code> <p>The variable to store the result.</p> <code>Angle</code> <p>The value of angle.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Sin256/#return-value","title":"Return Value","text":"<p>Sets <code>Store</code> to the result.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Sin256/#syntax","title":"Syntax","text":"<pre><code>Sin256(var Store, int Angle)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Math/Sin256/#example","title":"Example","text":"<pre><code>Sin256(Object.Value3, TempValue0)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/AddMenuEntry/","title":"AddMenuEntry","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/AddMenuEntry/#description","title":"Description","text":"<p>Adds an entry to <code>Menu</code> with the contents of <code>Text</code>. The text will display highlighted if <code>HighlightEntry</code> is set to true.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/AddMenuEntry/#parameters","title":"Parameters","text":"<code>Menu</code> <p>The menu to add the entry to. <code>MENU_1</code> or <code>MENU_2</code> are valid.</p> <code>Text</code> <p>New text to add in the menu.</p> <code>HighlightEntry</code> <p>Determines if the text will always be highlighted.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/AddMenuEntry/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/AddMenuEntry/#syntax","title":"Syntax","text":"<pre><code>AddMenuEntry(int Menu, string Text, bool HighlightEntry)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/AddMenuEntry/#example","title":"Example","text":"<pre><code>AddMenuEntry(MENU_1, \"THIS IS AN EXAMPLE\", true)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/CheckTouchRect/","title":"CheckTouchRect","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/CheckTouchRect/#description","title":"Description","text":"<p>Checks if there's a touch input between the given coordinates.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/CheckTouchRect/#parameters","title":"Parameters","text":"<code>X1</code> <p>Left side of the rectangle.</p> <code>Y1</code> <p>Top side of the rectangle.</p> <code>X2</code> <p>Right side of the rectangle.</p> <code>Y2</code> <p>Bottom side of the rectangle.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/CheckTouchRect/#return-value","title":"Return Value","text":"<p>Sets <code>CheckResult</code> to the ID of the touch input within the coordinates. If there are no such touch inputs, <code>CheckResult</code> is set to <code>-1</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/CheckTouchRect/#syntax","title":"Syntax","text":"<pre><code>CheckTouchRect(int X1, int Y1, int X2, int Y2)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/CheckTouchRect/#example","title":"Example","text":"<pre><code>CheckTouchRect(0, 0, Screen.XSize, Screen.YSize)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/DrawMenu/","title":"DrawMenu","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/DrawMenu/#description","title":"Description","text":"<p>Draws <code>Menu</code> at <code>XPos</code> and <code>YPos</code> relative to the screen.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/DrawMenu/#parameters","title":"Parameters","text":"<code>Menu</code> <p>The menu to draw. <code>MENU_1</code> or <code>MENU_2</code> are valid.</p> <code>XPos</code> <p>Position of the menu on the horizontal axis.</p> <code>YPos</code> <p>Position of the menu on the vertical axis.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/DrawMenu/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/DrawMenu/#syntax","title":"Syntax","text":"<pre><code>DrawMenu(int Menu, int XPos, int YPos)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/DrawMenu/#example","title":"Example","text":"<pre><code>DrawMenu(MENU_1, Screen.CenterX, Screen.CenterY)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/DrawText/","title":"DrawText","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/DrawText/#description","title":"Description","text":"<p>Draws the contents of <code>menu</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/DrawText/#parameters","title":"Parameters","text":"<code>Menu</code> <p>The menu from where to read the text. <code>MENU_1</code> or <code>MENU_2</code> are valid.</p> <code>XPos</code> <p>Position of the text on the horizontal axis.</p> <code>YPos</code> <p>Position of the text on the vertical axis.</p> <code>Scale</code> <p>Scale of the text.</p> <code>Spacing</code> <p>Space between each letter.</p> <code>RowStart</code> <p>The starting index from where to read.</p> <code>RowCount</code> <p>The amount of rows to draw.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/DrawText/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/DrawText/#syntax","title":"Syntax","text":"<pre><code>DrawText(int Menu, int XPos, int YPos, int Scale, int Spacing, int RowStart, int RowCount)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/DrawText/#example","title":"Example","text":"<pre><code>DrawText(MENU_1, TempValue0, TempValue1, 192, 0, 0, 1)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/EditMenuEntry/","title":"EditMenuEntry","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/EditMenuEntry/#description","title":"Description","text":"<p>Edits an entry of <code>Menu</code> with the contents of <code>Text</code> in <code>RowID</code>. The text will display highlighted if <code>HighlightEntry</code> is set to true.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/EditMenuEntry/#parameters","title":"Parameters","text":"<code>Menu</code> <p>The menu to edit the entry in. <code>MENU_1</code> or <code>MENU_2</code> are valid.</p> <code>Text</code> <p>Text to replace the current text with.</p> <code>RowID</code> <p>The index of the row to edit.</p> <code>HighlightEntry</code> <p>Determines if the text will always be highlighted.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/EditMenuEntry/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/EditMenuEntry/#syntax","title":"Syntax","text":"<pre><code>EditMenuEntry(int Menu, string Text, int RowID, bool HighlightEntry)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/EditMenuEntry/#example","title":"Example","text":"<pre><code>EditMenuEntry(MENU_1, \"THIS IS AN EXAMPLE\", 0, true)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/EngineCallback/","title":"EngineCallback","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/EngineCallback/#description","title":"Description","text":"<p>Sends a callback to the engine.</p> <p>Note</p> <p>The names of each callback are not defined by the engine itself; they must be manually defined as aliases or global variables.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/EngineCallback/#parameters","title":"Parameters","text":"<code>Callback</code> <p>The index value of the callback.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/EngineCallback/#return-value","title":"Return Value","text":"<p>Depends on the callback used.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/EngineCallback/#syntax","title":"Syntax","text":"<pre><code>EngineCallback(int Callback)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/EngineCallback/#example","title":"Example","text":"<pre><code>EngineCallback(CALLBACK_FINISHGAME_NOTIFY)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/EngineCallback/#callbacks","title":"Callbacks","text":"ID Callback Description 0 CALLBACK_DISPLAYLOGOS In the Blit releases of Sonic CD, displays the splash screens. 1 CALLBACK_PRESS_START Notifies the backend that a button has been pressed on the title screen. 2 CALLBACK_TIMEATTACK_NOTIFY_ENTER Notifies the backend that Time Attack mode has been entered. 3 CALLBACK_TIMEATTACK_NOTIFY_EXIT Notifies the backend that Time Attack mode has been exited. 4 CALLBACK_FINISHGAME_NOTIFY Notifies the backend that the game has been finished. 5 CALLBACK_RETURNSTORE_SELECTED Notifies the backend that \"Return to Store\" has been selected and closes the engine. 6 CALLBACK_RESTART_SELECTED Reloads the current scene. 7 CALLBACK_EXIT_SELECTED In the Blit releases of Sonic CD, closes the engine. In other versions of RSDKv3, loads the first scene in the Presentation stage list. 8 CALLBACK_BUY_FULL_GAME_SELECTED Notifies the backend that \"Buy Full Game\" has been selected and closes the engine. 9 CALLBACK_TERMS_SELECTED In the Blit releases of Sonic CD, shows the Help screen. In the mobile version of Sonic CD, shows the Terms &amp; Conditions screen. 10 CALLBACK_PRIVACY_SELECTED In the Blit releases of Sonic CD, shows the Controls screen. In the mobile version of Sonic CD, shows the Privacy screen. 11 CALLBACK_TRIAL_ENDED In the mobile version of Sonic CD, shows the Trial Ended screen if in trial mode. If not in trial mode, loads <code>http://www.sega.com</code> in a web browser. 12 CALLBACK_SETTINGS_SELECTED In the Blit releases of Sonic CD, shows the Settings screen. In the mobile version of Sonic CD, shows the Full Game Only screen if in trial mode. If not in trial mode, loads <code>http://www.sega.com/legal/terms_mobile.php</code> in a web browser. 13 CALLBACK_PAUSE_REQUESTED Shows the pause screen, loading the hardcoded menu if the Dev Menu is disabled in the Blit releases of Sonic CD. 14 CALLBACK_FULL_VERSION_ONLY In the mobile version of Sonic CD, shows the Full Game Only screen. 15 CALLBACK_STAFF_CREDITS In the Blit releases of Sonic CD, shows the credits. In the mobile version of Sonic CD, loads <code>http://www.sega.com/legal/privacy_mobile.php</code> in a web browser. 16 CALLBACK_MOREGAMES In the mobile version of Sonic CD, shows the See More Games screen. 20 CALLBACK_SHOWREMOVEADS In the mobile version of Sonic CD, shows the Remove Ads screen. 100 CALLBACK_AGEGATE In the mobile version of Sonic CD, shows the Age Gate screen and sets <code>HaveLoadAllGDPRValue</code> to <code>1</code> when it's closed. 997 CALLBACK_SHOWMENU_2 In the Sega Forver version of Sonic CD, shows a menu. 998 CALLBACK_SHOWHELPCENTER In the Sega Forver version of Sonic CD, shows the Help Center. 999 CALLBACK_CHANGEADSTYPE In the Sega Forver version of Sonic CD, shows the Change Ads Type screen. 1000 CALLBACK_NONE_1000 Unknown callback. 1001 CALLBACK_NONE_1001 Unknown callback. 1002 CALLBACK_NONE_1006 Unknown callback. 1003 CALLBACK_ONSHOWINTERSTITIAL In the Sega Forver version of Sonic CD, notifies the backend that an interstitial is shown. 1004 CALLBACK_ONSHOWBANNER In the Sega Forver version of Sonic CD, notifies the backend that a banner is shown. 1005 CALLBACK_ONSHOWBANNER_PAUSESTART In the Sega Forver version of Sonic CD, notifies the backend that a banner is in an animation. 1006 CALLBACK_ONHIDEBANNER In the Sega Forver version of Sonic CD, notifies the backend that a banner is hidden. 1007 CALLBACK_REMOVEADSBUTTON_FADEOUT In the Sega Forver version of Sonic CD, notifies the backend that the Remove Ads button is fading out. 1008 CALLBACK_REMOVEADSBUTTON_FADEIN In the Sega Forver version of Sonic CD, notifies the backend that the Remove Ads button is fading in. 1009 CALLBACK_ONSHOWINTERSTITIAL_2 In the Sega Forver version of Sonic CD, notifies the backend that an interstitial is shown. 1010 CALLBACK_ONSHOWINTERSTITIAL_3 In the Sega Forver version of Sonic CD, notifies the backend that an interstitial is shown. 1011 CALLBACK_ONSHOWINTERSTITIAL_4 In the Sega Forver version of Sonic CD, notifies the backend that an interstitial is shown. 1012 CALLBACK_ONVISIBLEGRIDBTN_1 In the Sega Forver version of Sonic CD, notifies the backend that a grid button is visible. 1013 CALLBACK_ONVISIBLEGRIDBTN_0 In the Sega Forver version of Sonic CD, notifies the backend that a grid button is visible and disables high res mode. 1014 CALLBACK_ONSHOWINTERSTITIAL_PAUSEDURATION In the Sega Forver version of Sonic CD, notifies the backend that an interstitial is in an animation. 1015 CALLBACK_SHOWCOUNTDOWNMENU In the Sega Forver version of Sonic CD, shows a countdown menu. 1016 CALLBACK_ONVISIBLEMAINMENU_1 In the Sega Forver version of Sonic CD, notifies the backend that the main menu is visible. 1017 CALLBACK_ONVISIBLEMAINMENU_0 In the Sega Forver version of Sonic CD, notifies the backend that the main menu is visible. 1018 CALLBACK_ONSHOWREWARDADS In the Sega Forver version of Sonic CD, plays an ad and sets <code>RewardAdCallback</code> to <code>1</code>. 1019 CALLBACK_ONSHOWBANNER_2 In the Sega Forver version of Sonic CD, notifies the backend that a banner is shown. 1020 CALLBACK_ONSHOWINTERSTITIAL_5 In the Sega Forver version of Sonic CD, notifies the backend that an interstitial is shown. 4097 CALLBACK_SET1P Sets <code>activePlayerCount</code> to <code>1</code>. Decomp only. 4098 CALLBACK_SET2P Sets <code>activePlayerCount</code> to <code>2</code>. Decomp only. <p>In Sonic Origins, you can also call NotifyCallback callbacks with this function. For more information, including a list of usable callbacks, see this page.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/GetTextInfo/","title":"GetTextInfo","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/GetTextInfo/#description","title":"Description","text":"<p>Gets the data of <code>Type</code> from <code>Menu</code> using <code>Index</code> and stores it in <code>Store</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/GetTextInfo/#parameters","title":"Parameters","text":"<code>Store</code> <p>Variable where the data will be saved.</p> <code>Menu</code> <p>The menu from where to get the data. <code>MENU_1</code> or <code>MENU_2</code> are valid.</p> <code>Type</code> <p>The type of data to read. Valid values are 0 (<code>TEXTINFO_TEXTDATA</code>), 1 (<code>TEXTINFO_TEXTSIZE</code>) or 2 (<code>TEXTINFO_ROWCOUNT</code>).</p> <code>Index</code> <p>Index of the text row from where to get the data.</p> <code>Offset</code> <p>Offset for the text at <code>Index</code>. Only used if <code>Type</code> is <code>TEXTINFO_TEXTDATA</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/GetTextInfo/#return-value","title":"Return Value","text":"<p>Sets <code>Store</code> to the result.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/GetTextInfo/#syntax","title":"Syntax","text":"<pre><code>GetTextInfo(var Store, int Menu, int Type, int Index, int Offset)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/GetTextInfo/#example","title":"Example","text":"<pre><code>GetTextInfo(TempValue4, MENU_1, TEXTINFO_TEXTDATA, TempValue0, 1)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/GetVersionNumber/","title":"GetVersionNumber","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/GetVersionNumber/#description","title":"Description","text":"<p>Adds a text entry to <code>Menu</code> with the engine's version as the text. The text will display highlighted if <code>HighlightEntry</code> is set to true.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/GetVersionNumber/#parameters","title":"Parameters","text":"<code>Menu</code> <p>The menu to add the text to. <code>MENU_1</code> or <code>MENU_2</code> are valid.</p> <code>HighlightEntry</code> <p>Determines if the text will always be highlighted.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/GetVersionNumber/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/GetVersionNumber/#syntax","title":"Syntax","text":"<pre><code>GetVersionNumber(int Menu, bool HighlightEntry)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/GetVersionNumber/#example","title":"Example","text":"<pre><code>GetVersionNumber(MENU_2, true)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadOnlineMenu/","title":"LoadOnlineMenu","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadOnlineMenu/#description","title":"Description","text":"<p>Loads the data for the specified online menu.</p> <p>Note</p> <p>This function only works in Blit releases of Sonic CD.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadOnlineMenu/#parameters","title":"Parameters","text":"<code>MenuID</code> <p>The ID of the menu to load. Valid values are 0 (<code>ONLINEMENU_ACHIEVEMENTS</code>) and 1 (<code>ONLINEMENU_LEADERBOARDS</code>).</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadOnlineMenu/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadOnlineMenu/#syntax","title":"Syntax","text":"<pre><code>LoadOnlineMenu(int MenuID)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadOnlineMenu/#example","title":"Example","text":"<pre><code>LoadOnlineMenu(0)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadTextFile/","title":"LoadTextFile","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadTextFile/#description","title":"Description","text":"<p>Loads <code>Menu</code> based on the text file loaded from <code>FilePath</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadTextFile/#parameters","title":"Parameters","text":"<code>Menu</code> <p>The menu to which the file will load. <code>MENU_1</code> or <code>MENU_2</code> are valid.</p> <code>FilePath</code> <p>The path to the target file, relative to the root of the Data assets.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadTextFile/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadTextFile/#syntax","title":"Syntax","text":"<pre><code>LoadTextFile(int Menu, string FilePath)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadTextFile/#example","title":"Example","text":"<pre><code>LoadTextFile(MENU_1, \"Data/Game/Credits_Mobile.txt\")\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadTextFont/","title":"LoadTextFont","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadTextFont/#description","title":"Description","text":"<p>Loads a bitmap font from <code>FilePath</code> for use with text menus.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadTextFont/#parameters","title":"Parameters","text":"<code>FilePath</code> <p>The path to the font.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadTextFont/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadTextFont/#syntax","title":"Syntax","text":"<pre><code>LoadTextFont(string FilePath)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadTextFont/#example","title":"Example","text":"<pre><code>LoadTextFont(\"Data/Game/SystemText.gif\")\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadVideo/","title":"LoadVideo","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadVideo/#description","title":"Description","text":"<p>Loads and plays a video.</p> <p>The compatible video formats and directory containing the videos vary depending on the version of the game/engine:</p> <ul> <li>Blit releases, RSDKv3 Decompilation:<ul> <li><code>.ogv</code> files stored in the <code>videos</code> folder located outside of the datapack.</li> <li><code>.rsv</code> files stored in <code>Data/Sprites/</code>.</li> </ul> </li> <li>Mobile releases: <code>.mp4</code> files located in a directory outside of the datapack depending on the version of Sonic CD.</li> <li>Sonic Origins: Videos are stored and handled by Hedgehog Engine 2.</li> <li>RSDKv5U Decompilation: <code>.ogv</code> files stored in <code>Data/Videos/</code>.</li> </ul>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadVideo/#parameters","title":"Parameters","text":"<code>Name</code> <p>The name of the video file to load. Unless you're loading an RSV file, the file extension should be excluded. See the list above for what path this is relative to.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadVideo/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadVideo/#syntax","title":"Syntax","text":"<pre><code>LoadVideo(string Name)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/LoadVideo/#examples","title":"Examples","text":"<p><pre><code>LoadVideo(\"Opening\")\n</code></pre> <pre><code>LoadVideo(\"Cutscenes/Opening.rsv\")\n</code></pre></p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/NextVideoFrame/","title":"NextVideoFrame","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/NextVideoFrame/#description","title":"Description","text":"<p>Advances the video frame of an RSV video.</p> <p>Note</p> <p>This function only works in Blit releases of Sonic CD and the RSDKv3 Decompilation.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/NextVideoFrame/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/NextVideoFrame/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/NextVideoFrame/#example","title":"Example","text":"<pre><code>NextVideoFrame()\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/ReadSaveRAM/","title":"ReadSaveRAM","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/ReadSaveRAM/#description","title":"Description","text":"<p>Reads the contents of the save file on disk into SaveRAM.</p> <p>Note</p> <p>The contents previously in SaveRAM will be overwritten upon calling this function.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/ReadSaveRAM/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/ReadSaveRAM/#return-value","title":"Return Value","text":"<p>Sets <code>CheckResult</code> to <code>true</code> if SaveRAM is successfully loaded; otherwise, sets it to <code>false</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/ReadSaveRAM/#example","title":"Example","text":"<pre><code>ReadSaveRAM()\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/SetAchievement/","title":"SetAchievement","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/SetAchievement/#description","title":"Description","text":"<p>Sets the status of the given achievement.</p> <p>Note</p> <p>This function has no effect if trial mode or debug mode are enabled.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/SetAchievement/#parameters","title":"Parameters","text":"<code>ID</code> <p>The index value of the achievement.</p> <code>Status</code> <p>The status (progress) to set the achievement to, with a range of 0 to 100. If the status is 100, the achievement is considered achieved and will be awarded to the player.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/SetAchievement/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/SetAchievement/#syntax","title":"Syntax","text":"<pre><code>SetAchievement(int ID, int Status)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/SetAchievement/#example","title":"Example","text":"<pre><code>SetAchievement(3, 100)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/SetLeaderboard/","title":"SetLeaderboard","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/SetLeaderboard/#description","title":"Description","text":"<p>Submits the given score to the given leaderboard.</p> <p>Note</p> <p>This function has no effect if trial mode or debug mode are enabled.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/SetLeaderboard/#parameters","title":"Parameters","text":"<code>LeaderboardID</code> <p>The index value of the leaderboard.</p> <code>Score</code> <p>The score to submit to the leaderboard. The score will not be submitted if it's lower than the score already in the leaderboard.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/SetLeaderboard/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/SetLeaderboard/#syntax","title":"Syntax","text":"<pre><code>SetLeaderboard(int LeaderboardID, int Score)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/SetLeaderboard/#example","title":"Example","text":"<pre><code>SetLeaderboard(19, Player.Score)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/SetupMenu/","title":"SetupMenu","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/SetupMenu/#description","title":"Description","text":"<p>Sets up <code>Menu</code> with <code>RowCount</code> rows, <code>SelectionCount</code> active selections and aligning set to <code>Alignment</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/SetupMenu/#parameters","title":"Parameters","text":"<code>Menu</code> <p>The menu to setup. <code>MENU_1</code> or <code>MENU_2</code> are valid.</p> <code>RowCount</code> <p>The amount of rows the menu starts with.</p> <code>SelectionCount</code> <p>Selection of highlight.</p> <code>Alignment</code> <p>Alignment of the text. 0 is right aligned, 1 is left aligned, and 2 is centered.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/SetupMenu/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/SetupMenu/#syntax","title":"Syntax","text":"<pre><code>SetupMenu(int Menu, int RowCount, int SelectionCount, int Alignment)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/SetupMenu/#example","title":"Example","text":"<pre><code>SetupMenu(MENU_1, 0, 3, 1)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/WriteSaveRAM/","title":"WriteSaveRAM","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/WriteSaveRAM/#description","title":"Description","text":"<p>Writes the contents of SaveRAM to the save file on disk.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/WriteSaveRAM/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/WriteSaveRAM/#return-value","title":"Return Value","text":"<p>Sets <code>CheckResult</code> to <code>true</code> if the save file is successfully written to; otherwise, sets it to <code>false</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Misc/WriteSaveRAM/#example","title":"Example","text":"<pre><code>WriteSaveRAM()\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/BindPlayerToObject/","title":"BindPlayerToObject","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/BindPlayerToObject/#description","title":"Description","text":"<p>Binds a Player set to <code>ListPos</code> in the player list to entity slot number <code>EntityNo</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/BindPlayerToObject/#parameters","title":"Parameters","text":"<code>ListPos</code> <p>The list position of the Player.</p> <code>EntityNo</code> <p>The entity number that we're binding the Player to.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/BindPlayerToObject/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/BindPlayerToObject/#syntax","title":"Syntax","text":"<pre><code>BindPlayerToObject(int ListPos, int EntityNo)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/BindPlayerToObject/#example","title":"Example","text":"<pre><code>BindPlayerToObject(1, 32)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/CreateTempObject/","title":"CreateTempObject","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/CreateTempObject/#description","title":"Description","text":"<p>Creates a temporary object specified by <code>Type</code>, <code>PropertyValue</code>, <code>XPos</code>, and <code>YPos</code> near the end of the object list.</p> <p>Note</p> <p>If there are too many temporary objects loaded when this function is called, the engine will start overwritting them. Therefore, it's recommended to only use this function for objects that quickly get destroyed or unloaded.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/CreateTempObject/#parameters","title":"Parameters","text":"<code>ObjectType</code> <p>The type of object that will be created.</p> <code>PropertyValue</code> <p>The Property Value of the object.</p> <code>XPos</code> <p>The position of the object on the horizontal axis in world-space.</p> <code>YPos</code> <p>The position of the object on the vertical axis in world-space.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/CreateTempObject/#return-value","title":"Return Value","text":"<p>Sets <code>TempObjectPos</code> to the created object's <code>EntityNo</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/CreateTempObject/#syntax","title":"Syntax","text":"<pre><code>CreateTempObject(int Type, int PropertyValue, int XPos, int YPos)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/CreateTempObject/#example","title":"Example","text":"<pre><code>CreateTempObject(TypeName[Test Object], 0, Player.XPos, Player.YPos)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ObjectTileCollision/","title":"ObjectTileCollision","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ObjectTileCollision/#description","title":"Description","text":"<p>Tries to collide with the foreground layer based on the position of <code>Object.iXPos</code> + <code>xOffset</code>, <code>Object.iYPos</code> + <code>yOffset</code>.</p> <p>Note</p> <p>This function is best used for checking a tile is present. For moving along tiles, use ObjectTileGrip() instead.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ObjectTileCollision/#parameters","title":"Parameters","text":"<code>CSide</code> <p>Determines to which side of the tile the object has to collide. Can be <code>CSIDE_FLOOR</code>, <code>CSIDE_LWALL</code>, <code>CSIDE_RWALL</code>, or <code>CSIDE_ROOF</code>. In Sonic Origins, <code>CSIDE_ENTITY</code> is available as well.</p> <code>xOffset</code> <p>Horizontal offset of the object.</p> <code>yOffset</code> <p>Vertical offset of the object.</p> <code>CPlane</code> <p>Collision plane to take into account.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ObjectTileCollision/#return-value","title":"Return Value","text":"<p>Sets <code>CheckResult</code> to <code>true</code> if there was collision; otherwise, it's set to <code>false</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ObjectTileCollision/#syntax","title":"Syntax","text":"<pre><code>ObjectTileCollision(int CSide, int xOffset, int yOffset, int CPlane)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ObjectTileCollision/#example","title":"Example","text":"<pre><code>ObjectTileCollision(CSIDE_LWALL, -15, -4, 0)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ObjectTileGrip/","title":"ObjectTileGrip","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ObjectTileGrip/#description","title":"Description","text":"<p>Tries to collide with the foreground layer based on the position of <code>Object.iXPos</code> + <code>xOffset</code>, <code>Object.iYPos</code> + <code>yOffset</code>. TODO: this needs a better description to differentiate it from ObjectTileCollision()</p> <p>Note</p> <p>This function is best used to handle moving along surfaces. For handling simpler collision, use ObjectTileCollision() instead.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ObjectTileGrip/#parameters","title":"Parameters","text":"<code>CSide</code> <p>Determines to which side of the tile the object has to collide. Can be <code>CSIDE_FLOOR</code>, <code>CSIDE_LWALL</code>, <code>CSIDE_RWALL</code>, or <code>CSIDE_ROOF</code>. In Sonic Origins, <code>CSIDE_ENTITY</code> is available as well.</p> <code>xOffset</code> <p>Horizontal offset of the object.</p> <code>yOffset</code> <p>Vertical offset of the object.</p> <code>CPlane</code> <p>Collision plane to take into account.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ObjectTileGrip/#return-value","title":"Return Value","text":"<p>Sets <code>CheckResult</code> to <code>true</code> if there was collision; otherwise, it's set to <code>false</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ObjectTileGrip/#syntax","title":"Syntax","text":"<pre><code>ObjectTileGrip(int CSide, int xOffset, int yOffset, int CPlane)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ObjectTileGrip/#example","title":"Example","text":"<pre><code>ObjectTileGrip(CSIDE_RWALL, 8, -12, 0)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/PlayerObjectCollision/","title":"PlayerObjectCollision","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/PlayerObjectCollision/#description","title":"Description","text":"<p>Checks for collision of an object with the player, using the hitbox values passed.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/PlayerObjectCollision/#parameters","title":"Parameters","text":"<code>CollisionType</code> <p>Type of collision with the object, can be <code>C_TOUCH</code>, <code>C_BOX</code>, <code>C_BOX2</code> or <code>C_PLATFORM</code>. In Origins Plus, <code>C_BOX3</code> and <code>C_ENEMY</code> are available as well.</p> <code>Left</code> / <code>Top</code> / <code>Right</code> / <code>Bottom</code> <p>The values for the object's hitbox.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/PlayerObjectCollision/#return-value","title":"Return Value","text":"<p>If there wasn't any collision, <code>CheckResult</code> will be <code>false</code>. Depending on the <code>CollisionType</code> used: - <code>C_TOUCH</code>/<code>C_ENEMY</code>: <code>CheckResult</code> will return <code>true</code> with any type of collision - <code>C_BOX</code>/<code>C_BOX2</code>/<code>C_BOX3</code> : <code>CheckResult</code> will return values <code>1</code> (Floor), <code>2</code> (LWall), <code>3</code> (RWall) or <code>4</code> (Roof) depending on the side of the object collided with. - <code>C_PLATFORM</code>: <code>CheckResult</code> will only be <code>true</code> if the top of the object was collided with.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/PlayerObjectCollision/#syntax","title":"Syntax","text":"<pre><code>PlayerObjectCollision(int CollisionType, int Left, int Top, int Right, int Bottom)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/PlayerObjectCollision/#example","title":"Example","text":"<pre><code>PlayerObjectCollision(C_PLATFORM, -24, -8, 24, 8)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/PlayerTileCollision/","title":"PlayerTileCollision","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/PlayerTileCollision/#description","title":"Description","text":"<p>Handles tile collision of the player.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/PlayerTileCollision/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/PlayerTileCollision/#return-value","title":"Return Value","text":"<ul> <li>Handles movement, both on the ground and in the air.</li> <li>Sets <code>Object.CollisionMode</code> to <code>CMODE_FLOOR</code>, <code>CMODE_LWALL</code>, <code>CMODE_RWALL</code>, or <code>CMODE_ROOF</code> depending on the object's angle, along with updating <code>Player.Angle</code> based on the current tile stepped.</li> <li>Updates <code>Player.Speed</code>, <code>Player.XVelocity</code>, and <code>Player.YVelocity</code>.</li> <li>Determines if the character is <code>Flailing</code>, <code>Pushing</code>, or is now in the air.</li> </ul>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/PlayerTileCollision/#example","title":"Example","text":"<pre><code>PlayerTileCollision()\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ProcessPlayerControl/","title":"ProcessPlayerControl","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ProcessPlayerControl/#description","title":"Description","text":"<p>Handles player input variables and sidekick input buffering.</p> <p>Note</p> <p>Despite RSDKv5U adding multiple controllers, this function only reads the inputs for Controller 1.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ProcessPlayerControl/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ProcessPlayerControl/#return-value","title":"Return Value","text":"<ul> <li>If <code>Player.ControlMode</code> is set to <code>CONTROLMODE_NONE</code> (<code>-1</code>): No variables will be set.</li> <li>If <code>Player.ControlMode</code> is set to <code>CONTROLMODE_NORMAL</code> (<code>0</code>):<ul> <li>Sets <code>Player.Up</code>, <code>Player.Down</code>, <code>Player.Left</code>, and <code>Player.Right</code> to their equivalent <code>KeyDown</code> values.</li> <li>Sets <code>Player.JumpPress</code> to <code>true</code> if <code>KeyPress.ButtonA</code>, <code>KeyPress.ButtonB</code>, or <code>KeyPress.ButtonC</code> are true; otherwise, it's set to <code>false</code>.</li> <li>Sets <code>Player.JumpHold</code> to <code>true</code> if <code>KeyDown.ButtonA</code>, <code>KeyDown.ButtonB</code>, or <code>KeyDown.ButtonC</code> are true; otherwise, it's set to <code>false</code>.</li> </ul> </li> <li>If <code>Player.ControlMode</code> is set to <code>CONTROLMODE_SIDEKICK</code> (<code>1</code>): Sets <code>Player.Up</code>, <code>Player.Down</code>, <code>Player.Left</code>, <code>Player.Right</code>, <code>Player.JumpPress</code>, and <code>Player.JumpHold</code> based on the sidekick input buffer.</li> </ul>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ProcessPlayerControl/#example","title":"Example","text":"<pre><code>ProcessPlayerControl()\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ResetObjectEntity/","title":"ResetObjectEntity","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ResetObjectEntity/#description","title":"Description","text":"<p>Resets an object in position <code>Slot</code> to the <code>Type</code>, <code>PropertyValue</code>, <code>XPos</code>, and <code>YPos</code> specified.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ResetObjectEntity/#parameters","title":"Parameters","text":"<code>Slot</code> <p>The index of the object to reset.</p> <code>Type</code> <p>The new type of object.</p> <code>PropertyValue</code> <p>The new Property Value of the object.</p> <code>XPos</code> <p>The new position of the object on the horizontal axis in world-space.</p> <code>YPos</code> <p>The new position of the object on the vertical axis in world-space.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ResetObjectEntity/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ResetObjectEntity/#syntax","title":"Syntax","text":"<pre><code>ResetObjectEntity(int Slot, int Type, int PropertyValue, int XPos, int YPos)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Object/ResetObjectEntity/#example","title":"Example","text":"<pre><code>ResetObjectEntity(Object.EntityNo, TypeName[Test Object], 0, Object.XPos, Object.YPos)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/Copy16x16Tile/","title":"Copy16x16Tile","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/Copy16x16Tile/#description","title":"Description","text":"<p>Copies the tileset image data of <code>SrcTile</code> to <code>DstTile</code>.</p> <p>Tip</p> <p>This function is used for animated tiles.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/Copy16x16Tile/#parameters","title":"Parameters","text":"<code>DstTile</code> <p>The tile that will be overwritten.</p> <code>SrcTile</code> <p>The tile that will be copied.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/Copy16x16Tile/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/Copy16x16Tile/#syntax","title":"Syntax","text":"<pre><code>Copy16x16Tile(int DstTile, int SrcTile)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/Copy16x16Tile/#example","title":"Example","text":"<pre><code>Copy16x16Tile(174, 173)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/Get16x16TileInfo/","title":"Get16x16TileInfo","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/Get16x16TileInfo/#description","title":"Description","text":"<p>Gets the value for <code>InfoTile</code> from the tile at <code>TileX</code>, <code>TileY</code> and stores it in <code>Store</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/Get16x16TileInfo/#parameters","title":"Parameters","text":"<code>Store</code> <p>The variable that will store the tile's specified <code>InfoType</code> data.</p> <code>TileX</code> <p>Position of the 16x16 tile in the map on the horizontal axis.</p> <code>TileY</code> <p>Position of the 16x16 tile in the map on the vertical axis.</p> <code>InfoType</code> <p>The ID for the type of info read from the tile. The valid values are:</p> <ul> <li>0 (<code>TILEINFO_INDEX</code>)</li> <li>1 (<code>TILEINFO_DIRECTION</code>)</li> <li>2 (<code>TILEINFO_VISUALPLANE</code>)</li> <li>3 (<code>TILEINFO_SOLIDITYA</code>)</li> <li>4 (<code>TILEINFO_SOLIDITYB</code>)</li> <li>5 (<code>TILEINFO_FLAGSA</code>)</li> <li>6 (<code>TILEINFO_ANGLEA</code>)</li> <li>7 (<code>TILEINFO_FLAGSB</code>)</li> <li>8 (<code>TILEINFO_ANGLEB</code>)</li> </ul>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/Get16x16TileInfo/#return-value","title":"Return Value","text":"<p>Sets <code>store</code> to the chunk ID.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/Get16x16TileInfo/#syntax","title":"Syntax","text":"<pre><code>Get16x16TileInfo(var Store, int TileX, int TileY, int InfoType)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/Get16x16TileInfo/#example","title":"Example","text":"<pre><code>Get16x16TileInfo(Object.Value2, 25, 24, 8)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/GetTileLayerEntry/","title":"GetTileLayerEntry","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/GetTileLayerEntry/#description","title":"Description","text":"<p>Gets the ID of the chunk at <code>ChunkX</code>, <code>ChunkY</code> in tile layer <code>Layer</code> and stores it in <code>Store</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/GetTileLayerEntry/#parameters","title":"Parameters","text":"<code>Store</code> <p>The variable that will store the chunk.</p> <code>Layer</code> <p>The ID of the layer where the chunk comes from. The valid values are:</p> <ul> <li>0 (<code>DEFORM_FG</code>)</li> <li>1 (<code>DEFORM_FG_WATER</code>)</li> <li>2 (<code>DEFORM_BG</code>)</li> <li>3 (<code>DEFORM_BG_WATER</code>)</li> </ul> <code>ChunkX</code> <p>Position of the 128x128 chunk in the map on the horizontal axis.</p> <code>ChunkY</code> <p>Position of the 128x128 chunk in the map on the vertical axis.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/GetTileLayerEntry/#return-value","title":"Return Value","text":"<p>Sets <code>store</code> to the chunk ID.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/GetTileLayerEntry/#syntax","title":"Syntax","text":"<pre><code>GetTileLayerEntry(var Store, int Layer, int ChunkX, int ChunkY)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/GetTileLayerEntry/#example","title":"Example","text":"<pre><code>GetTileLayerEntry(Object.Value2, 0, 24, 96)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/LoadStage/","title":"LoadStage","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/LoadStage/#description","title":"Description","text":"<p>Loads a stage based on <code>Stage.ActiveList</code> and <code>Stage.ListPos</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/LoadStage/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/LoadStage/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/LoadStage/#example","title":"Example","text":"<pre><code>LoadStage()\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/Set16x16TileInfo/","title":"Set16x16TileInfo","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/Set16x16TileInfo/#description","title":"Description","text":"<p>Sets the value for <code>InfoType</code> from the tile at <code>TileX</code>, <code>TileY</code> to <code>Value</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/Set16x16TileInfo/#parameters","title":"Parameters","text":"<code>Value</code> <p>The new value for the tile's specified <code>InfoType</code>.</p> <code>TileX</code> <p>Position of the 16x16 tile in the map on the horizontal axis.</p> <code>TileY</code> <p>Position of the 16x16 tile in the map on the vertical axis.</p> <code>InfoType</code> <p>The ID for the type of info that will be overwritten for the tile. The valid values are:</p> <ul> <li>0 (<code>TILEINFO_INDEX</code>)</li> <li>1 (<code>TILEINFO_DIRECTION</code>)</li> <li>2 (<code>TILEINFO_VISUALPLANE</code>)</li> <li>3 (<code>TILEINFO_SOLIDITYA</code>)</li> <li>4 (<code>TILEINFO_SOLIDITYB</code>)</li> <li>5 (<code>TILEINFO_FLAGSA</code>)</li> <li>6 (<code>TILEINFO_ANGLEA</code>)</li> <li>7 (<code>TILEINFO_FLAGSB</code>)</li> <li>8 (<code>TILEINFO_ANGLEB</code>)</li> </ul>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/Set16x16TileInfo/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/Set16x16TileInfo/#syntax","title":"Syntax","text":"<pre><code>Set16x16TileInfo(int Value, int TileX, int TileY, int InfoType)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/Set16x16TileInfo/#example","title":"Example","text":"<pre><code>Set16x16TileInfo(3, TempValue0, TempValue1, 7)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/SetLayerDeformation/","title":"SetLayerDeformation","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/SetLayerDeformation/#description","title":"Description","text":"<p>Sets the deformation data array of <code>DeformID</code>, based on <code>DeformA</code> and <code>DeformB</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/SetLayerDeformation/#parameters","title":"Parameters","text":"<code>DeformID</code> <p>The ID of the layer to deform, valid values are:</p> <ul> <li>0 (<code>DEFORM_FG</code>)</li> <li>1 (<code>DEFORM_FG_WATER</code>)</li> <li>2 (<code>DEFORM_BG</code>)</li> <li>3 (<code>DEFORM_BG_WATER</code>)</li> </ul> <code>WaveLength</code> <p>Length of the wave.</p> <code>WaveWidth</code> <p>Width of the wave.</p> <code>WaveType</code> <p>Type of wave; 0 will affect the entire layer, 1 will use <code>YPos</code> and <code>WaveSize</code> to determine the area of effect.</p> <code>YPos</code> <p>The offset from where the wave will start.</p> <code>WaveSize</code> <p>The size of the wave.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/SetLayerDeformation/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/SetLayerDeformation/#syntax","title":"Syntax","text":"<pre><code>SetLayerDeformation(int DeformID, int WaveLength, int WaveWidth, int WaveType, int YPos, int WaveSize)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/SetLayerDeformation/#example","title":"Example","text":"<pre><code>SetLayerDeformation(0, 16, 2, 1, 96, 128)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/SetTileLayerEntry/","title":"SetTileLayerEntry","text":"","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/SetTileLayerEntry/#description","title":"Description","text":"<p>Sets the chunk at <code>ChunkX</code>, <code>ChunkY</code> in tile layer <code>Layer</code> to the index of <code>Value</code>.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/SetTileLayerEntry/#parameters","title":"Parameters","text":"<code>Value</code> <p>The index value of the new chunk.</p> <code>Layer</code> <p>The ID of the layer where the chunk comes from. The valid values are:</p> <ul> <li>0 (<code>DEFORM_FG</code>)</li> <li>1 (<code>DEFORM_FG_WATER</code>)</li> <li>2 (<code>DEFORM_BG</code>)</li> <li>3 (<code>DEFORM_BG_WATER</code>)</li> </ul> <code>ChunkX</code> <p>Position of the 128x128 chunk in the map on the horizontal axis.</p> <code>ChunkY</code> <p>Position of the 128x128 chunk in the map on the vertical axis.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/SetTileLayerEntry/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/SetTileLayerEntry/#syntax","title":"Syntax","text":"<pre><code>SetTileLayerEntry(int Value, int Layer, int ChunkX, int ChunkY)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Functions/Stages/SetTileLayerEntry/#example","title":"Example","text":"<pre><code>SetTileLayerEntry(35, 0, 24, 96)\n</code></pre>","tags":["RSDKv3"]},{"location":"RSDKv3/Overview/","title":"RSDKv3 Overview","text":"<p>TODO: this</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Overview/DevMenu/","title":"Dev Menu","text":"<p>The Dev Menu is a debug menu included with RSDKv3, disabled by default. The menu includes several features useful for debugging games in the engine.</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Overview/DevMenu/#enabling","title":"Enabling","text":"BlitRSDKv3 Decompilation <p>The Dev Menu can be enabled by editing the game's <code>GameConfig.bin</code> file to set the default value of the <code>Options.DevMenuFlag</code> global variable to 1 (<code>true</code>).</p> <p>The Dev Menu can be enabled by setting <code>DevMenu</code> to <code>true</code> in the settings.ini file, like so:</p> <pre><code>[Dev]\n; Enable this flag to activate dev menu via the ESC key\nDevMenu=true ; (1)!\n; Enable this flag to activate features used for debugging the engine (may result in slightly slower game speed)\nEngineDebugMode=false\n; Enable this flag to force the engine to load from the scripts folder instead of from bytecode\nTxtScripts=false\n...\n</code></pre> <ol> <li>Make sure that the decomp is not running while editing settings.ini; otherwise, your changes will be reverted upon closing the decomp.</li> </ol>","tags":["RSDKv3"]},{"location":"RSDKv3/Overview/DevMenu/#decomp-debug-controls","title":"Decomp Debug Controls","text":"Key Command Esc Opens the Dev Menu. Backspace While held down, speeds up the game to 8x speed. F12 / Pause (F7 on Mac) Toggles step-over mode. F11 / Ins (F6 on Mac) If in step-over mode, steps over to the next frame. F1 Loads the first scene in the Presentation stage list. F2 Loads the previous scene in the scene list. If pressed in the first scene, it will load the last one. F3 Loads the next scene in the scene list. If pressed in the last scene, it will load the first one. F5 Reloads the current scene. F8 Toggles visualizing active touchscreen hitboxes. F9 Toggles visualizing active hitboxes. F10 Toggles displaying the currently loaded palettes.","tags":["RSDKv3"]},{"location":"RSDKv3/Overview/DevMenu/#menu","title":"Menu","text":"<p>You can open the Dev Menu in Sonic CD by selecting it the pause menu, as well as the Help &amp; Options menu in the mobile version. In the RSDKv3 Decompilation, you can also open it at any time by pressing Esc.</p> <p>TODO: explain each submenu</p>","tags":["RSDKv3"]},{"location":"RSDKv3/Overview/DevMenu/#other-effects","title":"Other Effects","text":"<p>When the Dev Menu is enabled, the global variable <code>Options.DevMenuFlag</code> is set to <code>true</code> upon loading the GameConfig, if such global variable exists.</p>","tags":["RSDKv3"]},{"location":"RSDKv4/","title":"Retro Engine v4","text":"<p>Retro Engine v4, debuting in 2013, is the version of RSDK used for the Sonic 1 and Sonic 2 remasters. TODO: write info about RSDKv4 and anything relating to S1/S2</p>","tags":["RSDKv4"]},{"location":"RSDKv4/#documentation","title":"Documentation","text":"<ul> <li>Overview</li> <li>Events</li> <li>Variables</li> <li>Functions</li> </ul>","tags":["RSDKv4"]},{"location":"RSDKv4/#tools","title":"Tools","text":"<ul> <li>RetroED</li> <li>RSDK Animation Editor</li> </ul>","tags":["RSDKv4"]},{"location":"RSDKv4/#tutorials","title":"Tutorials","text":"<ul> <li>TODO: yo m</li> </ul>","tags":["RSDKv4"]},{"location":"RSDKv4/#other-resources","title":"Other Resources","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Decompilation/","title":"RSDKv4 Decompilation","text":"<p>TODO: everything</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Decompilation/#tutorials","title":"Tutorials","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Events/","title":"RSDKv4 Events","text":"<p>RetroScript v4, the scripting language used by RSDKv4, is comprised of three main events, along with three optional editor events. Events are akin to \"default functions\" of sorts, and are called by the engine every frame to achieve a specific task. To define events, <code>event [name]</code> is used to open one and <code>end event</code> is used to close one.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Events/#objectupdate","title":"ObjectUpdate","text":"<p>Called once every frame (if priority allows) to run a general update of the object, for things like movement and animation processing.</p> Example<pre><code>event ObjectUpdate\n    object.xpos += object.xvel\n    object.ypos += object.yvel\n\n    object.animationTimer++\n    if object.animationTimer &gt;= 8\n        object.frame++\n        if object.frame &gt;= 4\n            object.frame = 0\n        end if\n        object.animationTimer = 0\n    end if\nend event\n</code></pre> <p>Note</p> <p><code>ObjectUpdate</code> is parallel to the <code>ObjectMain</code> sub seen in RSDKv3 and earlier, though here the name was changed to match better.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Events/#objectdraw","title":"ObjectDraw","text":"<p>Called once every frame (if priority allows) to draw the object. Although some objects in Sonic 1 and 2 also have movement or animation processing code in this event, it's strongly recommended to only include drawing code. Draw order is based on the object's <code>object.drawOrder</code> value.</p> Example<pre><code>event ObjectDraw\n    DrawSprite(object.frame)\nend event\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Events/#objectstartup","title":"ObjectStartup","text":"<p>Called once per object type on stage startup. Used to load spritesheets and set up SpriteFrames, apply any starting values needed for the object type, or other initialization code.</p> Example<pre><code>event ObjectStartup\n    LoadSpriteSheet(\"Global/Items.gif\")\n\n    SpriteFrame(-8, -8, 16, 16, 1, 1)\n    SpriteFrame(-8, -8, 16, 16, 1, 18)\n    SpriteFrame(-8, -8, 16, 16, 1, 35)\n    SpriteFrame(-8, -8, 16, 16, 1, 52)\n\n    foreach (TypeName[Test Object], arrayPos0, ALL_ENTITIES)\n        object[arrayPos0].drawOrder = 4\n    next\nend event\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Events/#rsdkedit","title":"RSDKEdit","text":"<p>Called whenever modifying an object's editor variable in an editor. This event can be excluded from your script if the object doesn't have an editor variable.</p> Example<pre><code>event RSDKEdit\n    if editor.returnVariable == true\n        switch editor.variableID\n        case EDIT_VAR_PROPVAL // property value\n            checkResult = object.propertyValue\n            break\n\n        case 0 // alignment\n            checkResult = object.propertyValue\n            break\n        end switch\n    else\n        switch editor.variableID\n        case EDIT_VAR_PROPVAL // property value\n            object.propertyValue = editor.variableValue\n            break\n\n        case 0 // alignment\n            object.propertyValue = editor.variableValue\n            break\n        end switch\n    end if\nend event\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Events/#rsdkdraw","title":"RSDKDraw","text":"<p>Called once every frame to draw the object in an editor.</p> Example<pre><code>event RSDKDraw\n    DrawSprite(0)\n    if editor.showGizmos == true\n        DrawSprite(1)\n    end if\nend event\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Events/#rsdkload","title":"RSDKLoad","text":"<p>Called once per object type when game logic is (re)loaded in an editor. Used to load spritesheets, set up SpriteFrames, and add editor variables and aliases.</p> Example<pre><code>event RSDKLoad\n    LoadSpriteSheet(\"Global/Items.gif\")\n    SpriteFrame(-8, -8, 16, 16, 1, 1)\n    SpriteFrame(-8, -8, 16, 16, 1, 18)\n\n    AddEditorVariable(\"alignment\")\n    SetActiveVariable(\"alignment\")\n    AddEnumVariable(\"Left\", 0)\n    AddEnumVariable(\"Center\", 1)\n    AddEnumVariable(\"Right\", 2)\n\n    SetVariableAlias(ALIAS_VAR_VAL0, \"width\")\nend event\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Variables/","title":"RSDKv4 Variables","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Variables/#script","title":"Script","text":"Variable Description temp0-7 Temporary values used to store values during arithmetic or other similar operations. checkResult A value that some functions set as the resulting value. Can be used with all sorts of arithmetic. arrayPos0-7 Used to store an array of data. global Can be used to use global variables as an array (Ex. global[arrayPos0] = 0). local Can be used to use local variables as an array (Ex. local[arrayPos0] = 0).","tags":["RSDKv4"]},{"location":"RSDKv4/Variables/#object","title":"Object","text":"Variable Description object.entityPos The object's entity slot in a scene's entity list. object.groupID The object's groupType. By default, it is set to an object's type, but can be set to a custom one. (Ex. <code>GROUP_PLAYERS = 0x100</code>) object.type The object's type. (Ex. an object with a type of 0 would be a Blank Object.) object.propertyValue The object's subType. Its purpose generally differs from object to object. object.x/ypos The object's x/ypos in a scene. Position is based in world-space, which in RSDK is 0x10000 (65535), which is 1.0 object.ix/iypos The object's ix/iypos in a scene. iPosition is based in screen-space, which is truncated from x/ypos (1 == 1). object.x/yvel The object's x/yvel on the x and y axis. Velocity is based in world-space. object.speed The object's general speed in world-space. object.state The object's state. Similar to propertyValue, its prupose differs for each object.","tags":["RSDKv4"]},{"location":"RSDKv4/Variables/#stage","title":"Stage","text":"Variable Description stage.state The current processing state of the stage. stage.activeList The active stage list. Ranges from Presentation, Regular, Special, and Bonus Stages. stage.listPos The position of a stage in a stage list. stage.timeEnabled Handles the stage's time. When enabled, the engine will automatically start a timer, and sets the time to <code>stage.milliSeconds/seconds/minutes</code>. stage.milliSeconds The stage's milliSecond count. stage.minutes The stage's minute count. stage.seconds The stage's second count. stage.actNum The number of the current act. (Ex. stage.actNum = 1 -&gt; Act1) stage.pausedEnabled If enabled, this allows the engine to do a Genesis type pause by pressing the Start button. stage.listSize The size of the current stage list. stage.newX/YBoundary1/2 The boundaries for the stage camera. Used to set new camera boundaries during gameplay. stage.curX/YBoundary1/2 The boundaries for the stage camera. The camera will never go past these boundaries. stage.deformationData0/1/2/3 Values used to store stage deformation. 0/1 is for the foreground (0 for above water, 1 for underwater), and 2/3 are for the background (2 for above water, and 3 for underwater). stage.waterLevel The stage's current water level. stage.activeLayer[index] Gets an active layer based on <code>index</code> and is able to be set to another tile layer. (Ex. stage.activeLayer[0] = 5 would set the background layer to the fifth tile layer.) stage.midPoint The stage's mid point. If any active drawing layers come after this, tiles will be able to render on the high layer. stage.playerListPos The position of the selected Player on the player list. stage.debugMode Determines whether Debug Mode is active or not. stage.entityPos The entity last loaded by the stage.","tags":["RSDKv4"]},{"location":"RSDKv4/Variables/#screen","title":"Screen","text":"Variable Description screen.cameraEnabled Determines if the camera is disabled or not. screen.cameraTarget Gets the entity pos of an object and sets the camera to follow it. (Ex. screen.cameraTarget = SLOT_PLAYER1 (0)) screen.cameraStyle How the camera should track its target. screen.cameraX The xpos of the camera in screen-space. screen.cameraY The ypos of the camera in screen-space. screen.drawListSize How many entities are being drawn on screen at once. screen.xcenter The xcenter of the screen. By default, this value is 212. screen.ycenter The ycenter of the screen. By default, this value is 120, but cannot be normally changed. screen.xsize The xsize of the screen. By default, this value is 424. screen.ysize The ysize of the screen. By default, this value is 240, but cannot be normally changed. screen.xoffset The xoffset of the screen, relative to the very beginning of the scene. screen.yoffset The yoffset of the screen, relative to the very beginning of the scene. screen.shakeX If more than 0, this will horizontally shake the screen. The aggression of the shaking will depend on the value set. screen.shakeY If more than 0, this will vertically shake the screen. The aggression of the shaking will depend on the value set. screen.adjustCameraY The amount the camera should vertically adjust.","tags":["RSDKv4"]},{"location":"RSDKv4/Variables/#audio","title":"Audio","text":"Variable Description music.volume The current volume for the music. Not the same as 'engine.bgmVolume', which is combined with this to get the final output volume. music.currentTrack The ID of the music track that's currently playing. music.position The position (by sample) of the currently playing track.","tags":["RSDKv4"]},{"location":"RSDKv4/Variables/#input","title":"Input","text":"Variable Description keyDown/keyPress.[X] General inputs for controllers. <code>keyDown</code> is true if a button/key is held, while <code>keyPress</code> is true if a button/key was pressed on a frame.","tags":["RSDKv4"]},{"location":"RSDKv4/Variables/#menu","title":"Menu","text":"Variable Description menu1/2.selection The current row, as selected by <code>MENU_1</code> and <code>MENU_2</code>.","tags":["RSDKv4"]},{"location":"RSDKv4/Variables/#tile-layer","title":"Tile Layer","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Variables/#3d","title":"3D","text":"Variable Description scene3D.vertexCount The amount of active vertices in each buffer respectively (max of 4096 vertices). scene3D.faceCount The amount of active faces in each buffer respectively (max of 1024 faces). scene3D.projectionX The width of the <code>Scene3D</code> draw buffer. By default, this value is 136. scene3D.projectionY The height of the <code>Scene3D</code> draw buffer. By default, this value is 160. scene3D.fogColor The color of the fog in an RGB format. scene3D.fogStrength The strength of the fog. Fog strength has a max of 255. faceBuffer.a/b/c/d The vertice indices to use to control a face's drawing. faceBuffer.flag The active drawing flag for a face. faceBuffer.color The color to draw the face when drawing with either <code>FACE_FLAG_COLOURED_2D</code> or <code>FACE_FLAG_COLOURED_3D</code>. vertexBuffer.x/y/z/u/v The vertex coordinates for a specified vertex.","tags":["RSDKv4"]},{"location":"RSDKv4/Variables/#engine","title":"Engine","text":"Variable Description saveRAM[index] Capable of saving data to the array of <code>index</code>, using the <code>Read/WriteSaveRAM()</code> functions. engine.state The engine's current processing state. engine.language The active language the engine is using. engine.onlineActive Gets the engine's state with online connectivity. engine.sfxVolume The engine's master sound effect output volume. Ranges from 0-100. engine.bgmVolume The engine's master music volume output. Ranges from 0-100. Combined with 'music.volume' to get the final output volume. engine.trialMode Used in a trial version of a game to handle certain events differently.","tags":["RSDKv4"]},{"location":"RSDKv4/Variables/#extras","title":"Extras","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Variables/#haptics","title":"Haptics","text":"Variable Description engine.hapticsEnabled Determines if haptic effects are enabled or not. Will only have effect is <code>RETRO_USE_HAPTICS</code> if enabled.","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/","title":"RSDKv4 Functions","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/#3d","title":"3D","text":"Function Description Draw3DScene Draws the active 3DScene data to the screen. SetIdentityMatrix Sets the matrix of <code>matID</code> to the identity state. MatrixMultiply Multiplies <code>matrixA</code> by <code>matrixB</code>. MatrixTranslateXYZ Translates <code>matrix</code> to <code>translateX</code>, <code>translateY</code> and <code>translateZ</code>. MatrixScaleXYZ Scales <code>matrix</code> to <code>scaleX</code>, <code>scaleY</code> and <code>scaleZ</code>. MatrixRotate Rotates <code>matrix</code> to <code>angle</code> on the specified axis. MatrixRotateXYZ Rotates <code>matrix</code> to <code>angleX</code>, <code>angleY</code> and <code>angleZ</code>. MatrixInverse Performs an inversion on <code>matrix</code>'s values. TransformVertices Transform all vertices from <code>startIndex</code> to <code>endIndex</code> using <code>matrix</code>.","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/#audio","title":"Audio","text":"Function Description SetMusicTrack Loads a music file in the given track slot with the given loop point. PlayMusic Plays the music currently loaded in the given track slot. StopMusic Stops playing the currently playing music track, if one is playing. PauseMusic Pauses the currently playing music track, if one is playing. ResumeMusic If a track has been paused with PauseMusic(), resumes playing the track. SwapMusicTrack Loads a music file in the given track slot with the given loop point, swapping the currently playing track if it's the one being overwritten. PlaySfx Plays the sound effect in the given slot in the GameConfig or StageConfig, looping it if set to do so. StopSfx Stops all instances of the given sound effect playing. SetSfxAttributes Sets the loop count and panning of the given sound effect to the given values.","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/#drawing","title":"Drawing","text":"Function Description DrawTintRect Draws a tinted rectangle to <code>ixpos</code> and <code>iypos</code> in screen-space. LoadPalette Loads a palette into <code>palBank</code> starting from <code>startPalIndex</code>, with an offset of <code>startIndex</code> and reading all colors through to <code>endIndex</code>. RotatePalette Rotates all colors in <code>palBank</code> from <code>startIndex</code> to <code>endIndex</code>, moving left or right depending on <code>rotRight</code>. SetScreenFade Adds a screen fade effect based on the <code>r</code>, <code>g</code>, <code>b</code> and <code>alpha</code> values. SetActivePalette Sets the active palette to <code>palBank</code> for all vertical screen lines from <code>startLine</code> to <code>endLine</code>. SetPaletteFade Blends palettes <code>srcBankA</code> and <code>srcBankB</code>, from indexes <code>startIndex</code> to <code>endIndex</code>, by <code>blendAmount</code>, and stores the new palette in <code>dstBank</code>. GetPaletteEntry Gets the palette entry in <code>bank</code> at <code>index</code> and stores it in <code>store</code>. SetPaletteEntry Sets the palette entry in <code>bank</code> at <code>index</code> to the value of <code>color</code>. CopyPalette Copies <code>count</code> colors from <code>srcBank</code>, starting from <code>srcIndex</code>, to <code>destBank</code>, starting at <code>destIndex</code>. ClearScreen Clears all pixels on screen with color <code>clearIndex</code> from the active palette. DrawRect Draws a rectangle to <code>ixpos</code> and <code>iypos</code> in screen-space, with a color based on the <code>r</code>, <code>g</code>, <code>b</code>, and <code>alpha</code>. ClearDrawList Removes all entries in drawList <code>layer</code>. AddDrawListEntityRef Adds <code>objectPos</code> to drawList <code>layer</code>. GetDrawListEntityRef Gets <code>objectPos</code> in drawList <code>layer</code> and stores it in <code>store</code>. SetDrawListEntityRef Sets <code>objectPos</code> in drawList <code>layer</code> to <code>value</code>.","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/#graphics","title":"Graphics","text":"Function Description LoadSpriteSheet Loads a spritesheet and assigns the ID to <code>object.spritesheet</code>. RemoveSpriteSheet Removes the given spritesheet from memory, if it is already loaded. DrawSprite Draws <code>frame</code> at the object's X and Y position. DrawSpriteXY Draws <code>frame</code> at a specified X and Y position. DrawSpriteScreenXY Draws <code>frame</code> at a specified X and Y position in screen-space. SpriteFrame Adds a SpriteFrame with the specified values. EditFrame Edits the pivots, width, height, and sheet coordinates of <code>frame</code>. DrawSpriteFX Draws <code>frame</code> at a specified X and Y position with visual effects. DrawSpriteScreenFX Draws <code>frame</code> at a specified X and Y position in screen-space with visual effects. LoadAnimation Loads an animation file for the current object type. ProcessAnimation Processes the current object's animation, based on the animation file loaded prior via LoadAnimation(). DrawObjectAnimation Draws an object's sprites from the animation file loaded prior via LoadAnimation().","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/#math","title":"Math","text":"Function Description Rand Gets a random value from 0 to <code>max</code> (not inclusive) and stores it in <code>store</code>. Sin Gets the value from the <code>sin512</code> lookup table based on <code>angle</code> and sets it in <code>store</code>. Cos Gets the value from the <code>cos512</code> lookup table based on <code>angle</code> and sets it in <code>store</code>. Sin256 Gets the value from the <code>sin256</code> lookup table based on <code>angle</code> and sets it in <code>store</code>. Cos256 Gets the value from the <code>cos256</code> lookup table based on <code>angle</code> and sets it in <code>store</code>. ATan2 Performs an arctan operation using <code>x</code> and <code>y</code>, storing the result in <code>store</code>. Interpolate Linearly interpolates <code>x</code> and <code>y</code> by <code>percent</code> and stores the result in <code>store</code>. InterpolateXY Linearly interpolates two points at once and stores the result in <code>storeX</code> and <code>storeY</code> respectively. Not Performs a NOT operation on <code>value</code>. GetBit Gets the binary bit at index <code>bitPos</code> from <code>value</code> and stores it in <code>store</code>. SetBit Sets index <code>bitPos</code> of <code>value</code> to <code>bit</code> and updates <code>value</code> accordingly. GetTableValue Gets the value at <code>index</code> from <code>table</code> and stores it in <code>store</code>. SetTableValue Sets the value at <code>index</code> from <code>table</code> to <code>value</code>. Abs Gets the absolute number of <code>value</code>.","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/#object","title":"Object","text":"Function Description ResetObjectEntity Resets an object in position <code>slot</code> with the <code>type</code>, <code>propertyValue</code>, <code>xpos</code>, and <code>ypos</code> specified. BoxCollisionTest Checks for collision of an object with another, using the hitbox values passed. CreateTempObject Creates a temporary object specified by <code>type</code>, <code>propertyValue</code>, <code>xpos</code> and <code>ypos</code> near the end of the object list. ProcessObjectMovement Handles tile collision of an object/player. ProcessObjectControl Handles object input variables. ObjectTileCollision Tries to collide with the foreground layer based on the position of <code>object.ixpos</code> + <code>xOffset</code>, <code>object.iypos</code> + <code>yOffset</code>. ObjectTileGrip Tries to collide with the foreground layer based on the position of <code>object.ixpos</code> + <code>xOffset</code>, <code>object.iypos</code> + <code>yOffset</code>. SetObjectRange Changes internal bounds, affecting all objects. GetObjectValue Gets <code>object.valueXX</code> of the object in <code>slot</code> corresponding to <code>valueID</code> and stores it in <code>store</code>. SetObjectValue Sets <code>object.valueXX</code> of the object in <code>slot</code> corresponding to <code>valueID</code> to <code>value</code>. CopyObject Copies <code>count</code> objects starting from <code>srcSlot</code> and pastes them to the object slots starting from <code>destSlot</code>.","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/#stages","title":"Stages","text":"Function Description LoadStage Loads a stage based on <code>stage.activeList</code> and <code>stage.listPos</code>. SetLayerDeformation Sets the deformation data array of <code>deformID</code>, based on <code>deformA</code> and <code>deformB</code>. GetTileLayerEntry Gets the ID of the chunk at <code>chunkX</code>, <code>chunkY</code> on tile layer <code>layer</code> and stores it in <code>store</code>. SetTileLayerEntry Sets the chunk at <code>chunkX</code>, <code>chunkY</code> in tile layer <code>layer</code> to the index of <code>value</code>. Get16x16TileInfo Gets the value for <code>infoType</code> from the tile at <code>tileX</code>, <code>tileY</code> and stores it in <code>store</code>. Set16x16TileInfo Sets the value for <code>infoType</code> from the tile at <code>tileX</code>, <code>tileY</code> to <code>value</code>. Copy16x16Tile Copies the tileset image data of <code>srcTile</code> to <code>dstTile</code>. CheckCurrentStageFolder Reads the name of the current stage's folder.","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/#miscellaneous","title":"Miscellaneous","text":"Function Description CallNativeFunction Sends a callback to the engine to run a native function. CheckTouchRect Checks if there's a touch input between the given coordinates. SetupMenu Sets up <code>menu</code> with <code>rowCount</code> rows, <code>selectionCount</code> active selections and aligning set to <code>alignment</code>. AddMenuEntry Adds an entry to <code>menu</code> with the contents of <code>text</code>. EditMenuEntry Edits an entry of <code>menu</code> with the contents of <code>text</code> in <code>rowID</code>. DrawMenu Draws <code>menu</code> at <code>xpos</code> and <code>ypos</code> relative to the screen. GetTextInfo Gets the data of <code>type</code> from <code>menu</code> using <code>index</code> and stores it in <code>store</code>. GetVersionNumber Adds a text entry to <code>menu</code> with the engine's version as the text. LoadTextFile Loads <code>menu</code> based on the text file loaded from <code>filePath</code>. Print Prints a message or integer to the console. ReadSaveRAM Reads the contents of the save file on disk into SaveRAM. WriteSaveRAM Writes the contents of SaveRAM to the save file on disk.","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/#deprecated","title":"Deprecated","text":"Function Description LoadTextFont Loads a bitmap font from <code>filePath</code> for use with text menus. DrawText Draws the contents of <code>menu</code>.","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/Draw3DScene/","title":"Draw3DScene","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/Draw3DScene/#description","title":"Description","text":"<p>Draws the active 3DScene data to the screen.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/Draw3DScene/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/Draw3DScene/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/Draw3DScene/#example","title":"Example","text":"<pre><code>Draw3DScene()\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixInverse/","title":"MatrixInverse","text":"<p>Note</p> <p>This function does not exist in REV00.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixInverse/#description","title":"Description","text":"<p>Performs an inversion on <code>matrix</code>'s values.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixInverse/#parameters","title":"Parameters","text":"<code>matrix</code> <p>The matrix to invert, valid matrices are <code>MAT_WORLD</code>, <code>MAT_VIEW</code>, and <code>MAT_TEMP</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixInverse/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixInverse/#syntax","title":"Syntax","text":"<pre><code>MatrixInverse(int matrix)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixInverse/#example","title":"Example","text":"<pre><code>MatrixInverse(MAT_WORLD)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixMultiply/","title":"MatrixMultiply","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixMultiply/#description","title":"Description","text":"<p>Multiplies <code>matrixA</code> by <code>matrixB</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixMultiply/#parameters","title":"Parameters","text":"<code>matrixA</code> <p>First factor of the multiplication.</p> <code>matrixB</code> <p>Second factor of the multiplication.</p> <p>Valid matrices for both factors are <code>MAT_WORLD</code>, <code>MAT_VIEW</code>, and <code>MAT_TEMP</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixMultiply/#return-value","title":"Return Value","text":"<p>Updates <code>matrixA</code> with the result.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixMultiply/#syntax","title":"Syntax","text":"<pre><code>MatrixMultiply(int matrixA, int matrixB)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixMultiply/#example","title":"Example","text":"<pre><code>MatrixMultiply(MAT_WORLD, MAT_TEMP)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixRotate/","title":"MatrixRotate X/Y/Z","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixRotate/#description","title":"Description","text":"<p>Rotates <code>matrix</code> to <code>angle</code> on the specified axis.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixRotate/#parameters","title":"Parameters","text":"<code>matrix</code> <p>The selected matrix for rotation, valid Matrices are <code>MAT_WORLD</code>, <code>MAT_VIEW</code>, and <code>MAT_TEMP</code>.</p> <code>angle</code> <p>Angle of the rotation. Values are 512-based.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixRotate/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixRotate/#syntax","title":"Syntax","text":"<p><pre><code>MatrixRotateX(mat matrix, int angle)\n</code></pre> <pre><code>MatrixRotateY(mat matrix, int angle)\n</code></pre> <pre><code>MatrixRotateZ(mat matrix, int angle)\n</code></pre></p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixRotate/#examples","title":"Examples","text":"<p><pre><code>MatrixRotateX(MAT_WORLD, 43)\n</code></pre> <pre><code>MatrixRotateY(MAT_VIEW,  76)\n</code></pre> <pre><code>MatrixRotateZ(MAT_TEMP,  22)\n</code></pre></p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixRotateXYZ/","title":"MatrixRotateXYZ","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixRotateXYZ/#description","title":"Description","text":"<p>Rotates <code>matrix</code> to <code>angleX</code>, <code>angleY</code> and <code>angleZ</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixRotateXYZ/#parameters","title":"Parameters","text":"<code>matrix</code> <p>The selected matrix for rotation, valid Matrices are <code>MAT_WORLD</code>, <code>MAT_VIEW</code>, and <code>MAT_TEMP</code>.</p> <code>angleX</code>, <code>angleY</code>, <code>angleZ</code> <p>Angle of the rotation. Values are 512-based.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixRotateXYZ/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixRotateXYZ/#syntax","title":"Syntax","text":"<pre><code>MatrixRotateXYZ(mat matrix, int angleX, int angleY, int angleZ)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixRotateXYZ/#example","title":"Example","text":"<pre><code>MatrixRotateXYZ(MAT_WORLD, 43, 85, 29)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixScaleXYZ/","title":"MatrixScaleXYZ","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixScaleXYZ/#description","title":"Description","text":"<p>Scales <code>matrix</code> to <code>scaleX</code>, <code>scaleY</code> and <code>scaleZ</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixScaleXYZ/#parameters","title":"Parameters","text":"<code>matrix</code> <p>The selected matrix for scalling, valid Matrices are <code>MAT_WORLD</code>, <code>MAT_VIEW</code>, and <code>MAT_TEMP</code>.</p> <code>scaleX</code>, <code>scaleY</code>, <code>scaleZ</code> <p>Scale value for the matrix, all shifted 8 bits (0x100 = 1.0)</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixScaleXYZ/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixScaleXYZ/#syntax","title":"Syntax","text":"<pre><code>MatrixScaleXYZ(mat matrix, int scaleX, int scaleY, int scaleZ)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixScaleXYZ/#example","title":"Example","text":"<pre><code>MatrixScaleXYZ(MAT_VIEW, 0x200, 0x1A0, 0x180)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixTranslateXYZ/","title":"MatrixTranslateXYZ","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixTranslateXYZ/#description","title":"Description","text":"<p>Translates <code>matrix</code> to <code>translateX</code>, <code>translateY</code> and <code>translateZ</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixTranslateXYZ/#parameters","title":"Parameters","text":"<code>matrix</code> <p>The selected matrix to translate, valid Matrices are <code>MAT_WORLD</code>, <code>MAT_VIEW</code>, and <code>MAT_TEMP</code>.</p> <code>translateX</code>, <code>translateY</code>, <code>translateZ</code> <p>Translate value for the matrix, all shifted 8 bits (0x100 = 1.0)</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixTranslateXYZ/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixTranslateXYZ/#syntax","title":"Syntax","text":"<pre><code>MatrixTranslateXYZ(mat matrix, int translateX, int translateY, int translateZ)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/MatrixTranslateXYZ/#example","title":"Example","text":"<pre><code>MatrixTranslateXYZ(MAT_WORLD, -512, 720, temp0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/SetIdentityMatrix/","title":"SetIdentityMatrix","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/SetIdentityMatrix/#description","title":"Description","text":"<p>Sets the matrix of <code>matID</code> to the identity state.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/SetIdentityMatrix/#parameters","title":"Parameters","text":"<code>matID</code> <p>The matrix to set the identity. Valid matrices are <code>MAT_WORLD</code>, <code>MAT_VIEW</code>, and <code>MAT_TEMP</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/SetIdentityMatrix/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/SetIdentityMatrix/#syntax","title":"Syntax","text":"<pre><code>SetIdentityMatrix(int matID)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/SetIdentityMatrix/#example","title":"Example","text":"<pre><code>SetIdentityMatrix(MAT_WORLD)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/TransformVertices/","title":"TransformVertices","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/TransformVertices/#description","title":"Description","text":"<p>Transform all vertices from <code>startIndex</code> to <code>endIndex</code> using <code>matrix</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/TransformVertices/#parameters","title":"Parameters","text":"<code>matrix</code> <p>The matrix used to transform the vertices. Valid matrices are <code>MAT_WORLD</code>, <code>MAT_VIEW</code>, and <code>MAT_TEMP</code>.</p> <code>startIndex</code> <p>The start of the range of tranforming vertices.</p> <code>endIndex</code> <p>The end of the range of tranforming vertices.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/TransformVertices/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/TransformVertices/#syntax","title":"Syntax","text":"<pre><code>TransformVertices(mat matrix, int startIndex, int endIndex)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/3D/TransformVertices/#example","title":"Example","text":"<pre><code>TransformVertices(MAT_VIEW, 0xFFE, 0x1000)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/PauseMusic/","title":"PauseMusic","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/PauseMusic/#description","title":"Description","text":"<p>Pauses the currently playing music track, if one is playing. The track can be resumed with ResumeMusic().</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/PauseMusic/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/PauseMusic/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/PauseMusic/#example","title":"Example","text":"<pre><code>PauseMusic()\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/PlayMusic/","title":"PlayMusic","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/PlayMusic/#description","title":"Description","text":"<p>Plays the music currently loaded in the given track slot.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/PlayMusic/#parameters","title":"Parameters","text":"<code>trackID</code> <p>The trackList slot the music is loaded in.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/PlayMusic/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/PlayMusic/#syntax","title":"Syntax","text":"<pre><code>PlayMusic(int trackID)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/PlayMusic/#example","title":"Example","text":"<pre><code>PlayMusic(0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/PlaySfx/","title":"PlaySfx","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/PlaySfx/#description","title":"Description","text":"<p>Plays the sound effect in the given slot in the GameConfig or StageConfig, looping it if set to do so.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/PlaySfx/#parameters","title":"Parameters","text":"<code>sfx</code> <p>The slot of the sound effect. It's recommended to the <code>SfxName</code> alias for this.</p> <code>loop</code> <p>Determines whether or not the sound effect should loop.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/PlaySfx/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/PlaySfx/#syntax","title":"Syntax","text":"<pre><code>PlaySfx(int sfx, bool loop)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/PlaySfx/#example","title":"Example","text":"<pre><code>PlaySfx(SfxName[Test], false)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/ResumeMusic/","title":"ResumeMusic","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/ResumeMusic/#description","title":"Description","text":"<p>If a track has been paused with PauseMusic(), resumes playing the track.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/ResumeMusic/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/ResumeMusic/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/ResumeMusic/#example","title":"Example","text":"<pre><code>ResumeMusic()\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/SetMusicTrack/","title":"SetMusicTrack","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/SetMusicTrack/#description","title":"Description","text":"<p>Loads a music file in the given track slot with the given loop point.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/SetMusicTrack/#parameters","title":"Parameters","text":"<code>path</code> <p>The file path to load the music file from, relative to <code>Data/Music/</code>. The music file must be in OGG format.</p> <code>trackID</code> <p>The trackList slot to load the music in.</p> <code>loopPoint</code> <p>The track's loop point, in samples. <code>0</code> will disable looping, <code>1</code> will loop from the beginning of the track, and anything else is the sample to loop from.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/SetMusicTrack/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/SetMusicTrack/#syntax","title":"Syntax","text":"<pre><code>SetMusicTrack(string path, int trackID, int loopPoint)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/SetMusicTrack/#example","title":"Example","text":"<pre><code>SetMusicTrack(\"Test.ogg\", 0, 1)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/SetSfxAttributes/","title":"SetSfxAttributes","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/SetSfxAttributes/#description","title":"Description","text":"<p>Sets the loop count and panning of the given sound effect to the given values.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/SetSfxAttributes/#parameters","title":"Parameters","text":"<code>sfx</code> <p>The slot of the sound effect to set the values for. It's recommended to the <code>SfxName</code> alias for this.</p> <code>loopCount</code> <p>The number of times the sound effect should loop, if it's set to play on loop. Setting this to -1 will leave the loop count unchanged.</p> <code>panning</code> <p>The panning of the sound effect. The minimum and maximum values are -100 and 100 respectively, with 0 being balanced.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/SetSfxAttributes/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/SetSfxAttributes/#syntax","title":"Syntax","text":"<pre><code>SetSfxAttributes(int sfx, int loopCount, int panning)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/SetSfxAttributes/#example","title":"Example","text":"<pre><code>SetSfxAttributes(SfxName[Test], 5, -50)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/StopMusic/","title":"StopMusic","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/StopMusic/#description","title":"Description","text":"<p>Stops playing the currently playing music track, if one is playing.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/StopMusic/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/StopMusic/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/StopMusic/#example","title":"Example","text":"<pre><code>StopMusic()\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/StopSfx/","title":"StopSfx","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/StopSfx/#description","title":"Description","text":"<p>Stops all instances of the given sound effect playing.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/StopSfx/#parameters","title":"Parameters","text":"<code>sfx</code> <p>The slot of the sound effect. It's recommended to the <code>SfxName</code> alias for this.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/StopSfx/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/StopSfx/#syntax","title":"Syntax","text":"<pre><code>StopSfx(int sfx)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/StopSfx/#example","title":"Example","text":"<pre><code>StopSfx(SfxName[Test])\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/SwapMusicTrack/","title":"SwapMusicTrack","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/SwapMusicTrack/#description","title":"Description","text":"<p>Loads a music file in the given track slot with the given loop point. If the track slot that's currently playing is the one that's been overwritten, the new song will automatically play at a position based on the given ratio of the current track's position.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/SwapMusicTrack/#parameters","title":"Parameters","text":"<code>path</code> <p>The file path to load the music file from, relative to <code>Data/Music/</code>. The music file must be in OGG format.</p> <code>trackID</code> <p>The trackList slot to load the music in.</p> <code>loopPoint</code> <p>The track's loop point, in samples. 0 will disable looping, 1 will loop from the beginning of the track, and anything else is the sample to loop from.</p> <code>ratio</code> <p>The ratio to base setting the position on if the track automatically plays as described above. This uses a 10000-based value, meaning 10000 = 1x music speed, 5000 = 0.5x music speed, etc.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/SwapMusicTrack/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/SwapMusicTrack/#syntax","title":"Syntax","text":"<pre><code>SwapMusicTrack(string path, int trackID, int loopPoint, int ratio)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Audio/SwapMusicTrack/#example","title":"Example","text":"<pre><code>SwapMusicTrack(\"Test2xSpeed.ogg\", 0, 1, 20000)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Deprecated/DrawText/","title":"DrawText","text":"<p>Deprecated</p> <p>This function was removed from RSDKv4 in REV02.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Deprecated/DrawText/#description","title":"Description","text":"<p>Draws the contents of <code>menu</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Deprecated/DrawText/#parameters","title":"Parameters","text":"<code>menu</code> <p>The menu from where to read the text. <code>MENU_1</code> or <code>MENU_2</code> are valid.</p> <code>xpos</code> <p>Position of the text on the horizontal axis.</p> <code>ypos</code> <p>Position of the text on the vertical axis.</p> <code>scale</code> <p>Scale of the text.</p> <code>spacing</code> <p>Space between each letter.</p> <code>rowStart</code> <p>The starting index from where to read.</p> <code>rowCount</code> <p>The amount of rows to draw.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Deprecated/DrawText/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Deprecated/DrawText/#syntax","title":"Syntax","text":"<pre><code>DrawText(int menu, int xpos, int ypos, int scale, int spacing, int rowStart, int rowCount)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Deprecated/DrawText/#example","title":"Example","text":"<pre><code>DrawText(MENU_1, temp0, temp1, 192, 0, 0, 1)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Deprecated/LoadTextFont/","title":"LoadTextFont","text":"<p>Deprecated</p> <p>This function was removed from RSDKv4 in REV02.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Deprecated/LoadTextFont/#description","title":"Description","text":"<p>Loads a bitmap font from <code>filePath</code> for use with text menus.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Deprecated/LoadTextFont/#parameters","title":"Parameters","text":"<code>filePath</code> <p>The path to the font.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Deprecated/LoadTextFont/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Deprecated/LoadTextFont/#syntax","title":"Syntax","text":"<pre><code>LoadTextFont(string filePath)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Deprecated/LoadTextFont/#example","title":"Example","text":"<pre><code>LoadTextFont(\"Data/Game/SystemText.gif\")\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/AddDrawListEntityRef/","title":"AddDrawListEntityRef","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/AddDrawListEntityRef/#description","title":"Description","text":"<p>Adds <code>objectPos</code> to drawList <code>layer</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/AddDrawListEntityRef/#parameters","title":"Parameters","text":"<code>layer</code> <p>Layer of the drawList to add the reference. Indices 0-6 are valid, as well as 7 in RSDKv5U.</p> <code>objectPos</code> <p>The position of the object to add.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/AddDrawListEntityRef/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/AddDrawListEntityRef/#syntax","title":"Syntax","text":"<pre><code>AddDrawListEntityRef(int layer, int objectPos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/AddDrawListEntityRef/#example","title":"Example","text":"<pre><code>AddDrawListEntityRef(4, object.entityPos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/ClearDrawList/","title":"ClearDrawList","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/ClearDrawList/#description","title":"Description","text":"<p>Removes all entries in drawList <code>layer</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/ClearDrawList/#parameters","title":"Parameters","text":"<code>layer</code> <p>Layer of the drawList to clean.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/ClearDrawList/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/ClearDrawList/#syntax","title":"Syntax","text":"<pre><code>ClearDrawList(int layer)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/ClearDrawList/#example","title":"Example","text":"<pre><code>ClearDrawList(3)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/ClearScreen/","title":"ClearScreen","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/ClearScreen/#description","title":"Description","text":"<p>Clears all pixels on screen with color <code>clearIndex</code> from the active palette.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/ClearScreen/#parameters","title":"Parameters","text":"<code>clearIndex</code> <p>The index of the color in the active palette that will override the pixels on the screen.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/ClearScreen/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/ClearScreen/#syntax","title":"Syntax","text":"<pre><code>ClearScreen(int clearIndex)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/ClearScreen/#example","title":"Example","text":"<pre><code>ClearScreen(5)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/CopyPalette/","title":"CopyPalette","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/CopyPalette/#description","title":"Description","text":"<p>Copies <code>count</code> colors from <code>srcBank</code>, starting from <code>srcIndex</code>, to <code>destBank</code>, starting at <code>destIndex</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/CopyPalette/#parameters","title":"Parameters","text":"<code>srcBank</code> <p>The palette bank to copy. Valid range: 0-7.</p> <code>srcIndex</code> <p>The color index from where to start copying. Valid range: 0-255.</p> <code>destBank</code> <p>The palette bank to paste. Valid range: 0-7.</p> <code>destIndex</code> <p>The color index from where to start pasting. Valid range: 0-255.</p> <code>count</code> <p>The amount of colors to copy from <code>srcIndex</code> to <code>destIndex</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/CopyPalette/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/CopyPalette/#syntax","title":"Syntax","text":"<pre><code>CopyPalette(int srcBank, int srcIndex, int destBank, int destIndex, int count)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/CopyPalette/#example","title":"Example","text":"<pre><code>CopyPalette(1, 1, 0, 1, 4)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/DrawRect/","title":"DrawRect","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/DrawRect/#description","title":"Description","text":"<p>Draws a rectangle to <code>ixpos</code> and <code>iypos</code> in screen-space, with a color based on the <code>r</code>, <code>g</code>, <code>b</code>, and <code>alpha</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/DrawRect/#parameters","title":"Parameters","text":"<code>ixpos</code> <p>The position of the rectangle on the horizontal axis in screen-space.</p> <code>iypos</code> <p>The position of the rectangle on the vertical axis in screen-space.</p> <code>width</code> <p>The width of the rectangle.</p> <code>height</code> <p>The height of the rectangle.</p> <code>r</code> <p>A value range of 0-255 for the color red.</p> <code>g</code> <p>A value range of 0-255 for the color green.</p> <code>b</code> <p>A value range of 0-255 for the color blue.</p> <code>alpha</code> <p>A value range of 0-255 for transparency, 255 being no transparency.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/DrawRect/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/DrawRect/#syntax","title":"Syntax","text":"<pre><code>DrawRect(int ixpos, int iypos, int width, int height, int r, int g, int b, int alpha)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/DrawRect/#example","title":"Example","text":"<pre><code>DrawRect(30, 220, 60, 20, 255, 128, 128, 255)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/DrawTintRect/","title":"DrawTintRect","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/DrawTintRect/#description","title":"Description","text":"<p>Draws a tinted rectangle to <code>ixpos</code> and <code>iypos</code> in screen-space.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/DrawTintRect/#parameters","title":"Parameters","text":"<code>ixpos</code> <p>The position of the rectangle on the horizontal axis in screen-space.</p> <code>iypos</code> <p>The position of the rectangle on the vertical axis in screen-space.</p> <code>width</code> <p>The width of the rectangle.</p> <code>height</code> <p>The height of the rectangle.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/DrawTintRect/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/DrawTintRect/#syntax","title":"Syntax","text":"<pre><code>DrawTintRect(int ixpos, int iypos, int width, int height)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/DrawTintRect/#example","title":"Example","text":"<pre><code>DrawTintRect(30, 220, 60, 20)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/GetDrawListEntityRef/","title":"GetDrawListEntityRef","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/GetDrawListEntityRef/#description","title":"Description","text":"<p>Gets <code>objectPos</code> in drawList <code>layer</code> and stores it in <code>store</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/GetDrawListEntityRef/#parameters","title":"Parameters","text":"<code>store</code> <p>The variable where <code>objectPos</code> will be stored.</p> <code>layer</code> <p>Layer of the drawList to add the reference. Indices 0-6 are valid, as well as 7 in RSDKv5U.</p> <code>objectPos</code> <p>The position of the object to add.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/GetDrawListEntityRef/#return-value","title":"Return Value","text":"<p>Sets <code>store</code> to the result.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/GetDrawListEntityRef/#syntax","title":"Syntax","text":"<pre><code>GetDrawListEntityRef(var store, int layer, int objectPos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/GetDrawListEntityRef/#example","title":"Example","text":"<pre><code>GetDrawListEntityRef(object.value0, 4, object.entityPos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/GetPaletteEntry/","title":"GetPaletteEntry","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/GetPaletteEntry/#description","title":"Description","text":"<p>Gets the palette entry in <code>bank</code> at <code>index</code> and stores it in <code>store</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/GetPaletteEntry/#parameters","title":"Parameters","text":"<code>bank</code> <p>Palette bank from where to get the entry, valid value range: 0-7.</p> <code>index</code> <p>Index of the entry to copy, valid value range: 0-255.</p> <code>store</code> <p>Variable to store the copied palette.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/GetPaletteEntry/#return-value","title":"Return Value","text":"<p>Sets <code>store</code> to the retrieved color.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/GetPaletteEntry/#syntax","title":"Syntax","text":"<pre><code>GetPaletteEntry(int bank, int index, var store)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/GetPaletteEntry/#example","title":"Example","text":"<pre><code>GetPaletteEntry(3, 131, temp6)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/LoadPalette/","title":"LoadPalette","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/LoadPalette/#description","title":"Description","text":"<p>Loads a palette into <code>palBank</code> starting from <code>startPalIndex</code>, with an offset of <code>startIndex</code> and reading all colors through to <code>endIndex</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/LoadPalette/#parameters","title":"Parameters","text":"<code>path</code> <p>The path to the palette file, relative to <code>Data/Palettes/</code>.</p> <code>palBank</code> <p>The ID of the palette bank for the palette to load into. Indices 0-7 are valid.</p> <code>startPalIndex</code> <p>The starting index to load colors from in the loaded palette file.</p> <code>startIndex</code> <p>The starting index of the palette bank from which the loaded palette will overwrite.</p> <code>endIndex</code> <p>The ending index of the palette bank from which the loaded palette will overwrite.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/LoadPalette/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/LoadPalette/#syntax","title":"Syntax","text":"<pre><code>LoadPalette(string path, int palBank, int startPalIndex, int startIndex, int endIndex)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/LoadPalette/#example","title":"Example","text":"<pre><code>LoadPalette(\"MasterPalette.act\", 2, 16, 24, 32)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/RotatePalette/","title":"RotatePalette","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/RotatePalette/#description","title":"Description","text":"<p>Rotates all colors in <code>palBank</code> from <code>startIndex</code> to <code>endIndex</code>, moving left or right depending on <code>rotRight</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/RotatePalette/#parameters","title":"Parameters","text":"<code>palBank</code> <p>The ID of the palette bank for the palette to rotate. Indices 0-7 are valid.</p> <code>startIndex</code> <p>The starting index of the palette bank for the rotation.</p> <code>endIndex</code> <p>The ending index of the palette bank for the rotation.</p> <code>rotRight</code> <p>Rotates right if <code>true</code>; otherwise, rotates left.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/RotatePalette/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/RotatePalette/#syntax","title":"Syntax","text":"<pre><code>RotatePalette(int palBank, int startIndex, int endIndex, bool rotRight)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/RotatePalette/#example","title":"Example","text":"<pre><code>RotatePalette(2, 16, 24, 1)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetActivePalette/","title":"SetActivePalette","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetActivePalette/#description","title":"Description","text":"<p>Sets the active palette to <code>palBank</code> for all vertical screen lines from <code>startLine</code> to <code>endLine</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetActivePalette/#parameters","title":"Parameters","text":"<code>palBank</code> <p>The ID of the new active palette. Indices 0-7 are valid.</p> <code>startLine</code> <p>The starting vertical screen-line for the new active palette.</p> <code>endLine</code> <p>The ending vertical screen-line for the new active palette.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetActivePalette/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetActivePalette/#syntax","title":"Syntax","text":"<pre><code>SetActivePalette(int palBank, int startLine, int endLine)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetActivePalette/#example","title":"Example","text":"<pre><code>SetActivePalette(0, 76, screen.ysize)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetDrawListEntityRef/","title":"SetDrawListEntityRef","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetDrawListEntityRef/#setdrawlistentityref","title":"SetDrawListEntityRef","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetDrawListEntityRef/#description","title":"Description","text":"<p>Sets <code>objectPos</code> in drawList <code>layer</code> to <code>value</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetDrawListEntityRef/#parameters","title":"Parameters","text":"<code>value</code> <p>The new value for <code>objectPos</code>.</p> <code>layer</code> <p>The layer of the drawList to add the reference. Indices 0-6 are valid, as well as 7 in RSDKv5U.</p> <code>objectPos</code> <p>The position of the object to add.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetDrawListEntityRef/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetDrawListEntityRef/#syntax","title":"Syntax","text":"<pre><code>SetDrawListEntityRef(int value, int layer, int objectPos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetDrawListEntityRef/#example","title":"Example","text":"<pre><code>SetDrawListEntityRef(object.value0, 4, object.entityPos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetPaletteEntry/","title":"SetPaletteEntry","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetPaletteEntry/#description","title":"Description","text":"<p>Sets the palette entry in <code>bank</code> at <code>index</code> to the value of <code>color</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetPaletteEntry/#parameters","title":"Parameters","text":"<code>bank</code> <p>Palette bank from where to get the entry. Valid range: 0-7.</p> <code>index</code> <p>Index of the entry to place the new color. Valid range: 0-255.</p> <code>color</code> <p>Color value, the format of the color being 0xRRGGBB.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetPaletteEntry/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetPaletteEntry/#syntax","title":"Syntax","text":"<pre><code>SetPaletteEntry(int bank, int index, int color)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetPaletteEntry/#example","title":"Example","text":"<pre><code>SetPaletteEntry(0, 134, 0xFF607F)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetPaletteFade/","title":"SetPaletteFade","text":"<p>Note</p> <p>This function's behavior was changed in REV01; in REV00, it worked the same as its equivalent function in RSDKv3.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetPaletteFade/#description","title":"Description","text":"<p>Blends palettes <code>srcBankA</code> and <code>srcBankB</code>, from indexes <code>startIndex</code> to <code>endIndex</code>, by <code>blendAmount</code>, and stores the new palette in <code>dstBank</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetPaletteFade/#parameters","title":"Parameters","text":"<code>dstBank</code> <p>The ID of the palette for store. Indices 0-7 are valid.</p> <code>srcBankA</code> <p>The first palette to blend.</p> <code>srcBankB</code> <p>The second palette to blend.</p> <code>blendAmount</code> <p>A value range of 0-255 for blending.</p> <code>startIndex</code> <p>The starting index of the palette bank to blend.</p> <code>endIndex</code> <p>The ending index of the palette bank to blend.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetPaletteFade/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetPaletteFade/#syntax","title":"Syntax","text":"<pre><code>SetPaletteFade(int dstBank, int srcBankA, int srcBankB, int blendAmount, int startIndex, int endIndex)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetPaletteFade/#example","title":"Example","text":"<pre><code>SetPaletteFade(5, 3, 4, 48, 0, 4)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetScreenFade/","title":"SetScreenFade","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetScreenFade/#description","title":"Description","text":"<p>Adds a screen fade effect based on the <code>r</code>, <code>g</code>, <code>b</code> and <code>alpha</code> values.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetScreenFade/#parameters","title":"Parameters","text":"<code>r</code> <p>A value range of 0-255 for the color red.</p> <code>g</code> <p>A value range of 0-255 for the color green.</p> <code>b</code> <p>A value range of 0-255 for the color blue.</p> <code>alpha</code> <p>A value range of 0-255 for transparency, 255 being no transparency.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetScreenFade/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetScreenFade/#syntax","title":"Syntax","text":"<pre><code>SetScreenFade(int r, int g, int b, int alpha)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Drawing/SetScreenFade/#example","title":"Example","text":"<pre><code>SetScreenFade(255, 255, 255, object.alpha)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawObjectAnimation/","title":"DrawObjectAnimation","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawObjectAnimation/#description","title":"Description","text":"<p>Draws an object's sprites from the animation file loaded prior via LoadAnimation(). The sprite will be drawn at <code>object.xpos</code> and <code>object.ypos</code>, with flipping and rotation applied based on the current animation's rotate style.</p> <p>Note</p> <p>Object animations cannot use scale or ink effects.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawObjectAnimation/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawObjectAnimation/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawObjectAnimation/#example","title":"Example","text":"<pre><code>DrawObjectAnimation()\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSprite/","title":"DrawSprite","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSprite/#description","title":"Description","text":"<p>Draws <code>frame</code> at the object's X and Y position.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSprite/#parameters","title":"Parameters","text":"<code>frame</code> <p>The ID of the SpriteFrame to draw.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSprite/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSprite/#syntax","title":"Syntax","text":"<pre><code>DrawSprite(int frame)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSprite/#example","title":"Example","text":"<pre><code>DrawSprite(0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteFX/","title":"DrawSpriteFX","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteFX/#description","title":"Description","text":"<p>Draws <code>frame</code> at a specified X and Y position with visual effects.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteFX/#parameters","title":"Parameters","text":"<code>frame</code> <p>The ID of the SpriteFrame to draw.</p> <code>drawFXFlag</code> <p>The visual effect to apply.</p> <code>xpos</code> <p>The position of the sprite on the horizontal axis in world-space.</p> <code>ypos</code> <p>The position of the sprite on the vertical axis in world-space.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteFX/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteFX/#syntax","title":"Syntax","text":"<pre><code>DrawSpriteFX(int frame, int drawFXFlag, int xpos, int ypos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteFX/#example","title":"Example","text":"<pre><code>DrawSpriteFX(2, FX_FLIP, object.value0, object.ypos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteFX/#drawfxflag-effects","title":"drawFXFlag Effects","text":"Effect Description <code>FX_SCALE</code> Allows the scaling of the sprite via <code>object.scale</code>. <code>FX_ROTATE</code> Allows the rotation of the sprite via <code>object.rotation</code>. <code>FX_ROTOZOOM</code> Allows both scaling via <code>object.scale</code> and rotation via <code>object.rotation</code>. <code>FX_INK</code> Allows using transparency based on <code>object.inkEffect</code>. <code>FX_TINT</code> Tints the sprite to grayscale if <code>object.inkEffect</code> is set to <code>INK_ALPHA</code>, otherwise it acts like <code>FX_SCALE</code>. <code>FX_FLIP</code> Flips the sprite depending on <code>object.direction</code>. <p>Note</p> <p><code>FX_TINT</code> does not have an alias set by default. Its numeric ID is <code>4</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteFX/#ink-effects","title":"Ink Effects","text":"ID Ink Effect Description 0 <code>INK_NONE</code> No effect. 1 <code>INK_BLEND</code> 50% transparency. 2 <code>INK_ALPHA</code> Transparency based on <code>object.alpha</code>, with a range of 0-255, 255 being no transparency. 3 <code>INK_ADD</code> Additive blending. 4 <code>INK_SUB</code> Subtractive blending.","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteScreenFX/","title":"DrawSpriteScreenFX","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteScreenFX/#description","title":"Description","text":"<p>Draws <code>frame</code> at a specified X and Y position in screen-space with visual effects.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteScreenFX/#parameters","title":"Parameters","text":"<code>frame</code> <p>The ID of the SpriteFrame to draw.</p> <code>drawFXFlag</code> <p>The visual effect to apply.</p> <code>ixpos</code> <p>The position of the sprite on the horizontal axis in screen-space.</p> <code>iypos</code> <p>The position of the sprite on the vertical axis in screen-space.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteScreenFX/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteScreenFX/#syntax","title":"Syntax","text":"<pre><code>DrawSpriteScreenFX(int frame, int drawFXFlag, int ixpos, int iypos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteScreenFX/#example","title":"Example","text":"<pre><code>DrawSpriteScreenFX(2, FX_FLIP, screen.xcenter, 15)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteScreenFX/#drawfxflag-effects","title":"drawFXFlag Effects","text":"Effect Description <code>FX_SCALE</code> Allows the scaling of the sprite via <code>object.scale</code>. <code>FX_ROTATE</code> Allows the rotation of the sprite via <code>object.rotation</code>. <code>FX_ROTOZOOM</code> Allows both scaling via <code>object.scale</code> and rotation via <code>object.rotation</code>. <code>FX_INK</code> Allows using transparency based on <code>object.inkEffect</code>. <code>FX_TINT</code> Tints the sprite to grayscale if <code>object.inkEffect</code> is set to <code>INK_ALPHA</code>, otherwise it acts like <code>FX_SCALE</code>. <code>FX_FLIP</code> Flips the sprite depending on <code>object.direction</code>. <p>Note</p> <p><code>FX_TINT</code> does not have an alias set by default. Its numeric ID is <code>4</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteScreenFX/#ink-effects","title":"Ink Effects","text":"ID Ink Effect Description 0 <code>INK_NONE</code> No effect. 1 <code>INK_BLEND</code> 50% transparency. 2 <code>INK_ALPHA</code> Transparency based on <code>object.alpha</code>, with a range of 0-255, 255 being no transparency. 3 <code>INK_ADD</code> Additive blending. 4 <code>INK_SUB</code> Subtractive blending.","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteScreenXY/","title":"DrawSpriteScreenXY","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteScreenXY/#description","title":"Description","text":"<p>Draws <code>frame</code> at a specified X and Y position in screen-space.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteScreenXY/#parameters","title":"Parameters","text":"<code>frame</code> <p>The ID of the SpriteFrame to draw.</p> <code>ixpos</code> <p>The position of the sprite on the horizontal axis in screen-space.</p> <code>iypos</code> <p>The position of the sprite on the vertical axis in screen-space.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteScreenXY/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteScreenXY/#syntax","title":"Syntax","text":"<pre><code>DrawSpriteScreenXY(int frame, int ixpos, int iypos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteScreenXY/#example","title":"Example","text":"<pre><code>DrawSpriteScreenXY(0, screen.xcenter, 15)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteXY/","title":"DrawSpriteXY","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteXY/#description","title":"Description","text":"<p>Draws <code>frame</code> at a specified X and Y position.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteXY/#parameters","title":"Parameters","text":"<code>frame</code> <p>The ID of the SpriteFrame to draw.</p> <code>xpos</code> <p>The position of the sprite on the horizontal axis in world-space.</p> <code>ypos</code> <p>The position of the sprite on the vertical axis in world-space.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteXY/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteXY/#syntax","title":"Syntax","text":"<pre><code>DrawSpriteXY(int frame, int xpos, int ypos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/DrawSpriteXY/#example","title":"Example","text":"<pre><code>DrawSpriteXY(0, object.value0, object.ypos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/EditFrame/","title":"EditFrame","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/EditFrame/#description","title":"Description","text":"<p>Edits the pivots, width, height, and sheet coordinates of <code>frame</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/EditFrame/#parameters","title":"Parameters","text":"<code>frame</code> <p>The ID of the SpriteFrame to edit.</p> <code>xPivot</code> <p>The horizontal offset of the sprite. Negative values will move it to the left, while positive values will move it to the right.</p> <code>yPivot</code> <p>The vertical offset of the sprite. Negative values will move it upwards, while positive values will move it downwards.</p> <code>width</code> <p>The width of the sprite.</p> <code>height</code> <p>The height of the sprite.</p> <code>sheetXPos</code> <p>The position of the upper-left border of the sprite, on the X axis.</p> <code>sheetYPos</code> <p>The position of the upper-left border of the sprite, on the Y axis.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/EditFrame/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/EditFrame/#syntax","title":"Syntax","text":"<pre><code>EditFrame(int frame, int xPivot, int yPivot, int width, int height, int sheetXPos, int sheetYPos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/EditFrame/#example","title":"Example","text":"<pre><code>EditFrame(2, -8, -8, 8, 8, 1, 35)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/LoadAnimation/","title":"LoadAnimation","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/LoadAnimation/#description","title":"Description","text":"<p>Loads an animation file for the current object type.</p> <p>Note</p> <p>Loaded animation files are stored per object type, not per object entity.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/LoadAnimation/#parameters","title":"Parameters","text":"<code>path</code> <p>The file path to load the animation from, relative to <code>Data/Animations/</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/LoadAnimation/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/LoadAnimation/#syntax","title":"Syntax","text":"<pre><code>LoadAnimation(string path)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/LoadAnimation/#example","title":"Example","text":"<pre><code>LoadAnimation(\"Test.ani\")\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/LoadSpriteSheet/","title":"LoadSpriteSheet","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/LoadSpriteSheet/#description","title":"Description","text":"<p>Loads a spritesheet and assigns the ID to <code>object.spritesheet</code>. The spritesheet must be a GIF file.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/LoadSpriteSheet/#parameters","title":"Parameters","text":"<code>path</code> <p>The file path of the spritesheet to load, relative to <code>Data/Sprites/</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/LoadSpriteSheet/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/LoadSpriteSheet/#syntax","title":"Syntax","text":"<pre><code>LoadSpriteSheet(string path)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/LoadSpriteSheet/#example","title":"Example","text":"<pre><code>LoadSpriteSheet(\"Test/Objects.gif\")\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/ProcessAnimation/","title":"ProcessAnimation","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/ProcessAnimation/#description","title":"Description","text":"<p>Processes the current object's animation, based on the animation file loaded prior via LoadAnimation(). The animation is processed based on <code>object.animation</code>, and uses <code>object.animationSpeed</code>, <code>object.animationTimer</code>, and <code>object.frame</code> as well.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/ProcessAnimation/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/ProcessAnimation/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/ProcessAnimation/#example","title":"Example","text":"<pre><code>ProcessAnimation()\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/RemoveSpriteSheet/","title":"RemoveSpriteSheet","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/RemoveSpriteSheet/#description","title":"Description","text":"<p>Removes the given spritesheet from memory, if it is already loaded.</p> <p>Note</p> <p>This function does not affect files in the datafile or device storage, only the engine memory.</p> <p>Note</p> <p>Spritesheets loaded from animation files cannot be removed.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/RemoveSpriteSheet/#parameters","title":"Parameters","text":"<code>path</code> <p>The file path of the target spritesheet to remove, relative to <code>Data/Sprites/</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/RemoveSpriteSheet/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/RemoveSpriteSheet/#syntax","title":"Syntax","text":"<pre><code>RemoveSpriteSheet(string path)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/RemoveSpriteSheet/#example","title":"Example","text":"<pre><code>RemoveSpriteSheet(\"Test/Objects.gif\")\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/SpriteFrame/","title":"SpriteFrame","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/SpriteFrame/#description","title":"Description","text":"<p>Adds a SpriteFrame with the specified values.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/SpriteFrame/#parameters","title":"Parameters","text":"<code>xPivot</code> <p>The horizontal offset of the sprite. Negative values will move it to the left, while positive values will move it to the right.</p> <code>yPivot</code> <p>The vertical offset of the sprite. Negative values will move it upwards, while positive values will move it downwards.</p> <code>width</code> <p>The width of the sprite.</p> <code>height</code> <p>The height of the sprite.</p> <code>sheetXPos</code> <p>The position of the upper-left border of the sprite, on the X axis.</p> <code>sheetYPos</code> <p>The position of the upper-left border of the sprite, on the Y axis.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/SpriteFrame/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/SpriteFrame/#syntax","title":"Syntax","text":"<pre><code>SpriteFrame(int xPivot, int yPivot, int width, int height, int sheetXPos, int sheetYPos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Graphics/SpriteFrame/#example","title":"Example","text":"<pre><code>SpriteFrame(-16, -16, 32, 32, 75, 129)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/ATan2/","title":"ATan2","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/ATan2/#description","title":"Description","text":"<p>Performs an arctan operation using <code>x</code> and <code>y</code>, storing the result in <code>store</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/ATan2/#parameters","title":"Parameters","text":"<code>store</code> <p>The variable to store the result.</p> <code>x</code>, <code>y</code> <p>The values used in the arctan operation.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/ATan2/#return-value","title":"Return Value","text":"<p>Sets <code>store</code> to the result.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/ATan2/#syntax","title":"Syntax","text":"<pre><code>ATan2(var store, int x, int y)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/ATan2/#example","title":"Example","text":"<pre><code>ATan2(temp1, object.value5, temp0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Abs/","title":"Abs","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Abs/#description","title":"Description","text":"<p>Gets the absolute number of <code>value</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Abs/#parameters","title":"Parameters","text":"<code>value</code> <p>Variable from where to read the value.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Abs/#return-value","title":"Return Value","text":"<p>Updates <code>value</code> with the result.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Abs/#syntax","title":"Syntax","text":"<pre><code>Abs(var value)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Abs/#example","title":"Example","text":"<pre><code>Abs(object.value3)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Cos/","title":"Cos","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Cos/#description","title":"Description","text":"<p>Gets the value from the <code>cos512</code> lookup table based on <code>angle</code> and sets it in <code>store</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Cos/#parameters","title":"Parameters","text":"<code>store</code> <p>The variable to store the result.</p> <code>angle</code> <p>The value of angle.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Cos/#return-value","title":"Return Value","text":"<p>Sets <code>store</code> to the result.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Cos/#syntax","title":"Syntax","text":"<pre><code>Cos(var store, int angle)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Cos/#example","title":"Example","text":"<pre><code>Cos(temp0, object.value2)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Cos256/","title":"Cos256","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Cos256/#description","title":"Description","text":"<p>Gets the value from the <code>cos256</code> lookup table based on <code>angle</code> and sets it in <code>store</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Cos256/#parameters","title":"Parameters","text":"<code>store</code> <p>The variable to store the result.</p> <code>angle</code> <p>The value of angle.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Cos256/#return-value","title":"Return Value","text":"<p>Sets <code>store</code> to the result.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Cos256/#syntax","title":"Syntax","text":"<pre><code>Cos256(var store, int angle)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Cos256/#example","title":"Example","text":"<pre><code>Cos256(temp0, object.value2)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/GetBit/","title":"GetBit","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/GetBit/#description","title":"Description","text":"<p>Gets the binary bit at index <code>bitPos</code> from <code>value</code> and stores it in <code>store</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/GetBit/#parameters","title":"Parameters","text":"<code>store</code> <p>The variable to store the bit.</p> <code>value</code> <p>The value from where to search the required bit.</p> <code>bitPos</code> <p>The position of the bit to get. Indices 0-7 are valid.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/GetBit/#return-value","title":"Return Value","text":"<p>Sets <code>store</code> to the result.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/GetBit/#syntax","title":"Syntax","text":"<pre><code>GetBit(var store, int value, int bitPos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/GetBit/#example","title":"Example","text":"<pre><code>GetBit(arrayPos0, temp3, 6)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/GetTableValue/","title":"GetTableValue","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/GetTableValue/#description","title":"Description","text":"<p>Gets the value at <code>index</code> from <code>table</code> and stores it in <code>store</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/GetTableValue/#parameters","title":"Parameters","text":"<code>store</code> <p>Variable from where to save the read value.</p> <code>index</code> <p>The index to read the value of.</p> <code>table</code> <p>Name of the table from where to get the value.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/GetTableValue/#return-value","title":"Return Value","text":"<p>Sets <code>store</code> to the result.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/GetTableValue/#syntax","title":"Syntax","text":"<pre><code>GetTableValue(var store, int index, table)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/GetTableValue/#example","title":"Example","text":"<pre><code>GetTableValue(arrayPos0, 3, TestObject_Table)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Interpolate/","title":"Interpolate","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Interpolate/#description","title":"Description","text":"<p>Linearly interpolates (LERPs) <code>x</code> and <code>y</code> by <code>percent</code> and stores the result in <code>store</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Interpolate/#parameters","title":"Parameters","text":"<code>store</code> <p>The variable to store the result.</p> <code>x</code>,<code>y</code> <p>The values used for the interpolation.</p> <code>percent</code> <p>Percentage of interpolation, with a range of 0 to 256.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Interpolate/#return-value","title":"Return Value","text":"<p>Sets <code>store</code> to the result.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Interpolate/#syntax","title":"Syntax","text":"<pre><code>Interpolate(var store, int x, int y, int percent)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Interpolate/#example","title":"Example","text":"<pre><code>Interpolate(object.value2, 26, 29, 128)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/InterpolateXY/","title":"InterpolateXY","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/InterpolateXY/#description","title":"Description","text":"<p>Linearly interpolates two points at once, <code>aX</code> with <code>aY</code>, and <code>bX</code> with <code>bY</code>, by <code>percent</code>, and stores the result in <code>storeX</code> and <code>storeY</code> respectively.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/InterpolateXY/#parameters","title":"Parameters","text":"<code>storeX</code>, <code>storeY</code> <p>The variables to store the results.</p> <code>aX</code>, <code>aY</code>, <code>bX</code>, <code>bY</code> <p>The values used for the interpolations.</p> <code>percent</code> <p>Percentage of interpolation, with a range of 0 to 256.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/InterpolateXY/#return-value","title":"Return Value","text":"<p>Sets <code>storeX</code> and <code>storeY</code> to the results.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/InterpolateXY/#syntax","title":"Syntax","text":"<pre><code>InterpolateXY(var storeX, var storeY, int aX, int aY, int bX, int bY, int percent)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/InterpolateXY/#example","title":"Example","text":"<pre><code>InterpolateXY(object.value2, object.value3, 26, 29, 33, 37, 220)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Not/","title":"Not","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Not/#description","title":"Description","text":"<p>Performs a NOT operation on <code>value</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Not/#parameters","title":"Parameters","text":"<code>value</code> <p>The variable to negate.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Not/#return-value","title":"Return Value","text":"<p>Updates <code>value</code> with the result.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Not/#syntax","title":"Syntax","text":"<pre><code>Not(var value)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Not/#example","title":"Example","text":"<pre><code>Not(temp4)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Rand/","title":"Rand","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Rand/#description","title":"Description","text":"<p>Gets a random value from 0 to <code>max</code> (not inclusive) and stores it in <code>store</code>.</p> <p>Note</p> <p><code>max</code> is exclusive, meaning the number it's set to will never be chosen, e.g. a <code>max</code> value of 4 will result in only numbers 0-3 being picked.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Rand/#parameters","title":"Parameters","text":"<code>store</code> <p>Variable from where to store the result.</p> <code>max</code> <p>Exclusive maximum for the random value to get.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Rand/#return-value","title":"Return Value","text":"<p>Sets <code>store</code> to the result.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Rand/#syntax","title":"Syntax","text":"<pre><code>Rand(var store, int max)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Rand/#example","title":"Example","text":"<pre><code>Rand(object.value3, 8)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/SetBit/","title":"SetBit","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/SetBit/#description","title":"Description","text":"<p>Sets index <code>bitPos</code> of <code>value</code> to <code>bit</code> and updates <code>value</code> accordingly.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/SetBit/#parameters","title":"Parameters","text":"<code>value</code> <p>The variable to update.</p> <code>bitPos</code> <p>The position of the bit to set. Indices 0-7 are valid.</p> <code>bit</code> <p>Updated boolean value.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/SetBit/#return-value","title":"Return Value","text":"<p>Updates <code>value</code> with the applied bit.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/SetBit/#syntax","title":"Syntax","text":"<pre><code>SetBit(var value, int bitPos, bool bit)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/SetBit/#example","title":"Example","text":"<pre><code>SetBit(object.value7, 3, 1)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/SetTableValue/","title":"SetTableValue","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/SetTableValue/#description","title":"Description","text":"<p>Sets the value at <code>index</code> from <code>table</code> to <code>value</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/SetTableValue/#parameters","title":"Parameters","text":"<code>value</code> <p>The value to replace <code>index</code> with.</p> <code>index</code> <p>The index to replace the value of.</p> <code>table</code> <p>Name of the table from where to set the value.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/SetTableValue/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/SetTableValue/#syntax","title":"Syntax","text":"<pre><code>SetTableValue(int value, int index, table)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/SetTableValue/#example","title":"Example","text":"<pre><code>SetTableValue(55, 3, TestObject_Table)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Sin/","title":"Sin","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Sin/#description","title":"Description","text":"<p>Gets the value from the <code>sin512</code> lookup table based on <code>angle</code> and sets it in <code>store</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Sin/#parameters","title":"Parameters","text":"<code>store</code> <p>The variable to store the result.</p> <code>angle</code> <p>The value of angle.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Sin/#return-value","title":"Return Value","text":"<p>Sets <code>store</code> to the result.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Sin/#syntax","title":"Syntax","text":"<pre><code>Sin(var store, int angle)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Sin/#example","title":"Example","text":"<pre><code>Sin(object.value3, temp0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Sin256/","title":"Sin256","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Sin256/#description","title":"Description","text":"<p>Gets the value from the <code>sin256</code> lookup table based on <code>angle</code> and sets it in <code>store</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Sin256/#parameters","title":"Parameters","text":"<code>store</code> <p>The variable to store the result.</p> <code>angle</code> <p>The value of angle.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Sin256/#return-value","title":"Return Value","text":"<p>Sets <code>store</code> to the result.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Sin256/#syntax","title":"Syntax","text":"<pre><code>Sin256(var store, int angle)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Math/Sin256/#example","title":"Example","text":"<pre><code>Sin256(object.value3, temp0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/AddMenuEntry/","title":"AddMenuEntry","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/AddMenuEntry/#description","title":"Description","text":"<p>Adds an entry to <code>menu</code> with the contents of <code>text</code>. The text will display highlighted if <code>highlightEntry</code> is set to true.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/AddMenuEntry/#parameters","title":"Parameters","text":"<code>menu</code> <p>The menu to add the entry to. <code>MENU_1</code> or <code>MENU_2</code> are valid.</p> <code>text</code> <p>New text to add in the menu.</p> <code>highlightEntry</code> <p>Determines if the text will always be highlighted.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/AddMenuEntry/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/AddMenuEntry/#syntax","title":"Syntax","text":"<pre><code>AddMenuEntry(int menu, string text, bool highlightEntry)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/AddMenuEntry/#example","title":"Example","text":"<pre><code>AddMenuEntry(MENU_1, \"THIS IS AN EXAMPLE\", true)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CheckTouchRect/","title":"CheckTouchRect","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CheckTouchRect/#description","title":"Description","text":"<p>Checks if there's a touch input between the given coordinates.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CheckTouchRect/#parameters","title":"Parameters","text":"<code>x1</code> <p>Left side of the rectangle.</p> <code>y1</code> <p>Top side of the rectangle.</p> <code>x2</code> <p>Right side of the rectangle.</p> <code>y2</code> <p>Bottom side of the rectangle.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CheckTouchRect/#return-value","title":"Return Value","text":"<p>Sets <code>checkResult</code> to the ID of the touch input within the coordinates. If there are no such touch inputs, <code>checkResult</code> is set to <code>-1</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CheckTouchRect/#syntax","title":"Syntax","text":"<pre><code>CheckTouchRect(int x1, int y1, int x2, int y2)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CheckTouchRect/#example","title":"Example","text":"<pre><code>CheckTouchRect(0, 0, screen.xsize, screen.ysize)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/DrawMenu/","title":"DrawMenu","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/DrawMenu/#description","title":"Description","text":"<p>Draws <code>menu</code> at <code>xpos</code> and <code>ypos</code> relative to the screen.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/DrawMenu/#parameters","title":"Parameters","text":"<code>menu</code> <p>The menu to draw. <code>MENU_1</code> or <code>MENU_2</code> are valid.</p> <code>xpos</code> <p>Position of the menu on the horizontal axis.</p> <code>ypos</code> <p>Position of the menu on the vertical axis.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/DrawMenu/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/DrawMenu/#syntax","title":"Syntax","text":"<pre><code>DrawMenu(int menu, int xpos, int ypos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/DrawMenu/#example","title":"Example","text":"<pre><code>DrawMenu(MENU_1, screen.xcenter, screen.ycenter)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/EditMenuEntry/","title":"EditMenuEntry","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/EditMenuEntry/#description","title":"Description","text":"<p>Edits an entry of <code>menu</code> with the contents of <code>text</code> in <code>rowID</code>. The text will display highlighted if <code>highlightEntry</code> is set to true.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/EditMenuEntry/#parameters","title":"Parameters","text":"<code>menu</code> <p>The menu to edit the entry in. <code>MENU_1</code> or <code>MENU_2</code> are valid.</p> <code>text</code> <p>Text to replace the current text with.</p> <code>rowID</code> <p>The index of the row to edit.</p> <code>highlightEntry</code> <p>Determines if the text will always be highlighted.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/EditMenuEntry/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/EditMenuEntry/#syntax","title":"Syntax","text":"<pre><code>EditMenuEntry(int menu, string text, int rowID, bool highlightEntry)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/EditMenuEntry/#example","title":"Example","text":"<pre><code>EditMenuEntry(MENU_1, \"THIS IS AN EXAMPLE\", 0, true)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/GetTextInfo/","title":"GetTextInfo","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/GetTextInfo/#description","title":"Description","text":"<p>Gets the data of <code>type</code> from <code>menu</code> using <code>index</code> and stores it in <code>store</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/GetTextInfo/#parameters","title":"Parameters","text":"<code>store</code> <p>Variable where the data will be saved.</p> <code>menu</code> <p>The menu from where to get the data. <code>MENU_1</code> or <code>MENU_2</code> are valid.</p> <code>type</code> <p>The type of data to read. Valid values are 0 (<code>TEXTINFO_TEXTDATA</code>), 1 (<code>TEXTINFO_TEXTSIZE</code>) or 2 (<code>TEXTINFO_ROWCOUNT</code>).</p> <code>index</code> <p>Index of the text row from where to get the data.</p> <code>offset</code> <p>Offset for the text at <code>index</code>. Only used if <code>type</code> is <code>TEXTINFO_TEXTDATA</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/GetTextInfo/#return-value","title":"Return Value","text":"<p>Sets <code>store</code> to the result.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/GetTextInfo/#syntax","title":"Syntax","text":"<pre><code>GetTextInfo(var store, int menu, int type, int index, int offset)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/GetTextInfo/#example","title":"Example","text":"<pre><code>GetTextInfo(temp4, MENU_1, TEXTINFO_TEXTDATA, temp0, 1)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/GetVersionNumber/","title":"GetVersionNumber","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/GetVersionNumber/#description","title":"Description","text":"<p>Adds a text entry to <code>menu</code> with the engine's version as the text. The text will display highlighted if <code>highlightEntry</code> is set to true.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/GetVersionNumber/#parameters","title":"Parameters","text":"<code>menu</code> <p>The menu to add the text to. <code>MENU_1</code> or <code>MENU_2</code> are valid.</p> <code>highlightEntry</code> <p>Determines if the text will always be highlighted.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/GetVersionNumber/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/GetVersionNumber/#syntax","title":"Syntax","text":"<pre><code>GetVersionNumber(int menu, bool highlightEntry)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/GetVersionNumber/#example","title":"Example","text":"<pre><code>GetVersionNumber(MENU_2, true)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/LoadTextFile/","title":"LoadTextFile","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/LoadTextFile/#description","title":"Description","text":"<p>Loads <code>menu</code> based on the text file loaded from <code>filePath</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/LoadTextFile/#parameters","title":"Parameters","text":"<code>menu</code> <p>The menu to which the file will load. <code>MENU_1</code> or <code>MENU_2</code> are valid.</p> <code>filePath</code> <p>The path to the target file, relative to the root of the Data assets.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/LoadTextFile/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/LoadTextFile/#syntax","title":"Syntax","text":"<pre><code>LoadTextFile(int menu, string filePath)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/LoadTextFile/#example","title":"Example","text":"<pre><code>LoadTextFile(MENU_1, \"Data/Game/Credits_Mobile.txt\")\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/Print/","title":"Print","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/Print/#description","title":"Description","text":"<p>Prints a message or integer to the console.</p> <p>Note</p> <p>This function has no effect in Sonic Origins.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/Print/#parameters","title":"Parameters","text":"<code>message</code> <p>The message to print. If <code>isInt</code> is <code>false</code>, takes a string; otherwise, takes an integer.</p> <code>isInt</code> <p><code>message</code> will be printed as a string if <code>false</code>, and as an integer if <code>true</code>.</p> <code>useEndLine</code> <p>If set to <code>true</code>, adds a newline character (<code>\\n</code>) to the end of the print.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/Print/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/Print/#syntax","title":"Syntax","text":"<pre><code>Print(string/int message, bool isInt, bool useEndLine)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/Print/#examples","title":"Examples","text":"<p><pre><code>Print(\"This is a test message. \", false, false)\n</code></pre> <pre><code>Print(\"The next print will be an int: \", false, false)\n</code></pre> <pre><code>Print(object.value7, true, true)\n</code></pre></p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/ReadSaveRAM/","title":"ReadSaveRAM","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/ReadSaveRAM/#description","title":"Description","text":"<p>Reads the contents of the save file on disk into SaveRAM.</p> <p>Note</p> <p>The contents previously in SaveRAM will be overwritten upon calling this function.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/ReadSaveRAM/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/ReadSaveRAM/#return-value","title":"Return Value","text":"<p>Sets <code>checkResult</code> to <code>true</code> if SaveRAM is loaded successfully loaded; otherwise, sets it to <code>false</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/ReadSaveRAM/#example","title":"Example","text":"<pre><code>ReadSaveRAM()\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/SetupMenu/","title":"SetupMenu","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/SetupMenu/#description","title":"Description","text":"<p>Sets up <code>menu</code> with <code>rowCount</code> rows, <code>selectionCount</code> active selections and aligning set to <code>alignment</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/SetupMenu/#parameters","title":"Parameters","text":"<code>menu</code> <p>The menu to setup. <code>MENU_1</code> or <code>MENU_2</code> are valid.</p> <code>rowCount</code> <p>The amount of rows the menu starts with.</p> <code>selectionCount</code> <p>Selection of highlight.</p> <code>alignment</code> <p>Alignment of the text. 0 is right aligned, 1 is left aligned, and 2 is centered.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/SetupMenu/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/SetupMenu/#syntax","title":"Syntax","text":"<pre><code>SetupMenu(int menu, int rowCount, int selectionCount, int alignment)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/SetupMenu/#example","title":"Example","text":"<pre><code>SetupMenu(MENU_1, 0, 3, 1)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/WriteSaveRAM/","title":"WriteSaveRAM","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/WriteSaveRAM/#description","title":"Description","text":"<p>Writes the contents of SaveRAM to the save file on disk.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/WriteSaveRAM/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/WriteSaveRAM/#return-value","title":"Return Value","text":"<p>Sets <code>checkResult</code> to <code>true</code> if the save file is successfully written to; otherwise, sets it to <code>false</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/WriteSaveRAM/#example","title":"Example","text":"<pre><code>WriteSaveRAM()\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/","title":"CallNativeFunction","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/#description","title":"Description","text":"<p>Sends a callback to the engine to run a native function. There are three versions of the function that can be used depending on the amount of parameters needed for the callback:</p> <ul> <li><code>CallNativeFunction</code> (no parameters)</li> <li><code>CallNativeFunction2</code> (two parameters)</li> <li><code>CallNativeFunction4</code> (four parameters)</li> </ul> <p>In order to call a native function by name, a global variable named after the function must be added to the GameConfig. Once added, the engine will automatically set the value of the global variable to the ID of the native function.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/#parameters","title":"Parameters","text":"<code>callback</code> <p>The index value of the callback.</p> <code>param1</code>, <code>param2</code>, <code>param3</code>, <code>param4</code> <p>Parameters to use for the callback.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/#return-value","title":"Return Value","text":"<p>Depends on the callback used.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/#syntax","title":"Syntax","text":"<p><pre><code>CallNativeFunction(int callback)\n</code></pre> <pre><code>CallNativeFunction2(int callback, param1, param2)\n</code></pre> <pre><code>CallNativeFunction4(int callback, param1, param2, param3, param4)\n</code></pre></p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/#examples","title":"Examples","text":"<p><pre><code>CallNativeFunction(Disconnect2PVS)\n</code></pre> <pre><code>CallNativeFunction2(TransmitGlobal, \"vs.randomValue\", vs.randomValue)\n</code></pre> <pre><code>CallNativeFunction4(NotifyCallback, NOTIFY_STATS_ENEMY, StageStatsUsabilityParam1, StageStatsUsabilityParam2, StageStatsUsabilityParam3)\n</code></pre></p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/#native-functions","title":"Native Functions","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/#general","title":"General","text":"Function Description SetAchievement Sets the status of the given achievement. SetLeaderboard Submits the given score to the given leaderboard. HapticEffect Connect2PVS Disconnect2PVS SendEntity SendValue ReceiveEntity ReceiveValue TransmitGlobal ShowPromoPopup NativePlayerWaitingAds Creates a <code>RewardAds</code> native object, prompting the player to watch an ad. NativeWaterPlayerWaitingAds Creates a <code>RewardAds</code> native object, prompting the player to watch an ad. NotifyCallback Sends the given callback to communicate to Hedgehog Engine 2.","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/#decomp-only","title":"Decomp Only","text":"Function Description SetNetworkGameName ExitGame Closes the engine. FileExists Checks if a file exists in the Data assets. OpenModMenu AddAchievement SetAchievementDescription ClearAchievements GetAchievementCount GetAchievement GetAchievementName GetAchievementDescription GetScreenWidth SetScreenWidth GetWindowScale SetWindowScale GetWindowScaleMode SetWindowScaleMode GetWindowFullScreen SetWindowFullScreen GetWindowBorderless SetWindowBorderless GetWindowVSync SetWindowVSync ApplyWindowChanges GetModCount GetModName GetModDescription GetModAuthor GetModVersion GetModActive SetModActive MoveMod RefreshEngine","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/AddAchievement/","title":"AddAchievement","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/AddAchievement/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/AddAchievement/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/AddAchievement/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/AddAchievement/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/AddAchievement/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ApplyWindowChanges/","title":"ApplyWindowChanges","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ApplyWindowChanges/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ApplyWindowChanges/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ApplyWindowChanges/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ApplyWindowChanges/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ApplyWindowChanges/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ClearAchievements/","title":"ClearAchievements","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ClearAchievements/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ClearAchievements/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ClearAchievements/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ClearAchievements/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ClearAchievements/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Connect2PVS/","title":"Connect2PVS","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Connect2PVS/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Connect2PVS/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Connect2PVS/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Connect2PVS/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Connect2PVS/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Disconnect2PVS/","title":"Disconnect2PVS","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Disconnect2PVS/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Disconnect2PVS/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Disconnect2PVS/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Disconnect2PVS/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/Disconnect2PVS/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ExitGame/","title":"ExitGame","text":"<p>Note</p> <p>This native function only exists in the RSDKv4 decompilation's mod loader. You can check if the function is usable by using the <code>USE_MOD_LOADER</code> platform flag.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ExitGame/#description","title":"Description","text":"<p>Closes the engine.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ExitGame/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ExitGame/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ExitGame/#example","title":"Example","text":"<pre><code>CallNativeFunction(ExitGame)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/FileExists/","title":"FileExists","text":"<p>Note</p> <p>This native function only exists in the RSDKv4 decompilation's mod loader. You can check if the function is usable by using the <code>USE_MOD_LOADER</code> platform flag.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/FileExists/#description","title":"Description","text":"<p>Checks if a file exists in the Data assets.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/FileExists/#parameters","title":"Parameters","text":"<code>unused</code> <p>Unused parameter.</p> <code>filePath</code> <p>The path to the target file, relative to the root of the Data assets.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/FileExists/#return-value","title":"Return Value","text":"<p>Sets <code>checkResult</code> to <code>true</code> if the given file exists, or <code>false</code> if it doesn't.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/FileExists/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(FileExists, int unused, string filePath)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/FileExists/#example","title":"Example","text":"<pre><code>CallNativeFunction2(FileExists, 0, \"Data/Game/GameConfig.bin\")\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievement/","title":"GetAchievement","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievement/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievement/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievement/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievement/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievement/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementCount/","title":"GetAchievementCount","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementCount/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementCount/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementCount/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementCount/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementCount/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementDescription/","title":"GetAchievementDescription","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementDescription/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementDescription/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementDescription/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementDescription/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementDescription/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementName/","title":"GetAchievementName","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementName/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementName/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementName/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementName/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetAchievementName/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModActive/","title":"GetModActive","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModActive/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModActive/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModActive/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModActive/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModActive/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModAuthor/","title":"GetModAuthor","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModAuthor/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModAuthor/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModAuthor/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModAuthor/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModAuthor/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModCount/","title":"GetModCount","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModCount/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModCount/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModCount/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModCount/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModCount/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModDescription/","title":"GetModDescription","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModDescription/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModDescription/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModDescription/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModDescription/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModDescription/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModName/","title":"GetModName","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModName/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModName/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModName/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModName/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModName/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModVersion/","title":"GetModVersion","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModVersion/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModVersion/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModVersion/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModVersion/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetModVersion/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetScreenWidth/","title":"GetScreenWidth","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetScreenWidth/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetScreenWidth/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetScreenWidth/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetScreenWidth/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetScreenWidth/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowBorderless/","title":"GetWindowBorderless","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowBorderless/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowBorderless/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowBorderless/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowBorderless/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowBorderless/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowFullScreen/","title":"GetWindowFullScreen","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowFullScreen/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowFullScreen/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowFullScreen/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowFullScreen/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowFullScreen/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScale/","title":"GetWindowScale","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScale/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScale/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScale/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScale/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScale/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScaleMode/","title":"GetWindowScaleMode","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScaleMode/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScaleMode/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScaleMode/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScaleMode/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowScaleMode/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowVSync/","title":"GetWindowVSync","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowVSync/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowVSync/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowVSync/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowVSync/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/GetWindowVSync/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/HapticEffect/","title":"HapticEffect","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/HapticEffect/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/HapticEffect/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/HapticEffect/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/HapticEffect/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/HapticEffect/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/MoveMod/","title":"MoveMod","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/MoveMod/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/MoveMod/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/MoveMod/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/MoveMod/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/MoveMod/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativePlayerWaitingAds/","title":"NativePlayerWaitingAds","text":"<p>Note</p> <p>This native function only exists in the Sega Forever versions of Sonic 1 (3.9.0 and later) and Sonic 2 (1.7.0 and later).</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativePlayerWaitingAds/#description","title":"Description","text":"<p>Creates a <code>RewardAds</code> native object, prompting the player to watch an ad.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativePlayerWaitingAds/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativePlayerWaitingAds/#return-value","title":"Return Value","text":"<p>If <code>Yes</code> is selected and an ad plays, <code>waitingAds.result</code> is set to <code>1</code>. If <code>No</code> is selected, it's set to <code>2</code>.</p> <p>Note</p> <p>The <code>RewardAds</code> native object does not exist in the RSDKv4 decompilation; instead, <code>waitingAds.result</code> is always set to <code>2</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativePlayerWaitingAds/#example","title":"Example","text":"<pre><code>CallNativeFunction(NativePlayerWaitingAds)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativeWaterPlayerWaitingAds/","title":"NativeWaterPlayerWaitingAds","text":"<p>Note</p> <p>This native function only exists in the Sega Forever versions of Sonic 1 (3.9.0 and later) and Sonic 2 (1.7.0 and later).</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativeWaterPlayerWaitingAds/#description","title":"Description","text":"<p>Creates a <code>RewardAds</code> native object, prompting the player to watch an ad.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativeWaterPlayerWaitingAds/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativeWaterPlayerWaitingAds/#return-value","title":"Return Value","text":"<p>If <code>Yes</code> is selected and an ad plays, <code>waitingAds.water</code> is set to <code>1</code>. If <code>No</code> is selected, it's set to <code>2</code>.</p> <p>Note</p> <p>The <code>RewardAds</code> native object does not exist in the RSDKv4 decompilation; instead, <code>waitingAds.water</code> is always set to <code>2</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NativeWaterPlayerWaitingAds/#example","title":"Example","text":"<pre><code>CallNativeFunction(NativeWaterPlayerWaitingAds)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/","title":"NotifyCallback","text":"<p>Note</p> <p>This native function only exists in Sonic Origins.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/#description","title":"Description","text":"<p>Sends the given callback to communicate to Hedgehog Engine 2.</p> <p>For more information on NotifyCallback, including a list of usable callbacks, see this page.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/#parameters","title":"Parameters","text":"<code>callback</code> <p>The index value of the callback.</p> <code>param1</code>, <code>param2</code>, <code>param3</code> <p>Parameters to use for the callback.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/#return-value","title":"Return Value","text":"<p>Depends on the callback used.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/#syntax","title":"Syntax","text":"<p><pre><code>CallNativeFunction2(NotifyCallback, int callback, int param1)\n</code></pre> <pre><code>CallNativeFunction4(NotifyCallback, int callback, int param1, int param2, int param3)\n</code></pre></p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/NotifyCallback/#examples","title":"Examples","text":"<p><pre><code>CallNativeFunction2(NotifyCallback, NOTIFY_ADD_COIN, 1)\n</code></pre> <pre><code>CallNativeFunction4(NotifyCallback, NOTIFY_STATS_CHARA_ACTION, 1, 0, 0)\n</code></pre></p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/OpenModMenu/","title":"OpenModMenu","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/OpenModMenu/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/OpenModMenu/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/OpenModMenu/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/OpenModMenu/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/OpenModMenu/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveEntity/","title":"ReceiveEntity","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveEntity/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveEntity/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveEntity/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveEntity/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveEntity/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveValue/","title":"ReceiveValue","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveValue/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveValue/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveValue/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveValue/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ReceiveValue/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/RefreshEngine/","title":"RefreshEngine","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/RefreshEngine/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/RefreshEngine/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/RefreshEngine/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/RefreshEngine/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/RefreshEngine/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendEntity/","title":"SendEntity","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendEntity/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendEntity/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendEntity/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendEntity/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendEntity/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendValue/","title":"SendValue","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendValue/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendValue/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendValue/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendValue/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SendValue/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievement/","title":"SetAchievement","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievement/#description","title":"Description","text":"<p>Sets the status of the given achievement.</p> <p>Note</p> <p>This function has no effect if trial mode or debug mode are enabled.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievement/#parameters","title":"Parameters","text":"<code>id</code> <p>The index value of the achievement.</p> <code>status</code> <p>The status (progress) to set the achievement to, with a range of 0 to 100. If the status is 100, the achievement is considered achieved and will be awarded to the player.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievement/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievement/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(SetAchievement, int id, int status)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievement/#example","title":"Example","text":"<pre><code>CallNativeFunction2(SetAchievement, 0, 100)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievement/#sonic-1-achievement-ids","title":"Sonic 1 Achievement IDs","text":"ID Achievement 0 Ramp Ring Acrobatics 1 Blast Processing 2 Secret of Marble Zone 3 Block Buster 4 Ring King 5 Secret of Labyrinth Zone 6 Flawless Pursuit 7 Bombs Away 8 Hidden Transporter 9 Chaos Connoisseur 10 One For the Road 11 Beat The Clock","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievement/#sonic-2-achievement-ids","title":"Sonic 2 Achievement IDs","text":"ID Achievement 0 Quick Run 1 100% Chemical Free 2 Early Bird Special 3 Superstar 4 Hit it Big 5 Bop Non-stop 6 Perfectionist 7 A Secret Revealed 8 Head 2 Head 9 Metropolis Master 10 Scrambled Egg 11 Beat The Clock","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievementDescription/","title":"SetAchievementDescription","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievementDescription/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievementDescription/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievementDescription/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievementDescription/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetAchievementDescription/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetLeaderboard/","title":"SetLeaderboard","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetLeaderboard/#description","title":"Description","text":"<p>Submits the given score to the given leaderboard.</p> <p>Note</p> <p>This function has no effect if trial mode or debug mode are enabled.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetLeaderboard/#parameters","title":"Parameters","text":"<code>leaderboardID</code> <p>The index value of the leaderboard.</p> <code>score</code> <p>The score to submit to the leaderboard. The score will not be submitted if it's lower than the score already in the leaderboard.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetLeaderboard/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetLeaderboard/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(SetLeaderboard, int leaderboardID, int score)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetLeaderboard/#example","title":"Example","text":"<pre><code>CallNativeFunction2(SetLeaderboard, 19, player.score)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetLeaderboard/#sonic-1-leaderboard-ids","title":"Sonic 1 Leaderboard IDs","text":"ID Leaderboard 0 Time Attack - Green Hill Zone Act 1 1 Time Attack - Green Hill Zone Act 2 2 Time Attack - Green Hill Zone Act 3 3 Time Attack - Marble Zone Act 1 4 Time Attack - Marble Zone Act 2 5 Time Attack - Marble Zone Act 3 6 Time Attack - Spring Yard Zone Act 1 7 Time Attack - Spring Yard Zone Act 2 8 Time Attack - Spring Yard Zone Act 3 9 Time Attack - Labyrinth Zone Act 1 10 Time Attack - Labyrinth Zone Act 2 11 Time Attack - Labyrinth Zone Act 3 12 Time Attack - Star Light Zone Act 1 13 Time Attack - Star Light Zone Act 2 14 Time Attack - Star Light Zone Act 3 15 Time Attack - Scrap Brain Zone Act 1 16 Time Attack - Scrap Brain Zone Act 2 17 Time Attack - Scrap Brain Zone Act 3 18 Time Attack - Final Zone 19 Best Game Score","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetLeaderboard/#sonic-2-leaderboard-ids","title":"Sonic 2 Leaderboard IDs","text":"ID Leaderboard 0 Best Time - Emerald Hill Zone Act 1 1 Best Time - Emerald Hill Zone Act 2 2 Best Time - Chemical Plant Zone Act 1 3 Best Time - Chemical Plant Zone Act 2 4 Best Time - Aquatic Ruin Zone Act 1 5 Best Time - Aquatic Ruin Zone Act 2 6 Best Time - Casino Night Zone Act 1 7 Best Time - Casino Night Zone Act 2 8 Best Time - Hill Top Zone Act 1 9 Best Time - Hill Top Zone Act 2 10 Best Time - Mystic Cave Zone Act 1 11 Best Time - Mystic Cave Zone Act 2 12 Best Time - Oil Ocean Zone Act 1 13 Best Time - Oil Ocean Zone Act 2 14 Best Time - Metropolis Zone Act 1 15 Best Time - Metropolis Zone Act 2 16 Best Time - Metropolis Zone Act 3 17 Unused 18 Best Time - Wing Fortress Zone 19 Unused 20 Best Time - Hidden Palace Zone 21 Best Time - Boss Attack Zone 22 Best Game Score","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetModActive/","title":"SetModActive","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetModActive/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetModActive/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetModActive/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetModActive/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetModActive/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetNetworkGameName/","title":"SetNetworkGameName","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetNetworkGameName/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetNetworkGameName/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetNetworkGameName/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetNetworkGameName/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetNetworkGameName/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetScreenWidth/","title":"SetScreenWidth","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetScreenWidth/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetScreenWidth/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetScreenWidth/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetScreenWidth/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetScreenWidth/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowBorderless/","title":"SetWindowBorderless","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowBorderless/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowBorderless/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowBorderless/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowBorderless/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowBorderless/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowFullScreen/","title":"SetWindowFullScreen","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowFullScreen/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowFullScreen/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowFullScreen/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowFullScreen/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowFullScreen/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScale/","title":"SetWindowScale","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScale/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScale/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScale/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScale/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScale/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScaleMode/","title":"SetWindowScaleMode","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScaleMode/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScaleMode/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScaleMode/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScaleMode/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowScaleMode/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowVSync/","title":"SetWindowVSync","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowVSync/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowVSync/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowVSync/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowVSync/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/SetWindowVSync/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ShowPromoPopup/","title":"ShowPromoPopup","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ShowPromoPopup/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ShowPromoPopup/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ShowPromoPopup/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ShowPromoPopup/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/ShowPromoPopup/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/TransmitGlobal/","title":"TransmitGlobal","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/TransmitGlobal/#description","title":"Description","text":"<p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/TransmitGlobal/#parameters","title":"Parameters","text":"<code>todo</code> <p>Todo.</p> <code>todo</code> <p>Todo.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/TransmitGlobal/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/TransmitGlobal/#syntax","title":"Syntax","text":"<pre><code>CallNativeFunction2(NativeFunction, int todo, int todo)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Misc/CallNativeFunction/TransmitGlobal/#example","title":"Example","text":"<pre><code>CallNativeFunction2(NativeFunction, 0, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/BoxCollisionTest/","title":"BoxCollisionTest","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/BoxCollisionTest/#description","title":"Description","text":"<p>Checks for collision of an object with another, using the hitbox values passed.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/BoxCollisionTest/#parameters","title":"Parameters","text":"<code>collisionType</code> <p>Type of collision with the object. Can be <code>C_TOUCH</code>, <code>C_SOLID</code>, <code>C_SOLID2</code>, or <code>C_PLATFORM</code>.</p> <code>thisObject</code> <p>The source of the collision.</p> <code>thisLeft</code> / <code>thisTop</code> / <code>thisRight</code> / <code>thisBottom</code> <p>The values for the object's hitbox.</p> <code>otherObject</code> <p>The object to check for collision with.</p> <code>otherLeft</code> / <code>otherTop</code> / <code>otherRight</code> / <code>otherBottom</code> <p>The values for the target's hitbox.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/BoxCollisionTest/#return-value","title":"Return Value","text":"<p>If there wasn't any collision, <code>checkResult</code> will be <code>false</code>. Depending on the <code>collisionType</code> used: - <code>C_TOUCH</code>: <code>checkResult</code> will return <code>true</code> with any type of collision. - <code>C_SOLID</code>/<code>C_SOLID2</code>: <code>checkResult</code> will return values <code>1</code> (Floor), <code>2</code> (LWall), <code>3</code> (RWall) or <code>4</code> (Roof) depending on the side of the object collided with. - <code>C_PLATFORM</code>: <code>checkResult</code> will only be <code>true</code> if the top of the object was collided with.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/BoxCollisionTest/#syntax","title":"Syntax","text":"<pre><code>BoxCollisionTest(int collisionType, int thisObject, int thisLeft, int thisTop, int thisRight, int thisBottom, int otherObject, int otherLeft, int otherTop, int otherRight, int otherBottom)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/BoxCollisionTest/#example","title":"Example","text":"<pre><code>BoxCollisionTest(C_TOUCH, object.entityPos, -24, -8, 24, 8, object[0].entityPos, C_BOX, C_BOX, C_BOX, C_BOX)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/CopyObject/","title":"CopyObject","text":"<p>Note</p> <p>This function only exists in REV02 and above.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/CopyObject/#description","title":"Description","text":"<p>Copies <code>count</code> objects starting from <code>srcSlot</code> and pastes them to the object slots starting from <code>destSlot</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/CopyObject/#parameters","title":"Parameters","text":"<code>destSlot</code> <p>Starting slot ID for where to paste the objects.</p> <code>srcSlot</code> <p>Starting slot ID for where to copy the objects.</p> <code>count</code> <p>Amount of objects to copy.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/CopyObject/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/CopyObject/#syntax","title":"Syntax","text":"<pre><code>CopyObject(int destSlot, int srcSlot, int count)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/CopyObject/#example","title":"Example","text":"<pre><code>CopyObject(0, 43, 1)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/CreateTempObject/","title":"CreateTempObject","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/CreateTempObject/#description","title":"Description","text":"<p>Creates a temporary object specified by <code>type</code>, <code>propertyValue</code>, <code>xpos</code>, and <code>ypos</code> near the end of the object list.</p> <p>Note</p> <p>If there are too many temporary objects loaded when this function is called, the engine will start overwritting them. Therefore, it's recommended to only use this function for objects that quickly get destroyed or unloaded.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/CreateTempObject/#parameters","title":"Parameters","text":"<code>type</code> <p>The type of object that will be created.</p> <code>propertyValue</code> <p>The Property Value of the object.</p> <code>xpos</code> <p>The position of the object on the horizontal axis in world-space.</p> <code>ypos</code> <p>The position of the object on the vertical axis in world-space.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/CreateTempObject/#return-value","title":"Return Value","text":"<p>Sets <code>tempObjectPos</code> to the created object's <code>entityPos</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/CreateTempObject/#syntax","title":"Syntax","text":"<pre><code>CreateTempObject(int type, int propertyValue, int xpos, int ypos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/CreateTempObject/#example","title":"Example","text":"<pre><code>CreateTempObject(TypeName[Test Object], 0, object.xpos, object.ypos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/GetObjectValue/","title":"GetObjectValue","text":"<p>Note</p> <p>This function only exists in REV02 and above.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/GetObjectValue/#description","title":"Description","text":"<p>Gets <code>object.valueXX</code> of the object in <code>slot</code> corresponding to <code>valueID</code> and stores it in <code>store</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/GetObjectValue/#parameters","title":"Parameters","text":"<code>store</code> <p>Variable where to store <code>valueID</code>.</p> <code>valueID</code> <p>The corresponding <code>object.valueXX</code> to get, with a range of 0-47.</p> <code>slot</code> <p>The ID of the object from where to get <code>object.value</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/GetObjectValue/#return-value","title":"Return Value","text":"<p>Sets <code>store</code> to the result.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/GetObjectValue/#syntax","title":"Syntax","text":"<pre><code>GetObjectValue(var store, int valueID, int slot)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/GetObjectValue/#example","title":"Example","text":"<pre><code>GetObjectValue(arrayPos0, 34, 2)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ObjectTileCollision/","title":"ObjectTileCollision","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ObjectTileCollision/#description","title":"Description","text":"<p>Tries to collide with the foreground layer based on the position of <code>object.ixpos</code> + <code>xOffset</code>, <code>object.iypos</code> + <code>yOffset</code>.</p> <p>Note</p> <p>This function is best used for checking a tile is present. For moving along tiles, use ObjectTileGrip() instead.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ObjectTileCollision/#parameters","title":"Parameters","text":"<code>cSide</code> <p>Determines to which side of the tile the object has to collide. Can be <code>CSIDE_FLOOR</code>, <code>CSIDE_LWALL</code>, <code>CSIDE_RWALL</code>, or <code>CSIDE_ROOF</code>. In Sonic Origins, <code>CSIDE_LENTITY</code> and <code>CSIDE_RENTITY</code> are available as well.</p> <code>xOffset</code> <p>Horizontal offset of the object.</p> <code>yOffset</code> <p>Vertical offset of the object.</p> <code>cPlane</code> <p>Collision plane to take into account.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ObjectTileCollision/#return-value","title":"Return Value","text":"<p>Sets <code>checkResult</code> to <code>true</code> if there was collision; otherwise, it's set to <code>false</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ObjectTileCollision/#syntax","title":"Syntax","text":"<pre><code>ObjectTileCollision(int cSide, int xOffset, int yOffset, int cPlane)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ObjectTileCollision/#example","title":"Example","text":"<pre><code>ObjectTileCollision(CSIDE_LWALL, -15, -4, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ObjectTileGrip/","title":"ObjectTileGrip","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ObjectTileGrip/#description","title":"Description","text":"<p>Tries to collide with the foreground layer based on the position of <code>object.ixpos</code> + <code>xOffset</code>, <code>object.iypos</code> + <code>yOffset</code>. TODO: this needs a better description to differentiate it from ObjectTileCollision()</p> <p>Note</p> <p>This function is best used to handle moving along surfaces. For handling simpler collision, use ObjectTileCollision() instead.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ObjectTileGrip/#parameters","title":"Parameters","text":"<code>cSide</code> <p>Determines to which side of the tile the object has to collide. Can be <code>CSIDE_FLOOR</code>, <code>CSIDE_LWALL</code>, <code>CSIDE_RWALL</code>, or <code>CSIDE_ROOF</code>. In Sonic Origins, <code>CSIDE_LENTITY</code> and <code>CSIDE_RENTITY</code> are available as well.</p> <code>xOffset</code> <p>Horizontal offset of the object.</p> <code>yOffset</code> <p>Vertical offset of the object.</p> <code>cPlane</code> <p>Collision plane to take into account.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ObjectTileGrip/#return-value","title":"Return Value","text":"<p>Sets <code>checkResult</code> to <code>true</code> if there was collision; otherwise, it's set to <code>false</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ObjectTileGrip/#syntax","title":"Syntax","text":"<pre><code>ObjectTileGrip(int cSide, int xOffset, int yOffset, int cPlane)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ObjectTileGrip/#example","title":"Example","text":"<pre><code>ObjectTileGrip(CSIDE_RWALL, 8, -12, 0)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ProcessObjectControl/","title":"ProcessObjectControl","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ProcessObjectControl/#description","title":"Description","text":"<p>Handles object input variables.</p> <p>Note</p> <p>In standalone RSDKv4, this function has no effect unless <code>object.controlMode</code> is set to <code>0</code>. In RSDKv5U, <code>object.controlMode</code> must be lower than <code>4</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ProcessObjectControl/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ProcessObjectControl/#return-value","title":"Return Value","text":"<ul> <li>Sets <code>object.up</code>, <code>object.down</code>, <code>object.left</code>, and <code>object.right</code> to their equivalent <code>keyDown</code> values.</li> <li>Sets <code>object.jumpPress</code> to <code>true</code> if <code>keyPress.buttonA</code>, <code>keyPress.buttonB</code>, or <code>keyPress.buttonC</code> are true; otherwise, it's set to <code>false</code>.</li> <li>Sets <code>object.jumpHold</code> to <code>true</code> if <code>keyDown.buttonA</code>, <code>keyDown.buttonB</code>, or <code>keyDown.buttonC</code> are true; otherwise, it's set to <code>false</code>.</li> </ul> <p>Note</p> <p>In RSDKv5U, the controller ID used for the inputs is the value of <code>object.controlMode</code> plus 1.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ProcessObjectControl/#example","title":"Example","text":"<pre><code>ProcessObjectControl()\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ProcessObjectMovement/","title":"ProcessObjectMovement","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ProcessObjectMovement/#description","title":"Description","text":"<p>Handles tile collision of an object/player.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ProcessObjectMovement/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ProcessObjectMovement/#return-value","title":"Return Value","text":"<ul> <li>Handles movement, both on the ground and in the air.</li> <li>Sets <code>object.collisionMode</code> to <code>CMODE_FLOOR</code>, <code>CMODE_LWALL</code>, <code>CMODE_RWALL</code>, or <code>CMODE_ROOF</code> depending on the object's angle, along with updating <code>player.angle</code> based on the current tile stepped.</li> <li>Updates <code>object.speed</code>, <code>object.xvel</code>, and <code>object.yvel</code>.</li> <li>Determines if the character is <code>flailing</code>, <code>pushing</code>, or is now in the air.</li> </ul>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ProcessObjectMovement/#example","title":"Example","text":"<pre><code>ProcessObjectMovement()\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ResetObjectEntity/","title":"ResetObjectEntity","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ResetObjectEntity/#description","title":"Description","text":"<p>Resets an object in position <code>slot</code> with the <code>type</code>, <code>propertyValue</code>, <code>xpos</code>, and <code>ypos</code> specified.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ResetObjectEntity/#parameters","title":"Parameters","text":"<code>slot</code> <p>The index of the object to reset.</p> <code>type</code> <p>The new type of the object.</p> <code>propertyValue</code> <p>The new property value of the object.</p> <code>xpos</code> <p>The new position of the object on the horizontal axis in world-space.</p> <code>ypos</code> <p>The new position of the object on the vertical axis in world-space.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ResetObjectEntity/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ResetObjectEntity/#syntax","title":"Syntax","text":"<pre><code>ResetObjectEntity(int slot, int type, int propertyValue, int xpos, int ypos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/ResetObjectEntity/#example","title":"Example","text":"<pre><code>ResetObjectEntity(object.entityPos, TypeName[Test Object], 0, object.xpos, object.ypos)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/SetObjectRange/","title":"SetObjectRange","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/SetObjectRange/#description","title":"Description","text":"<p>Changes internal bounds, affecting all objects. Used mainly so that objects behave the same regardless of current screen width in attract mode.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/SetObjectRange/#parameters","title":"Parameters","text":"<code>width</code> <p>The new horizantal boundaries for objects.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/SetObjectRange/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/SetObjectRange/#syntax","title":"Syntax","text":"<pre><code>SetObjectRange(int width)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/SetObjectRange/#example","title":"Example","text":"<pre><code>SetObjectRange(424)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/SetObjectValue/","title":"SetObjectValue","text":"<p>Note</p> <p>This function only exists in REV02 and above.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/SetObjectValue/#description","title":"Description","text":"<p>Sets <code>object.valueXX</code> of the object in <code>slot</code> corresponding to <code>valueID</code> to <code>value</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/SetObjectValue/#parameters","title":"Parameters","text":"<code>value</code> <p>New value for <code>object.valueXX</code>.</p> <code>valueID</code> <p>The corresponding <code>object.valueXX</code> to set, with a range of 0-47.</p> <code>slot</code> <p>The ID of the object to assign the new <code>object.value</code> value.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/SetObjectValue/#return-value","title":"Return Value","text":"<p>Sets <code>object.valueXX</code> of the object in <code>slot</code> corresponding to <code>valueID</code> to <code>value</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/SetObjectValue/#syntax","title":"Syntax","text":"<pre><code>SetObjectValue(int value, int valueID, int slot)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Object/SetObjectValue/#example","title":"Example","text":"<pre><code>SetObjectValue(3, 24, 7)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/CheckCurrentStageFolder/","title":"CheckCurrentStageFolder","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/CheckCurrentStageFolder/#description","title":"Description","text":"<p>Reads the name of the current stage's folder.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/CheckCurrentStageFolder/#parameters","title":"Parameters","text":"<code>checkFolder</code> <p>The string to match.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/CheckCurrentStageFolder/#return-value","title":"Return Value","text":"<p>Sets <code>checkResult</code> to <code>true</code> if the current folder's name matches <code>checkFolder</code>; otherwise, it's set to <code>false</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/CheckCurrentStageFolder/#syntax","title":"Syntax","text":"<pre><code>CheckCurrentStageFolder(string checkFolder)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/CheckCurrentStageFolder/#examples","title":"Examples","text":"<pre><code>CheckCurrentStageFolder(\"Zone01\")\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/Copy16x16Tile/","title":"Copy16x16Tile","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/Copy16x16Tile/#description","title":"Description","text":"<p>Copies the tileset image data of <code>srcTile</code> to <code>dstTile</code>.</p> <p>Tip</p> <p>This function is used for animated tiles.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/Copy16x16Tile/#parameters","title":"Parameters","text":"<code>dstTile</code> <p>The tile that will be overwritten.</p> <code>srcTile</code> <p>The tile that will be copied.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/Copy16x16Tile/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/Copy16x16Tile/#syntax","title":"Syntax","text":"<pre><code>Copy16x16Tile(int dstTile, int srcTile)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/Copy16x16Tile/#example","title":"Example","text":"<pre><code>Copy16x16Tile(174, 173)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/Get16x16TileInfo/","title":"Get16x16TileInfo","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/Get16x16TileInfo/#description","title":"Description","text":"<p>Gets the value for <code>infoType</code> from the tile at <code>tileX</code>, <code>tileY</code> and stores it in <code>store</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/Get16x16TileInfo/#parameters","title":"Parameters","text":"<code>store</code> <p>The variable that will store the tile's specified <code>infoType</code> data.</p> <code>tileX</code> <p>Position of the 16x16 tile in the map on the horizontal axis.</p> <code>tileY</code> <p>Position of the 16x16 tile in the map on the vertical axis.</p> <code>infoType</code> <p>The ID for the type of info read from the tile. The valid values are:</p> <ul> <li>0 (<code>TILEINFO_INDEX</code>)</li> <li>1 (<code>TILEINFO_DIRECTION</code>)</li> <li>2 (<code>TILEINFO_VISUALPLANE</code>)</li> <li>3 (<code>TILEINFO_SOLIDITYA</code>)</li> <li>4 (<code>TILEINFO_SOLIDITYB</code>)</li> <li>5 (<code>TILEINFO_FLAGSA</code>)</li> <li>6 (<code>TILEINFO_ANGLEA</code>)</li> <li>7 (<code>TILEINFO_FLAGSB</code>)</li> <li>8 (<code>TILEINFO_ANGLEB</code>)</li> </ul>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/Get16x16TileInfo/#return-value","title":"Return Value","text":"<p>Sets <code>store</code> to the chunk ID.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/Get16x16TileInfo/#syntax","title":"Syntax","text":"<pre><code>Get16x16TileInfo(var store, int tileX, int tileY, int infoType)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/Get16x16TileInfo/#example","title":"Example","text":"<pre><code>Get16x16TileInfo(object.value2, 25, 24, 8)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/GetTileLayerEntry/","title":"GetTileLayerEntry","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/GetTileLayerEntry/#description","title":"Description","text":"<p>Gets the ID of the chunk at <code>chunkX</code>, <code>chunkY</code> in tile layer <code>layer</code> and stores it in <code>store</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/GetTileLayerEntry/#parameters","title":"Parameters","text":"<code>store</code> <p>The variable that will store the chunk.</p> <code>layer</code> <p>The ID of the layer where the chunk comes from. The valid values are:</p> <ul> <li>0 (<code>DEFORM_FG</code>)</li> <li>1 (<code>DEFORM_FG_WATER</code>)</li> <li>2 (<code>DEFORM_BG</code>)</li> <li>3 (<code>DEFORM_BG_WATER</code>)</li> </ul> <code>chunkX</code> <p>Position of the 128x128 chunk in the map on the horizontal axis.</p> <code>chunkY</code> <p>Position of the 128x128 chunk in the map on the vertical axis.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/GetTileLayerEntry/#return-value","title":"Return Value","text":"<p>Sets <code>store</code> to the chunk ID.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/GetTileLayerEntry/#syntax","title":"Syntax","text":"<pre><code>GetTileLayerEntry(var store, int layer, int chunkX, int chunkY)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/GetTileLayerEntry/#example","title":"Example","text":"<pre><code>GetTileLayerEntry(object.value2, 0, 24, 96)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/LoadStage/","title":"LoadStage","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/LoadStage/#description","title":"Description","text":"<p>Loads a stage based on <code>stage.activeList</code> and <code>stage.listPos</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/LoadStage/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/LoadStage/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/LoadStage/#example","title":"Example","text":"<pre><code>LoadStage()\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/Set16x16TileInfo/","title":"Set16x16TileInfo","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/Set16x16TileInfo/#description","title":"Description","text":"<p>Sets the value for <code>infoType</code> from the tile at <code>tileX</code>, <code>tileY</code> to <code>value</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/Set16x16TileInfo/#parameters","title":"Parameters","text":"<code>value</code> <p>The new value for the tile's specified <code>infoType</code>.</p> <code>tileX</code> <p>Position of the 16x16 tile in the map on the horizontal axis.</p> <code>tileY</code> <p>Position of the 16x16 tile in the map on the vertical axis.</p> <code>infoType</code> <p>The ID for the type of info that will be overwritten for the tile. The valid values are:</p> <ul> <li>0 (<code>TILEINFO_INDEX</code>)</li> <li>1 (<code>TILEINFO_DIRECTION</code>)</li> <li>2 (<code>TILEINFO_VISUALPLANE</code>)</li> <li>3 (<code>TILEINFO_SOLIDITYA</code>)</li> <li>4 (<code>TILEINFO_SOLIDITYB</code>)</li> <li>5 (<code>TILEINFO_FLAGSA</code>)</li> <li>6 (<code>TILEINFO_ANGLEA</code>)</li> <li>7 (<code>TILEINFO_FLAGSB</code>)</li> <li>8 (<code>TILEINFO_ANGLEB</code>)</li> </ul>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/Set16x16TileInfo/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/Set16x16TileInfo/#syntax","title":"Syntax","text":"<pre><code>Set16x16TileInfo(int value, int tileX, int tileY, int infoType)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/Set16x16TileInfo/#example","title":"Example","text":"<pre><code>Set16x16TileInfo(3, temp0, temp1, 7)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/SetLayerDeformation/","title":"SetLayerDeformation","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/SetLayerDeformation/#description","title":"Description","text":"<p>Sets the deformation data array of <code>deformID</code>, based on <code>deformA</code> and <code>deformB</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/SetLayerDeformation/#parameters","title":"Parameters","text":"<code>deformID</code> <p>The ID of the layer to deform, valid values are:</p> <ul> <li>0 (<code>DEFORM_FG</code>)</li> <li>1 (<code>DEFORM_FG_WATER</code>)</li> <li>2 (<code>DEFORM_BG</code>)</li> <li>3 (<code>DEFORM_BG_WATER</code>)</li> </ul> <code>waveLength</code> <p>Length of the wave.</p> <code>waveWidth</code> <p>Width of the wave.</p> <code>waveType</code> <p>Type of wave; 0 will affect the entire layer, 1 will use <code>yPos</code> and <code>waveSize</code> to determine the area of effect.</p> <code>yPos</code> <p>The offset from where the wave will start.</p> <code>waveSize</code> <p>The size of the wave.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/SetLayerDeformation/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/SetLayerDeformation/#syntax","title":"Syntax","text":"<pre><code>SetLayerDeformation(int deformID, int waveLength, int waveWidth, int waveType, int yPos, int waveSize)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/SetLayerDeformation/#example","title":"Example","text":"<pre><code>SetLayerDeformation(0, 16, 2, 1, 96, 128)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/SetTileLayerEntry/","title":"SetTileLayerEntry","text":"","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/SetTileLayerEntry/#description","title":"Description","text":"<p>Sets the chunk at <code>chunkX</code>, <code>chunkY</code> in tile layer <code>layer</code> to the index of <code>value</code>.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/SetTileLayerEntry/#parameters","title":"Parameters","text":"<code>value</code> <p>The index value of the new chunk.</p> <code>layer</code> <p>The ID of the layer where the chunk comes from. The valid values are:</p> <ul> <li>0 (<code>DEFORM_FG</code>)</li> <li>1 (<code>DEFORM_FG_WATER</code>)</li> <li>2 (<code>DEFORM_BG</code>)</li> <li>3 (<code>DEFORM_BG_WATER</code>)</li> </ul> <code>chunkX</code> <p>Position of the 128x128 chunk in the map on the horizontal axis.</p> <code>chunkY</code> <p>Position of the 128x128 chunk in the map on the vertical axis.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/SetTileLayerEntry/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/SetTileLayerEntry/#syntax","title":"Syntax","text":"<pre><code>SetTileLayerEntry(int value, int layer, int chunkX, int chunkY)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Functions/Stages/SetTileLayerEntry/#example","title":"Example","text":"<pre><code>SetTileLayerEntry(35, 0, 24, 96)\n</code></pre>","tags":["RSDKv4"]},{"location":"RSDKv4/Overview/","title":"RSDKv4 Overview","text":"<p>TODO: this</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Overview/DevMenu/","title":"Dev Menu","text":"<p>The Dev Menu is a debug menu included with RSDKv4, disabled by default. The menu includes several features useful for debugging games in the engine.</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Overview/DevMenu/#enabling","title":"Enabling","text":"<p>The Dev Menu is normally inaccessible, however in the RSDKv4 Decompilation, it can be enabled by setting <code>DevMenu</code> to <code>true</code> in the settings.ini file, like so:</p> <pre><code>[Dev]\n; Enable this flag to activate dev menu via the ESC key\nDevMenu=true ; (1)!\n; Enable this flag to activate features used for debugging the engine (may result in slightly slower game speed)\nEngineDebugMode=false\n; Enable this flag to force the engine to load from the scripts folder instead of from bytecode\nTxtScripts=false\n...\n</code></pre> <ol> <li>Make sure that the decomp is not running while editing settings.ini; otherwise, your changes will be reverted upon closing the decomp.</li> </ol>","tags":["RSDKv4"]},{"location":"RSDKv4/Overview/DevMenu/#decomp-debug-controls","title":"Decomp Debug Controls","text":"Key Command Esc Opens the Dev Menu. Backspace While held down, speeds up the game to 8x speed. F12 / Pause (F7 on Mac) Toggles step-over mode. F11 / Ins (F6 on Mac) If in step-over mode, steps over to the next frame. F1 Loads the first scene in the Presentation stage list. F2 Loads the previous scene in the scene list. If pressed in the first scene, it will load the last one. F3 Loads the next scene in the scene list. If pressed in the last scene, it will load the first one. F5 Reloads the current scene. F8 Toggles visualizing active touchscreen hitboxes. F9 Toggles visualizing active hitboxes. F10 Toggles displaying the currently loaded palettes.","tags":["RSDKv4"]},{"location":"RSDKv4/Overview/DevMenu/#menu","title":"Menu","text":"<p>You can open the Dev Menu at any time in the RSDKv4 Decompilation by pressing Esc or by selecting it in the Help &amp; Options or pause menus.</p> <p>TODO: explain each submenu</p>","tags":["RSDKv4"]},{"location":"RSDKv4/Overview/DevMenu/#other-effects","title":"Other Effects","text":"<p>When the Dev Menu is enabled in the RSDKv4 Decompilation, the global variable <code>options.devMenuFlag</code> is set to <code>true</code> upon loading the GameConfig, if such global variable exists.</p>","tags":["RSDKv4"]},{"location":"RSDKv5/","title":"Retro Engine v5","text":"<p>Retro Engine v5, debuting in 2017, is the version of RSDK used for Sonic Mania (Plus). A version of the engine adding backwards compatibility with RSDKv3/4 games, among other changes, called Retro Engine v5Ultimate (v5U), debuted in 2022, being used in Sonic Origins. TODO: write info about RSDKv5(U) and anything relating to Mania/S3</p>","tags":["RSDKv5"]},{"location":"RSDKv5/#documentation","title":"Documentation","text":"<ul> <li>Overview</li> <li>Events</li> <li>Functions</li> </ul>","tags":["RSDKv5"]},{"location":"RSDKv5/#tools","title":"Tools","text":"<ul> <li>RetroED</li> <li>RSDK Animation Editor</li> </ul>","tags":["RSDKv5"]},{"location":"RSDKv5/#tutorials","title":"Tutorials","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/#other-resources","title":"Other Resources","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Decompilation/","title":"RSDKv5 Decompilation","text":"<p>TODO: everything</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Decompilation/#tutorials","title":"Tutorials","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Events/","title":"RSDKv5 Events","text":"<p>Events can be easily thought of as \"default functions\" and are all called periodically during gameplay. To define events, you simply have to follow the syntax required for them. The definable events are:</p> <ul> <li>Update()</li> <li>LateUpdate()</li> <li>StaticUpdate()</li> <li>Draw()</li> <li>Create()</li> <li>StageLoad()</li> <li>EditorDraw()</li> <li>EditorLoad()</li> <li>Serialize()</li> <li>StaticLoad() (RSDKv5U Only)</li> </ul>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Create/","title":"Create","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Create/#description","title":"Description","text":"<p>Called on engine initialization, or when the game code manually creates an entity (usually on StageLoad() or when a new entity is created).</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Create/#parameters","title":"Parameters","text":"<code>data</code> <p>Optional pointer to user defined data (object type, value, etc). Will be <code>NULL</code> for entities loaded from the scene layout.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Create/#syntax","title":"Syntax","text":"CC++ <pre><code>void Create(void *data);\n</code></pre> <pre><code>void Create(void *data);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Create/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_Create(void *data) { }\n</code></pre> <pre><code>void MyObject::Create(void *data) { }\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Draw/","title":"Draw","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Draw/#description","title":"Description","text":"<p>Called once every frame per entity if Entity::active allows for it. The ordering is based the value of Entity::drawGroup.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Draw/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Draw/#syntax","title":"Syntax","text":"CC++ <pre><code>void Draw();\n</code></pre> <pre><code>void Draw();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Draw/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_Draw() { }\n</code></pre> <pre><code>void MyObject::Draw() { }\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/EditorDraw/","title":"EditorDraw","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Events/EditorDraw/#description","title":"Description","text":"<p>Similar to Draw(), though only called when the object class is loaded in via an editor (such as RetroED). Used to draw sprites in the editor, called once per frame, per entity.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/EditorDraw/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/EditorDraw/#syntax","title":"Syntax","text":"CC++ <pre><code>void EditorDraw();\n</code></pre> <pre><code>void EditorDraw();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/EditorDraw/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_EditorDraw() { }\n</code></pre> <pre><code>void MyObject::EditorDraw() { }\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/EditorLoad/","title":"EditorLoad","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Events/EditorLoad/#description","title":"Description","text":"<p>Similar to StageLoad(), though only called when the object class is loaded in via an editor (such as RetroED). Used to load assets that will be used in EditorDraw().</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/EditorLoad/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/EditorLoad/#syntax","title":"Syntax","text":"CC++ <pre><code>void EditorLoad();\n</code></pre> <pre><code>static void EditorLoad();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/EditorLoad/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_EditorLoad() { }\n</code></pre> <pre><code>void MyObject::EditorLoad() { }\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/LateUpdate/","title":"LateUpdate","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Events/LateUpdate/#description","title":"Description","text":"<p>Same as Update(), though this is called after Update() was called for all entities and all type and draw list sorting has been done.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/LateUpdate/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/LateUpdate/#syntax","title":"Syntax","text":"CC++ <pre><code>void LateUpdate();\n</code></pre> <pre><code>void LateUpdate();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/LateUpdate/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_LateUpdate() { }\n</code></pre> <pre><code>void MyObject::LateUpdate() { }\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Serialize/","title":"Serialize","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Serialize/#description","title":"Description","text":"<p>Called once per object class, upon the scene being loaded, no logic should be written here, only calls to RSDK_EDITABLE_VAR.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Serialize/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Serialize/#syntax","title":"Syntax","text":"CC++ <pre><code>void Serialize();\n</code></pre> <pre><code>static void Serialize();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Serialize/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_Serialize() { }\n</code></pre> <pre><code>void MyObject::Serialize() { }\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/StageLoad/","title":"StageLoad","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Events/StageLoad/#description","title":"Description","text":"<p>Called once per object class, once when the stage loads. Used for loading assets, and initalizing any static variables.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/StageLoad/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/StageLoad/#syntax","title":"Syntax","text":"CC++ <pre><code>void StageLoad();\n</code></pre> <pre><code>static void StageLoad();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/StageLoad/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_StageLoad() { }\n</code></pre> <pre><code>void MyObject::StageLoad() { }\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/StaticLoad/","title":"StaticLoad","text":"<p>Note</p> <p>This function only exists in RSDKv5U.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/StaticLoad/#description","title":"Description","text":"<p>Called once per object class, once when the static variables are allocated. Used for initializing any static variables. It's basically an RSDK implementation of a constructor in C++.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/StaticLoad/#parameters","title":"Parameters","text":"<code>sVars</code> <p>A pointer to the static variables that will be initialized during this event.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/StaticLoad/#syntax","title":"Syntax","text":"CC++ <pre><code>void StaticLoad(Object[ObjectName] *sVars);\n</code></pre> <pre><code>static void StaticLoad(Static *sVars);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/StaticLoad/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_StaticLoad(ObjectMyObject *sVars) { }\n</code></pre> <pre><code>void MyObject::StaticLoad(Static *sVars) { }\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/StaticUpdate/","title":"StaticUpdate","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Events/StaticUpdate/#description","title":"Description","text":"<p>Called once per object class, once per frame if Object::active allows for it. This event is called before any Update() events are called.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/StaticUpdate/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/StaticUpdate/#syntax","title":"Syntax","text":"CC++ <pre><code>void StaticUpdate();\n</code></pre> <pre><code>static void StaticUpdate();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/StaticUpdate/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_StaticUpdate() { }\n</code></pre> <pre><code>void MyObject::StaticUpdate() { }\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Update/","title":"Update","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Update/#description","title":"Description","text":"<p>Called once every frame per entity if Entity::active allows for it.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Update/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Update/#syntax","title":"Syntax","text":"CC++ <pre><code>void Update();\n</code></pre> <pre><code>void Update();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Events/Update/#examples","title":"Examples","text":"CC++ <pre><code>void MyObject_Update() { }\n</code></pre> <pre><code>void MyObject::Update() { }\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/","title":"RSDKv5 Functions","text":"<p>Note</p> <p>All functions' names and parameter lists are mainly written for the C API, but their usage differs in the C++ API. Refer to the Syntax and Example(s) sections of each page for how to use the functions in each language's API.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/#audio","title":"Audio","text":"Function Description GetSfx Retrieves the ID of the given sound effect. PlaySfx Plays the sound effect in the given slot, looping it if a loop point is set. StopSfx Stops all instances of the given sound effect playing. PlayStream Plays the given music file, looping it if set to do so. SetChannelAttributes Sets the volume, panning, and speed of the given channel to the given values. StopChannel Stops playing the currently playing audio in the given channel, if any is playing. PauseChannel Pauses the currently playing audio in the given channel, if any is playing. ResumeChannel If the given channel's audio has been paused with PauseChannel(), resumes playing the audio. SfxPlaying Checks if the given sound effect is playing in any channels. ChannelActive Checks if a channel is currently playing audio or is paused. GetChannelPos Gets the position of the current track in the given channel. StopAllSfx Stops all instances of all sound effects playing. RSDKv5U only.","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/#spritesheets","title":"SpriteSheets","text":"Function Description LoadSpriteSheet Loads a spritesheet and returns the ID of it.","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/#graphics","title":"Graphics","text":"Function Description LoadSpriteAnimation Loads a SpriteAnimation and returns the ID of it. CreateSpriteAnimation Creates a SpriteAnimation based on the given parameters and returns the ID of it. SetSpriteAnimation Applies a set of frames to an animator. EditSpriteAnimation Replaces the properties of an animation with the given parameters. SetSpriteString Converts a string into a sprite string. FindSpriteAnimation Attempts to find an animation entry by name. GetFrame Retrieves a specific SpriteFrame from a SpriteAnimation. GetHitbox Gets a Hitbox from the animator's current frame. GetFrameID Gets the <code>unicode char</code> value of the animator's current frame. GetStringWidth Retrieves the width of a string in pixels when displayed with DrawText(). ProcessAnimation Processes the animation applied to an animator.","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/#debugging","title":"Debugging","text":"Function Description ClearViewableVariables Clears all loaded viewable variables. AddViewableVariable Adds a viewable variable to the Dev Menu.","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/#printing","title":"Printing","text":"Function Description PrintLog Prints a message to the console. PrintText Prints a <code>const char</code> string to the console. PrintString Prints a String variable to the console. PrintUInt32 Prints an unsigned integer to the console. PrintInt32 Prints a signed integer to the console. PrintFloat Prints a float value to the console. PrintVector2 Prints a Vector2 variable to the console. PrintHitbox Prints a Hitbox variable to the console.","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/#objects-entities","title":"Objects &amp; Entities","text":"Function Description RSDK_THIS Defines local pointer <code>self</code> pointing to <code>sceneInfo-&gt;entity</code> using the given object's entity struct. RSDK_THIS_GEN Defines local pointer <code>self</code> pointing to <code>sceneInfo-&gt;entity</code> using a generic entity struct. RSDK_GET_ENTITY Gets the data of the given entity using the given object's entity struct. RSDK_GET_ENTITY_GEN Gets the data of the given entity using a generic entity struct. CREATE_ENTITY Creates a temporary object specified by <code>object</code>, <code>data</code>, <code>x</code>, and <code>y</code> near the end of the object list. INIT_ENTITY Initializes the <code>active</code>, <code>visible</code>, and <code>updateRange</code> values of the given entity. GetEntitySlot Gets the slot ID of an entity. GetEntityCount Gets the count of the amount of entities of the given object type currently in the stage. GetDrawListRefSlot Gets the entity slot in the given draw group at the given position. GetDrawListRef Gets a pointer to the entity in the given draw group at the given position. ResetEntity Resets <code>entity</code> with the <code>classID</code> and <code>data</code> specified. ResetEntitySlot Resets the entity in <code>slot</code> with the <code>classID</code> and <code>data</code> specified. CopyEntity Copies an entity into another entity. CheckOnScreen Checks if the given entity is on screen based on the given range. CheckPosOnScreen Checks if the given position is on screen based on the given range. AddDrawListRef Adds a reference to an entity to a draw group. SwapDrawListEntries Swaps the draw list positions of <code>slot1</code> and <code>slot2</code> in <code>drawGroup</code>. SetDrawGroupProperties Sets the properties of <code>drawGroup</code>. FindObject Finds a loaded object by name and retrieves its ID. destroyEntity Clears an entity's data. destroyEntitySlot Clears the entity of the given slot's data.","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/#scene-management","title":"Scene Management","text":"Function Description SetScene Sets the scene category and list position to the matching scene entry in the GameConfig. SetEngineState Sets the state of the engine. ForceHardReset Sets whether the next stage reload should reload all assets. CheckValidScene Checks if <code>SceneInfo-&gt;activeCategory</code> and <code>SceneInfo-&gt;listPos</code> point to a valid scene in the GameConfig. CheckSceneFolder Reads the name of the current stage's folder. LoadScene Loads a stage based on <code>SceneInfo-&gt;activeCategory</code> and <code>SceneInfo-&gt;listPos</code>.","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/#videos-images","title":"Videos &amp; Images","text":"Function Description LoadVideo Loads and plays a video. LoadImage Loads and displays an image.","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/#miscellaneous","title":"Miscellaneous","text":"Function Description NotifyCallback Sends the given callback to communicate to Hedgehog Engine 2. Sonic Origins only. HasNotifyCallback Checks if the game has access to NotifyCallback(). Sonic Origins only. SetGameFinished Notifies the engine that the game has been finished. Sonic Origins only.","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/#editor","title":"Editor","text":"Function Description RSDK_EDITABLE_VAR Sets a variable from the given object's entity struct to be editable in an editor. RSDK_ACTIVE_VAR Sets a variable to be the \"active variable\" when using RSDK_ENUM_VAR(). RSDK_ENUM_VAR Adds an enum variable to the current active variable. showGizmos Checks if gizmos should be visible for this object. RSDK_DRAWING_OVERLAY Enables/disables \"overlay\" mode when drawing.","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/ChannelActive/","title":"ChannelActive","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/ChannelActive/#description","title":"Description","text":"<p>Checks if a channel is currently playing audio or is paused.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/ChannelActive/#parameters","title":"Parameters","text":"<code>channel</code> <p>The ID of the channel to check.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/ChannelActive/#return-value","title":"Return Value","text":"<p>Returns the result of the check as a <code>bool32</code>. The result will be <code>false</code> if the channel is in an idle state; otherwise, it will be <code>true</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/ChannelActive/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.ChannelActive(uint32 channel);\n</code></pre> <pre><code>channels[uint8 channel].IsActive();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/ChannelActive/#example","title":"Example","text":"CC++ <pre><code>bool32 isActive = RSDK.ChannelActive(0);\n</code></pre> <pre><code>bool32 isActive = channels[0].IsActive();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/GetChannelPos/","title":"GetChannelPos","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/GetChannelPos/#description","title":"Description","text":"<p>Gets the position of the current track in the given channel.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/GetChannelPos/#parameters","title":"Parameters","text":"<code>channel</code> <p>The ID of the channel to check.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/GetChannelPos/#return-value","title":"Return Value","text":"<p>Returns the current position of the channel's track, in samples, as a <code>uint32</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/GetChannelPos/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.GetChannelPos(uint32 channel);\n</code></pre> <pre><code>channels[uint8 channel].AudioPos();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/GetChannelPos/#example","title":"Example","text":"CC++ <pre><code>uint32 trackPos = RSDK.GetChannelPos(0);\n</code></pre> <pre><code>uint32 trackPos = channels[0].AudioPos();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/GetSfx/","title":"GetSfx","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/GetSfx/#description","title":"Description","text":"<p>Retrieves the ID of the given sound effect.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/GetSfx/#parameters","title":"Parameters","text":"<code>sfxPath</code> <p>The path of the sound effect. SFX must be defined in the GameConfig/StageConfig in order to be valid.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/GetSfx/#return-value","title":"Return Value","text":"<p>Returns the ID of the sound effect as a <code>uint16</code>. The return value will be <code>-1</code> if the sound effect is invalid.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/GetSfx/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.GetSfx(const char *sfxName);\n</code></pre> <pre><code>SoundFX.Get(const char *sfxName);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/GetSfx/#example","title":"Example","text":"CC++ <pre><code>MyObject-&gt;mySfx = RSDK.GetSfx(\"Global/SoundFX.wav\");\n</code></pre> <pre><code>sVars-&gt;mySfx.Get(\"Global/SoundFX.wav\");\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/PauseChannel/","title":"PauseChannel","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/PauseChannel/#description","title":"Description","text":"<p>Pauses the currently playing audio in the given channel, if any is playing. The channel can be resumed with ResumeChannel().</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/PauseChannel/#parameters","title":"Parameters","text":"<code>channel</code> <p>The ID of the channel to pause.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/PauseChannel/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/PauseChannel/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.PauseChannel(uint32 channel);\n</code></pre> <pre><code>channels[uint8 channel].Pause();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/PauseChannel/#example","title":"Example","text":"CC++ <pre><code>RSDK.PauseChannel(0);\n</code></pre> <pre><code>channels[0].Pause();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/PlaySfx/","title":"PlaySfx","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/PlaySfx/#description","title":"Description","text":"<p>Plays the sound effect in the given slot, looping it if a loop point is set.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/PlaySfx/#parameters","title":"Parameters","text":"<code>sfx</code> <p>The slot of the sound effect.</p> <code>loopPoint</code> <p>The sound effect's loop point, in samples. <code>0</code> will disable looping, <code>1</code> will loop from the beginning of the sound effect, and anything else is the sample to loop from.</p> <code>priority</code> <p>The priority of the sound effect.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/PlaySfx/#return-value","title":"Return Value","text":"<p>Returns the ID of the channel the sound effect plays in as an <code>int32</code>. The return value will be <code>-1</code> if the sound effect failed to play.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/PlaySfx/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.PlaySfx(uint16 sfx, uint32 loopPoint, uint32 priority);\n</code></pre> <p><pre><code>SoundFX.Play(uint32 loopPoint, uint32 priority);\n</code></pre> <pre><code>SoundFX.Play(); // loopPoint and priority default to 0 and 0xFF, respectively\n</code></pre></p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/PlaySfx/#example","title":"Example","text":"CC++ <pre><code>RSDK.PlaySfx(MyObject-&gt;mySfx, 0, 0xFF);\n</code></pre> <p><pre><code>sVars-&gt;mySfx.Play(0, 0xFF);\n</code></pre> <pre><code>sVars-&gt;mySfx.Play();\n</code></pre></p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/PlayStream/","title":"PlayStream","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/PlayStream/#description","title":"Description","text":"<p>Plays the given music file, looping it if set to do so.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/PlayStream/#parameters","title":"Parameters","text":"<code>filename</code> <p>The file path to load the music file from, relative to <code>Data/Music/</code>. The music file must be in OGG format.</p> <code>id</code> <p>The ID of the channel to play the track in. If the given number is <code>16</code> or higher, the channel will be automatically chosen.</p> <code>startPos</code> <p>The point of the track to start at, in samples. <code>0</code> will play the track from the beginning.</p> <code>loopPoint</code> <p>The track's loop point, in samples. <code>0</code> will disable looping, <code>1</code> will loop from the beginning of the track, and anything else is the sample to loop from.</p> <code>loadASync</code> <p>If true, loads the track asynchronously. This should usually be <code>true</code>, unless the track is for a video/image, in which case it should be <code>false</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/PlayStream/#return-value","title":"Return Value","text":"<p>Returns the ID of the channel the track plays in as an <code>int32</code>. The return value will be <code>-1</code> if the track failed to play.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/PlayStream/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.PlayStream(const char *filename, uint32 slot, uint32 startPos, uint32 loopPoint, bool32 loadASync);\n</code></pre> <pre><code>channels[uint8 slot].PlayStream(const char *filename, uint32 startPos, uint32 loopPoint, bool32 loadASync);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/PlayStream/#examples","title":"Examples","text":"CC++ <p><pre><code>RSDK.PlayStream(\"Test.ogg\", 0, 0, 1, true);\n</code></pre> <pre><code>int32 channelID = RSDK.PlayStream(\"Test2.ogg\", 0, 0, 202752, true);\n</code></pre></p> <p><pre><code>channels[0].PlayStream(\"Test.ogg\", 0, 1, true);\n</code></pre> <pre><code>int32 channelID = channels[0].PlayStream(\"Test2.ogg\", 0, 202752, true);\n</code></pre></p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/ResumeChannel/","title":"ResumeChannel","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/ResumeChannel/#description","title":"Description","text":"<p>If the given channel's audio has been paused with PauseChannel(), resumes playing the audio.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/ResumeChannel/#parameters","title":"Parameters","text":"<code>channel</code> <p>The ID of the channel to resume.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/ResumeChannel/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/ResumeChannel/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.ResumeChannel(uint32 channel);\n</code></pre> <pre><code>channels[uint8 channel].Resume();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/ResumeChannel/#example","title":"Example","text":"CC++ <pre><code>RSDK.ResumeChannel(0);\n</code></pre> <pre><code>channels[0].Resume();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/SetChannelAttributes/","title":"SetChannelAttributes","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/SetChannelAttributes/#description","title":"Description","text":"<p>Sets the volume, panning, and speed of the given channel to the given values.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/SetChannelAttributes/#parameters","title":"Parameters","text":"<code>channel</code> <p>The ID of the channel to set the values for.</p> <code>volume</code> <p>The volume of the channel. The minimum and maximum values are 0.0f and 4.0f respectively, with 1.0f being normal volume.</p> <code>panning</code> <p>The panning of the channel. The minimum and maximum values are -1.0f and 1.0f respectively, with 0.0f being balanced.</p> <code>speed</code> <p>The speed of the channel. Only values above 0.0f are allowed, with 1.0f being normal speed.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/SetChannelAttributes/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/SetChannelAttributes/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.SetChannelAttributes(uint8 channel, float volume, float panning, float speed);\n</code></pre> <pre><code>channels[uint8 channel].SetAttributes(float volume, float panning, float speed);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/SetChannelAttributes/#example","title":"Example","text":"CC++ <pre><code>RSDK.SetChannelAttributes(0, 1.0f, 0.0f, 1.0f);\n</code></pre> <pre><code>channels[0].SetAttributes(1.0f, 0.0f, 1.0f);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/SfxPlaying/","title":"SfxPlaying","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/SfxPlaying/#description","title":"Description","text":"<p>Checks if the given sound effect is playing in any channels.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/SfxPlaying/#parameters","title":"Parameters","text":"<code>sfx</code> <p>The slot of the sound effect.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/SfxPlaying/#return-value","title":"Return Value","text":"<p>Returns the result of the check as a <code>bool32</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/SfxPlaying/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.SfxPlaying(uint16 sfx);\n</code></pre> <pre><code>SoundFX.IsPlaying();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/SfxPlaying/#example","title":"Example","text":"CC++ <pre><code>bool32 isPlaying = RSDK.SfxPlaying(MyObject-&gt;mySfx);\n</code></pre> <pre><code>bool32 isPlaying = sVars-&gt;mySfx.IsPlaying();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/StopAllSfx/","title":"StopAllSfx","text":"<p>Note</p> <p>This function only exists in RSDKv5U.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/StopAllSfx/#description","title":"Description","text":"<p>Stops all instances of all sound effects playing.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/StopAllSfx/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/StopAllSfx/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/StopAllSfx/#example","title":"Example","text":"CC++ <pre><code>RSDK.StopAllSfx();\n</code></pre> <pre><code>RSDK::SoundFX::StopAll();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/StopChannel/","title":"StopChannel","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/StopChannel/#description","title":"Description","text":"<p>Stops playing the currently playing audio in the given channel, if any is playing.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/StopChannel/#parameters","title":"Parameters","text":"<code>channel</code> <p>The ID of the channel to stop.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/StopChannel/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/StopChannel/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.StopChannel(uint32 channel);\n</code></pre> <pre><code>channels[uint8 channel].Stop();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/StopChannel/#example","title":"Example","text":"CC++ <pre><code>RSDK.StopChannel(0);\n</code></pre> <pre><code>channels[0].Stop();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/StopSfx/","title":"StopSfx","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/StopSfx/#description","title":"Description","text":"<p>Stops all instances of the given sound effect playing.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/StopSfx/#parameters","title":"Parameters","text":"<code>sfx</code> <p>The slot of the sound effect.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/StopSfx/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/StopSfx/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.StopSfx(uint16 sfx);\n</code></pre> <pre><code>SoundFX.Stop();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Audio/StopSfx/#example","title":"Example","text":"CC++ <pre><code>RSDK.StopSfx(MyObject-&gt;mySfx);\n</code></pre> <pre><code>sVars-&gt;mySfx.Stop();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Debugging/AddViewableVariable/","title":"AddViewableVariable","text":"<p>Note</p> <p>This function only exists in REV02 and above.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Debugging/AddViewableVariable/#description","title":"Description","text":"<p>Adds a viewable variable to the Dev Menu. Viewable variables exist until the scene is changed or reloaded.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Debugging/AddViewableVariable/#parameters","title":"Parameters","text":"<code>name</code> <p>The display name of the viewable variable in the dev menu. Display names may be a maximum of 15 characters long.</p> <code>value</code> <p>A pointer to the value to be tracked, viewed and edited in the Dev Menu.</p> <code>type</code> <p>The type of the viewable variable, which should match the type of <code>value</code>. See ViewableVarTypes for more info on what types are valid.</p> <code>min</code> <p>The minimum value of the viewable variable (inclusive).</p> <code>max</code> <p>The maximum value of the viewable variable (inclusive).</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Debugging/AddViewableVariable/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Debugging/AddViewableVariable/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.AddViewableVariable(const char *name, void *value, int32 type, int32 min, int32 max);\n</code></pre> <pre><code>Dev::AddViewableVariable(const char *name, void *value, int32 type, int32 min, int32 max);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Debugging/AddViewableVariable/#example","title":"Example","text":"CC++ <pre><code>RSDK.AddViewableVariable(\"Debug Mode\", &amp;SceneInfo-&gt;debugMode, VIEWVAR_BOOL, false, true);\n</code></pre> <pre><code>Dev::AddViewableVariable(\"Debug Mode\", &amp;sceneInfo-&gt;debugMode, Dev::VIEWVAR_BOOL, false, true)\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Debugging/ClearViewableVariables/","title":"ClearViewableVariables","text":"<p>Note</p> <p>This function only exists in REV02 and above.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Debugging/ClearViewableVariables/#description","title":"Description","text":"<p>Clears all loaded viewable variables.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Debugging/ClearViewableVariables/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Debugging/ClearViewableVariables/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Debugging/ClearViewableVariables/#example","title":"Example","text":"CC++ <pre><code>RSDK.ClearViewableVariables();\n</code></pre> <pre><code>Dev::ClearViewableVariables();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_ACTIVE_VAR/","title":"RSDK_ACTIVE_VAR","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_ACTIVE_VAR/#description","title":"Description","text":"<p>Sets a variable to be the \"active variable\" when using RSDK_ENUM_VAR().</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_ACTIVE_VAR/#parameters","title":"Parameters","text":"<code>sVars</code> <p>The static vars of the object class the variable is in.</p> <code>variable</code> <p>The name of the variable to set as active.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_ACTIVE_VAR/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_ACTIVE_VAR/#syntax","title":"Syntax","text":"<pre><code>RSDK_ACTIVE_VAR(sVars, variable);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_ACTIVE_VAR/#example","title":"Example","text":"CC++ <pre><code>RSDK_ACTIVE_VAR(Player, characterID);\n</code></pre> <pre><code>RSDK_ACTIVE_VAR(sVars, characterID);\n</code></pre> <p>Note</p> <p>This is a macro, which is designed to make programming in RSDK easier. The underlying function is: <pre><code>void (*SetActiveVariable)(int32 classID, const char *name)\n</code></pre> <code>classID</code> is the object's classID, and <code>name</code> is the variable's name as a string. The underlying function should NEVER be called as it's less safe than the macro. This note is here for anyone wishing to learn about the internals or hoping to develop a wrapper for another language that doesn't support macros.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_DRAWING_OVERLAY/","title":"RSDK_DRAWING_OVERLAY","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_DRAWING_OVERLAY/#description","title":"Description","text":"<p>Enables/disables \"overlay\" mode when drawing.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_DRAWING_OVERLAY/#parameters","title":"Parameters","text":"<code>isDrawingOverlay</code> <p>Determines if the following code should be considered an \"overlay\", used for gizmos and stuff that shouldn't effect the selection area.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_DRAWING_OVERLAY/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_DRAWING_OVERLAY/#syntax","title":"Syntax","text":"<pre><code>RSDK_DRAWING_OVERLAY(bool32 isDrawingOverlay);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_DRAWING_OVERLAY/#example","title":"Example","text":"<pre><code>RSDK_DRAWING_OVERLAY(true);\n\n// draw sprites and stuff\n\nRSDK_DRAWING_OVERLAY(false);\n</code></pre> <p>Note</p> <p>This is a macro, which is designed to make programming in RSDK easier. The underlying logic is: <pre><code>SceneInfo-&gt;debugMode = isDrawingOverlay\n</code></pre> <code>SceneInfo-&gt;debugMode</code> is the flag that determines if drawing is in \"overlay mode\" or not. The underlying logc should NEVER be used as it's less safe than the macro. This note is here for anyone wishing to learn about the internals or hoping to develop a wrapper for another language that doesn't support macros.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_EDITABLE_VAR/","title":"RSDK_EDITABLE_VAR","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_EDITABLE_VAR/#description","title":"Description","text":"<p>Sets a variable from the given object's entity struct to be editable in an editor.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_EDITABLE_VAR/#parameters","title":"Parameters","text":"<code>object</code> <p>The name of the object the variable is in.</p> <code>type</code> <p>The variable type of the variable.</p> <code>var</code> <p>The name of the variable to add.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_EDITABLE_VAR/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_EDITABLE_VAR/#syntax","title":"Syntax","text":"<pre><code>RSDK_EDITABLE_VAR(object, type, var);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_EDITABLE_VAR/#example","title":"Example","text":"<p><pre><code>RSDK_EDITABLE_VAR(MyObject, VAR_UINT8, direction);\n</code></pre> <pre><code>RSDK_EDITABLE_VAR(MyObject, VAR_ENUM, size);\n</code></pre></p> <p>Note</p> <p>This is a macro, which is designed to make programming in RSDK easier. The underlying function is:</p> CC++ <pre><code>RSDK.SetEditableVar(type, #var, (uint8)object-&gt;classID, offsetof(Entity##object, var))\n</code></pre> <pre><code>sVars-&gt;EditableVar(type, #var, offsetof(object, var))\n</code></pre> <p>The underlying function should NEVER be called as it's less safe than the macro. This note is here for anyone wishing to learn about the internals or hoping to develop a wrapper for another language that doesn't support macros.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_ENUM_VAR/","title":"RSDK_ENUM_VAR","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_ENUM_VAR/#description","title":"Description","text":"<p>Adds an enum variable to the current active variable.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_ENUM_VAR/#parameters","title":"Parameters","text":"<code>varName</code> <p>The name of the enum var to add to the active variable. The value of the enum var will be the the amount of enum vars added minus 1, so the first enum var will have a value of <code>0</code>, the second enum var will have a value of <code>1</code>, etc.</p> <code>varValue</code> <p>Unused. The purpose of this parameter is to visibly show what enum var correlates to what enum value in the code; it never does anything in the code due to the way the system works in RSDKv5.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_ENUM_VAR/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_ENUM_VAR/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK_ENUM_VAR(const char* varName, int32 varValue);\n</code></pre> <pre><code>RSDK_ENUM_VAR(const char* varName);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/RSDK_ENUM_VAR/#example","title":"Example","text":"CC++ <pre><code>RSDK_ENUM_VAR(\"Sonic\", PLAYER_CHAR_SONIC);\n</code></pre> <pre><code>RSDK_ENUM_VAR(\"Sonic\");\n</code></pre> <p>Note</p> <p>This is a macro, which is designed to make programming in RSDK easier. The underlying function is: <pre><code>void (*AddVarEnumValue)(const char *name)\n</code></pre> <code>name</code> is the enum var's name as a string. The underlying function should NEVER be called as it's less safe than the macro. This note is here for anyone wishing to learn about the internals or hoping to develop a wrapper for another language that doesn't support macros.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/showGizmos/","title":"showGizmos","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/showGizmos/#description","title":"Description","text":"<p>Checks if gizmos should be visible for this object.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/showGizmos/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/showGizmos/#return-value","title":"Return Value","text":"<p>Returns <code>true</code> if gizmos should be enabled for this object, or <code>false</code> if not.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/showGizmos/#syntax","title":"Syntax","text":"<pre><code>showGizmos();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Editor/showGizmos/#example","title":"Example","text":"<pre><code>if (showGizmos()) { /* do stuff */ }\n</code></pre> <p>Note</p> <p>This is a macro, which is designed to make programming in RSDK easier. The underlying logic is: <pre><code>(SceneInfo-&gt;listPos == SceneInfo-&gt;entitySlot || SceneInfo-&gt;effectGizmo)\n</code></pre> <code>SceneInfo-&gt;listPos</code> is the currently selected entity in the editor, and <code>SceneInfo-&gt;effectGizmo</code> is the flag that determines if all gizmos should be visible regardless of if the entity is selected or not. The underlying logic should NEVER be used as it's less safe than the macro. This note is here for anyone wishing to learn about the internals or hoping to develop a wrapper for another language that doesn't support macros.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/CreateSpriteAnimation/","title":"CreateSpriteAnimation","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/CreateSpriteAnimation/#description","title":"Description","text":"<p>Creates a SpriteAnimation based on the given parameters and returns the ID of it.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/CreateSpriteAnimation/#parameters","title":"Parameters","text":"<code>identifier</code> <p>The animation's unique identifier. Once created, it can be used to retrieve this animation again.</p> <code>frameCount</code> <p>The maximum number of SpriteFrames this SpriteAnimation can store.</p> <code>listCount</code> <p>The maximum number of animation entries this SpriteAnimation can store.</p> <code>scope</code> <p>The asset's scope, may be <code>SCOPE_GLOBAL</code> or <code>SCOPE_STAGE</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/CreateSpriteAnimation/#return-value","title":"Return Value","text":"<p>Returns the id of the created animation file as a <code>uint16</code>. The return value will be <code>-1</code> if the animation file failed to create.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/CreateSpriteAnimation/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.CreateSpriteAnimation(const char *identifier, uint32 frameCount, uint32 listCount, int32 scope);\n</code></pre> <pre><code>SpriteAnimation.Create(const char *identifier, Scopes scope);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/CreateSpriteAnimation/#example","title":"Example","text":"CC++ <pre><code>MyObject-&gt;aniFrames = RSDK.CreateSpriteAnimation(\"Test/MyAnim.bin\", 256, 32, SCOPE_STAGE);\n</code></pre> <pre><code>sVars-&gt;aniFrames.Create(\"Test/MyAnim.bin\", 256, 32, SCOPE_STAGE);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/EditSpriteAnimation/","title":"EditSpriteAnimation","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/EditSpriteAnimation/#description","title":"Description","text":"<p>Replaces the properties of an animation with the given parameters.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/EditSpriteAnimation/#parameters","title":"Parameters","text":"<code>aniFrames</code> <p>The SpriteAnimation to be edited.</p> <code>listID</code> <p>The index of the animation entry to be edited.</p> <code>name</code> <p>The animation's name.</p> <code>frameOffset</code> <p>The frame list offset to start this animation's frames from.</p> <code>frameCount</code> <p>The number of frames in the animation.</p> <code>speed</code> <p>The speed of the animation.</p> <code>loopIndex</code> <p>The index of the frame the animation should loop from.</p> <code>rotationStyle</code> <p>The style of rotation snapping to use for frames in this animation.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/EditSpriteAnimation/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/EditSpriteAnimation/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.EditSpriteAnimation(uint16 aniFrames, uint16 listID, const char *name, int32 frameOffset, uint16 frameCount, int16 speed, uint8 loopIndex, uint8 rotationStyle);\n</code></pre> <pre><code>aniFrames.Edit(uint16 listID, const char *name, int32 frameOffset, uint16 frameCount, int16 speed, uint8 loopIndex, uint8 rotationStyle);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/EditSpriteAnimation/#example","title":"Example","text":"CC++ <pre><code>RSDK.EditSpriteAnimation(MyObject-&gt;aniFrames, 1, \"My Edited Anim\", 8, 16, 1, 12, ROTSTYLE_NONE);\n</code></pre> <pre><code>sVars-&gt;aniFrames.Edit(1, \"My Edited Anim\", 8, 16, 1, 12, Animator::RotateNone);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/FindSpriteAnimation/","title":"FindSpriteAnimation","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/FindSpriteAnimation/#description","title":"Description","text":"<p>Attempts to find an animation entry by name.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/FindSpriteAnimation/#parameters","title":"Parameters","text":"<code>aniFrames</code> <p>The SpriteAnimation to search in.</p> <code>name</code> <p>The name of the animation entry to search for.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/FindSpriteAnimation/#return-value","title":"Return Value","text":"<p>Returns the ID of the found animation entry as a <code>uint16</code>. The return value will be <code>-1</code> if the animation entry wasn't found.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/FindSpriteAnimation/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.FindSpriteAnimation(uint16 aniFrames, const char *name);\n</code></pre> <pre><code>aniFrames.Find(const char *name);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/FindSpriteAnimation/#example","title":"Example","text":"CC++ <pre><code>uint16 listID = RSDK.LoadSpriteAnimation(MyObject-&gt;aniFrames, \"My Animation Entry\");\n</code></pre> <pre><code>uint16 listID = sVars-&gt;aniFrames.Find(\"My Animation Entry\");\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetFrame/","title":"GetFrame","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetFrame/#description","title":"Description","text":"<p>Retrieves a specific SpriteFrame from a SpriteAnimation.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetFrame/#parameters","title":"Parameters","text":"<code>aniFrames</code> <p>The SpriteAnimation to use frames from.</p> <code>listID</code> <p>The index of the animation in the animation list to use frames from. In C++, this value is retrieved from <code>Animator.animationID</code>.</p> <code>frameID</code> <p>The index of the frame to get. In C++, this value is retrieved from <code>Animator.frameID</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetFrame/#return-value","title":"Return Value","text":"<p>Returns a pointer to the retrieved SpriteFrame. The return value will be <code>NULL</code> if an error occured.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetFrame/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.GetFrame(uint16 aniFrames, uint16 listID, int32 frameID);\n</code></pre> <pre><code>Animator.GetFrame(SpriteAnimation aniFrames);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetFrame/#example","title":"Example","text":"CC++ <pre><code>SpriteFrame *frame = RSDK.GetFrame(MyObject-&gt;aniFrames, 1, 0);\n</code></pre> <pre><code>SpriteFrame *frame = this-&gt;animator.GetFrame(sVars-&gt;aniFrames);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetFrameID/","title":"GetFrameID","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetFrameID/#description","title":"Description","text":"<p>Gets the <code>unicode char</code> value of the animator's current frame.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetFrameID/#parameters","title":"Parameters","text":"<code>animator</code> <p>The animator to get the unicode char from. The animation entry will use <code>animator.frames</code> and the frame ID uses <code>animator.frameID</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetFrameID/#return-value","title":"Return Value","text":"<p>Returns the <code>unicode char</code> value of the animator's current frame as a <code>uint16</code>. The return value will be <code>0</code> if an error occurred.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetFrameID/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.GetFrameID(Animator *animator);\n</code></pre> <pre><code>animator.GetFrameID();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetFrameID/#example","title":"Example","text":"CC++ <pre><code>uint16 id = RSDK.GetFrameID(&amp;self-&gt;animator);\n</code></pre> <pre><code>uint16 id = this-&gt;animator.GetFrameID();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetHitbox/","title":"GetHitbox","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetHitbox/#description","title":"Description","text":"<p>Gets a Hitbox from the animator's current frame.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetHitbox/#parameters","title":"Parameters","text":"<code>animator</code> <p>The animator to get the hitbox from. the animation entry will use <code>animator.frames</code> and the frame id uses <code>animator.frameID</code>.</p> <code>hitboxID</code> <p>The hitbox ID to retrieve. Indices 0-7 are valid.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetHitbox/#return-value","title":"Return Value","text":"<p>Returns a pointer to the desired hitbox of the animator's current frame as a <code>Hitbox</code>. The return value will be <code>NULL</code> if an error occurred.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetHitbox/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.GetHitbox(Animator *animator, uint8 hitboxID);\n</code></pre> <pre><code>animator.GetHitbox(uint8 hitboxID);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetHitbox/#example","title":"Example","text":"CC++ <pre><code>Hitbox *hitbox = RSDK.GetHitbox(&amp;self-&gt;animator, 0);\n</code></pre> <pre><code>Hitbox *hitbox = this-&gt;animator.GetHitbox(0);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetStringWidth/","title":"GetStringWidth","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetStringWidth/#description","title":"Description","text":"<p>Retrieves the width of a string in pixels when displayed with DrawText().</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetStringWidth/#parameters","title":"Parameters","text":"<code>aniFrames</code> <p>The SpriteAnimation to use frames from.</p> <code>listID</code> <p>The index of the animation in the animation list to use frames from.</p> <code>string</code> <p>The string that characters are retrieved from.</p> <code>startIndex</code> <p>The starting character index.</p> <code>length</code> <p>The end character index. A value of <code>0</code> will result in the end character index being <code>string.length</code>.</p> <code>spacing</code> <p>The number of pixels between each character.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetStringWidth/#return-value","title":"Return Value","text":"<p>Returns the width of the string in pixels as an <code>int32</code>. This width is the same as it would be if DrawText was called with the same parameters.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetStringWidth/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.GetStringWidth(uint16 aniFrames, uint16 listID, String *string, int32 startIndex, int32 length, int32 spacing);\n</code></pre> <pre><code>string.GetWidth(SpriteAnimation aniFrames, uint16 listID, int32 startIndex, int32 length, int32 spacing);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/GetStringWidth/#example","title":"Example","text":"CC++ <pre><code>int32 width = RSDK.LoadSpriteAnimation(MyObject-&gt;aniFrames, 0, &amp;self-&gt;string, 0, self-&gt;string.length, 1);\n</code></pre> <pre><code>int32 width = this-&gt;string.GetWidth(sVars-&gt;aniFrames, 0, 0, this-&gt;string.length, 1);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/LoadSpriteAnimation/","title":"LoadSpriteAnimation","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/LoadSpriteAnimation/#description","title":"Description","text":"<p>Loads a SpriteAnimation and returns the ID of it.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/LoadSpriteAnimation/#parameters","title":"Parameters","text":"<code>path</code> <p>The file path to load the SpriteAnimation file from, relative to <code>Data/Sprites/</code>.</p> <code>scope</code> <p>The asset's scope, may be <code>SCOPE_GLOBAL</code> or <code>SCOPE_STAGE</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/LoadSpriteAnimation/#return-value","title":"Return Value","text":"<p>Returns the ID of the loaded animation file as a <code>uint16</code>. The return value will be <code>-1</code> if the animation file failed to load.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/LoadSpriteAnimation/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.LoadSpriteAnimation(const char* path, Scopes scope);\n</code></pre> <pre><code>SpriteAnimation.Load(const char* path, Scopes scope);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/LoadSpriteAnimation/#example","title":"Example","text":"CC++ <pre><code>MyObject-&gt;aniFrames = RSDK.LoadSpriteAnimation(\"Test/MyAnim.bin\", SCOPE_STAGE);\n</code></pre> <pre><code>sVars-&gt;aniFrames.Load(\"Test/MyAnim.bin\", SCOPE_STAGE);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/ProcessAnimation/","title":"ProcessAnimation","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/ProcessAnimation/#description","title":"Description","text":"<p>Processes the animation applied to an animator.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/ProcessAnimation/#parameters","title":"Parameters","text":"<code>animator</code> <p>The animator used to handle animation of the frames.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/ProcessAnimation/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/ProcessAnimation/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.ProcessAnimation(Animator *animator);\n</code></pre> <pre><code>animator.Process();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/ProcessAnimation/#example","title":"Example","text":"CC++ <pre><code>RSDK.ProcessAnimation(&amp;self-&gt;animator);\n</code></pre> <pre><code>this-&gt;animator.Process();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/SetSpriteAnimation/","title":"SetSpriteAnimation","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/SetSpriteAnimation/#description","title":"Description","text":"<p>Applies a set of frames to an animator.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/SetSpriteAnimation/#parameters","title":"Parameters","text":"<code>aniFrames</code> <p>The SpriteAnimation to use frames from. IDs 0-1023 are valid; any other values will clear the existing SpriteFrames.</p> <code>listID</code> <p>The index of the animation in the animation list to use frames from. Negative indices or indices above the count are considered invalid and will result in the frames not being set.</p> <code>animator</code> <p>The animator to apply the frames to. In C++, this function is an instance method of the animator instead. See the example for further info.</p> <code>forceApply</code> <p>Whether or not to forcefully set the animation. If true, the frames will be set unless the parameters are invalid. If false, the frames will ONLY be set if they don't match the existing frames (same aniFrames, same listID, frameID is ignored). This allows multiple calls to not restart an animation if it's already playing.</p> <code>frameID</code> <p>The index of the frame to set to.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/SetSpriteAnimation/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/SetSpriteAnimation/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.SetSpriteAnimation(uint16 aniFrames, uint16 listID, Animator *animator, bool32 forceApply, int32 frameID);\n</code></pre> <pre><code>animator.SetAnimation(SpriteAnimation aniFrames, uint16 listID, bool32 forceApply, int32 frameID);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/SetSpriteAnimation/#example","title":"Example","text":"CC++ <pre><code>RSDK.SetSpriteAnimation(MyObject-&gt;aniFrames, 0, &amp;self-&gt;animator, true, 0);\n</code></pre> <pre><code>this-&gt;animator.SetAnimation(sVars-&gt;aniFrames, 0, true, 0);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/SetSpriteString/","title":"SetSpriteString","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/SetSpriteString/#description","title":"Description","text":"<p>Converts a string into a sprite string. Calling this function will replace each character with a frame index and prepare it for drawing.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/SetSpriteString/#parameters","title":"Parameters","text":"<code>aniFrames</code> <p>The SpriteAnimation to use frames from.</p> <code>listID</code> <p>The index of the animation in the animation list to use frames from.</p> <code>string</code> <p>The string to apply the frame indices to.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/SetSpriteString/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/SetSpriteString/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.SetSpriteString(uint16 aniFrames, uint16 listID, String *string);\n</code></pre> <pre><code>string.SetSpriteString(SpriteAnimation aniFrames, uint16 listID);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Graphics/SetSpriteString/#example","title":"Example","text":"CC++ <pre><code>RSDK.LoadSpriteAnimation(MyObject-&gt;aniFrames, 0, &amp;self-&gt;string);\n</code></pre> <pre><code>this-&gt;string.Load(sVars-&gt;aniFrames, 0);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Misc/HasNotifyCallback/","title":"HasNotifyCallback","text":"<p>Note</p> <p>This function only exists in Sonic Origins.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Misc/HasNotifyCallback/#description","title":"Description","text":"<p>Checks if the game has access to NotifyCallback().</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Misc/HasNotifyCallback/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Misc/HasNotifyCallback/#return-value","title":"Return Value","text":"<p>Returns <code>true</code> if NotifyCallback() exists and is accessible, or <code>false</code> if not.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Misc/HasNotifyCallback/#syntax","title":"Syntax","text":"<pre><code>HasNotifyCallback();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Misc/HasNotifyCallback/#example","title":"Example","text":"<pre><code>if (HasNotifyCallback()) { /* do stuff */ }\n</code></pre> <p>Note</p> <p>This is a macro, which is designed to make programming in RSDK easier. The underlying logic is:</p> CC++ <pre><code>RSDK.NotifyCallback != NULL\n</code></pre> <pre><code>RSDKTable-&gt;NotifyCallback != NULL\n</code></pre> <p>The underlying logic should NEVER be used as it's less safe than the macro. This note is here for anyone wishing to learn about the internals or hoping to develop a wrapper for another language that doesn't support macros.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Misc/NotifyCallback/","title":"NotifyCallback","text":"<p>Note</p> <p>This function only exists in Sonic Origins.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Misc/NotifyCallback/#description","title":"Description","text":"<p>Sends the given callback to communicate to Hedgehog Engine 2.</p> <p>For more information on NotifyCallback, including a list of usable callbacks, see this page.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Misc/NotifyCallback/#parameters","title":"Parameters","text":"<code>callback</code> <p>The index value of the callback.</p> <code>param1</code>, <code>param2</code>, <code>param3</code> <p>Parameters to use for the callback.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Misc/NotifyCallback/#return-value","title":"Return Value","text":"<p>Depends on the callback used.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Misc/NotifyCallback/#syntax","title":"Syntax","text":"<pre><code>NotifyCallback(int32 callback, int32 param1, int32 param2, int32 param3);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Misc/NotifyCallback/#example","title":"Example","text":"<pre><code>NotifyCallback(NOTIFY_STATS_CHARA_ACTION, 1, 0, 0);\n</code></pre> <p>Note</p> <p>This is a macro, which is designed to make programming in RSDK easier. The underlying logic is:</p> CC++ <pre><code>if (HasNotifyCallback())\n    RSDK.NotifyCallback(callback, param1, param2, param3);\n</code></pre> <pre><code>if (HasNotifyCallback())\n    RSDKTable-&gt;NotifyCallback(callback, param1, param2, param3);\n</code></pre> <p>HasNotifyCallback() is a macro as well. The underlying logic for either macro should NEVER be used as it's less safe than the macros. This note is here for anyone wishing to learn about the internals or hoping to develop a wrapper for another language that doesn't support macros.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Misc/SetGameFinished/","title":"SetGameFinished","text":"<p>Note</p> <p>This function only exists in Sonic Origins.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Misc/SetGameFinished/#description","title":"Description","text":"<p>Notifies the engine that the game has been finished.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Misc/SetGameFinished/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Misc/SetGameFinished/#return-value","title":"Return Value","text":"<p>Sets <code>SceneInfo-&gt;state</code> to <code>ENGINESTATE_GAME_FINISHED</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Misc/SetGameFinished/#example","title":"Example","text":"CC++ <pre><code>RSDK.SetGameFinished();\n</code></pre> <pre><code>RSDKTable-&gt;SetGameFinished();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/AddDrawListRef/","title":"AddDrawListRef","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/AddDrawListRef/#description","title":"Description","text":"<p>Adds a reference to an entity to a draw group.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/AddDrawListRef/#parameters","title":"Parameters","text":"<code>drawGroup</code> <p>The draw group to add the entity to.</p> <code>entitySlot</code> <p>The slot of the entity to add.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/AddDrawListRef/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/AddDrawListRef/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.AddDrawListRef(uint8 drawGroup, uint16 entitySlot);\n</code></pre> <p><pre><code>Graphics::AddDrawListRef(uint8 drawGroup, uint16 entitySlot);\n</code></pre> <pre><code>entity-&gt;AddDrawListRef(uint8 drawGroup);\n</code></pre></p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/AddDrawListRef/#examples","title":"Examples","text":"CC++ <p><pre><code>RSDK.AddDrawListRef(1, 17);\n</code></pre> <pre><code>RSDK.AddDrawListRef(5, RSDK.GetEntitySlot(self));\n</code></pre></p> <p><pre><code>Graphics::AddDrawListRef(1, 17);\n</code></pre> <pre><code>this-&gt;AddDrawListRef(5);\n</code></pre></p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CREATE_ENTITY/","title":"CREATE_ENTITY","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CREATE_ENTITY/#description","title":"Description","text":"<p>Creates a temporary object specified by <code>object</code>, <code>data</code>, <code>x</code>, and <code>y</code> near the end of the object list.</p> <p>Note</p> <p>If there are too many temporary entities loaded when this function is called, the engine will start overwritting them. Therefore, it's recommended to only use this function for entities that quickly get destroyed or unloaded.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CREATE_ENTITY/#parameters","title":"Parameters","text":"<code>object</code> <p>The name of the object to create an entity of.</p> <code>data</code> <p>The data to send to the entity's Create() function.</p> <code>x</code> <p>The position of the entity on the horizontal axis in world-space.</p> <code>y</code> <p>The position of the entity on the vertical axis in world-space.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CREATE_ENTITY/#return-value","title":"Return Value","text":"<p>Returns the data of the created entity using the object's entity struct.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CREATE_ENTITY/#syntax","title":"Syntax","text":"<pre><code>CREATE_ENTITY(object, data, x, y);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CREATE_ENTITY/#examples","title":"Examples","text":"CC++ <p><pre><code>CREATE_ENTITY(MyObject, 0, 0, 0);\n</code></pre> <pre><code>EntityMyObject *entity = CREATE_ENTITY(MyObject, 2, 0x10000, 0x60000);\n</code></pre></p> <p><pre><code>CREATE_ENTITY(MyObject, 0, 0, 0);\n</code></pre> <pre><code>MyObject *entity = CREATE_ENTITY(MyObject, 2, 0x10000, 0x60000);\n</code></pre></p> <p>Note</p> <p>This is a macro, which is designed to make programming in RSDK easier. The underlying logic is:</p> CC++ <pre><code>((Entity##object *)RSDK.CreateEntity(object-&gt;classID, data, x, y))\n</code></pre> <pre><code>(GameObject::Create&lt;object&gt;(data, x, y))\n</code></pre> <p>The underlying logic should NEVER be used as it's less safe than the macro. This note is here for anyone wishing to learn about the internals or hoping to develop a wrapper for another language that doesn't support macros.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CheckOnScreen/","title":"CheckOnScreen","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CheckOnScreen/#description","title":"Description","text":"<p>Checks if the given entity is on screen based on the given range.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CheckOnScreen/#parameters","title":"Parameters","text":"<code>entity</code> <p>The pointer for the entity to check for.</p> <code>range</code> <p>The area in world-space to check if on screen, centered to <code>entity-&gt;position</code>. If set to <code>NULL</code>, <code>entity-&gt;updateRange</code> will be used instead.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CheckOnScreen/#return-value","title":"Return Value","text":"<p>Returns whether the entity is on screen as a <code>bool32</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CheckOnScreen/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.CheckOnScreen(void *entity, Vector2 *range);\n</code></pre> <pre><code>entity-&gt;CheckOnScreen(Vector2 *range);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CheckOnScreen/#example","title":"Example","text":"CC++ <pre><code>bool32 onScreen = RSDK.CheckOnScreen(self, NULL);\n</code></pre> <pre><code>bool32 onScreen = this-&gt;CheckOnScreen(nullptr);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CheckPosOnScreen/","title":"CheckPosOnScreen","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CheckPosOnScreen/#description","title":"Description","text":"<p>Checks if the given position is on screen based on the given range.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CheckPosOnScreen/#parameters","title":"Parameters","text":"<code>position</code> <p>The position in world-space to check for.</p> <code>range</code> <p>The area in world-space to check if on screen, centered to <code>position</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CheckPosOnScreen/#return-value","title":"Return Value","text":"<p>Returns whether the position is on screen as a <code>bool32</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CheckPosOnScreen/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.CheckPosOnScreen(Vector2 *position, Vector2 *range);\n</code></pre> <pre><code>position-&gt;CheckOnScreen(Vector2 *range);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CheckPosOnScreen/#example","title":"Example","text":"CC++ <pre><code>bool32 onScreen = RSDK.CheckOnScreen(self-&gt;startPos, self-&gt;updateRange);\n</code></pre> <pre><code>bool32 onScreen = this-&gt;startPos.CheckOnScreen(this-&gt;updateRange);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CopyEntity/","title":"CopyEntity","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CopyEntity/#description","title":"Description","text":"<p>Copies an entity into another entity.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CopyEntity/#parameters","title":"Parameters","text":"<code>destEntity</code> <p>The pointer to the entity to copy into.</p> <code>srcEntity</code> <p>The pointer to the entity to copy from.</p> <code>clearSrcEntity</code> <p>If set to <code>true</code>, <code>srcEntity</code> will be cleared after being copied.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CopyEntity/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CopyEntity/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.CopyEntity(void *destEntity, void *srcEntity, bool32 clearSrcEntity);\n</code></pre> <pre><code>srcEntity-&gt;Copy(void *destEntity, bool32 clearSrcEntity);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/CopyEntity/#example","title":"Example","text":"CC++ <pre><code>RSDK.CopyEntity(clone, self, false);\n</code></pre> <pre><code>this-&gt;Copy(clone, false);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/FindObject/","title":"FindObject","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/FindObject/#description","title":"Description","text":"<p>Finds a loaded object by name and retrieves its ID.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/FindObject/#parameters","title":"Parameters","text":"<code>name</code> <p>The name of the object to find.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/FindObject/#return-value","title":"Return Value","text":"<p>Returns the classID of the found object as a <code>uint16</code>. The return value will be <code>0</code> if the object wasn't found.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/FindObject/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.FindObject(const char *name);\n</code></pre> <pre><code>GameObject::Find(const char *name);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/FindObject/#example","title":"Example","text":"CC++ <pre><code>uint16 foundObject = RSDK.FindObject(\"MyObject\");\n</code></pre> <pre><code>uint16 foundObject = GameObject::Find(\"MyObject\");\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetDrawListRef/","title":"GetDrawListRef","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetDrawListRef/#description","title":"Description","text":"<p>Gets a pointer to the entity in the given draw group at the given position.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetDrawListRef/#parameters","title":"Parameters","text":"<code>drawGroup</code> <p>The draw group to look for the entity in.</p> <code>listPos</code> <p>The position in <code>drawGroup</code> to retrieve the entity of.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetDrawListRef/#return-value","title":"Return Value","text":"<p>Returns a pointer to the the entity for the <code>drawGroup</code> entry in <code>listPos</code>. The return value will be <code>NULL</code> if the entry doesn't exist.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetDrawListRef/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.GetDrawListRef(uint8 drawGroup, uint16 listPos);\n</code></pre> <p><pre><code>Graphics::GetDrawListRef(uint8 drawGroup, uint16 listPos);\n</code></pre> <pre><code>Graphics::GetDrawListRef&lt;object&gt;(uint8 drawGroup, uint16 listPos);\n</code></pre></p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetDrawListRef/#examples","title":"Examples","text":"CC++ <p><pre><code>Entity *drawRef = RSDK.GetDrawListRef(4, 7);\n</code></pre> <pre><code>EntityMyObject *drawRef = (EntityMyObject *)RSDK.GetDrawListRef(3, 16);\n</code></pre></p> <p><pre><code>GameObject::Entity *drawRef = Graphics::GetDrawListRef(4, 7);\n</code></pre> <pre><code>MyObject *drawRef = Graphics::GetDrawListRef&lt;MyObject&gt;(3, 16);\n</code></pre></p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetDrawListRefSlot/","title":"GetDrawListRefSlot","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetDrawListRefSlot/#description","title":"Description","text":"<p>Gets the entity slot in the given draw group at the given position.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetDrawListRefSlot/#parameters","title":"Parameters","text":"<code>drawGroup</code> <p>The draw group to look for the slot in.</p> <code>listPos</code> <p>The position in <code>drawGroup</code> to retrieve the entity slot of.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetDrawListRefSlot/#return-value","title":"Return Value","text":"<p>Returns the entity slot for the <code>drawGroup</code> entry in <code>listPos</code> as a <code>uint16</code>. The return value will be <code>0</code> if the entry doesn't exist.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetDrawListRefSlot/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.GetDrawListRefSlot(uint8 drawGroup, uint16 listPos);\n</code></pre> <pre><code>Graphics::GetDrawListRefSlot(uint8 drawGroup, uint16 listPos);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetDrawListRefSlot/#example","title":"Example","text":"CC++ <pre><code>uint16 refSlot = RSDK.GetDrawListRefSlot(4, 7);\n</code></pre> <pre><code>uint16 refSlot = Graphics::GetDrawListRefSlot(4, 7);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetEntityCount/","title":"GetEntityCount","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetEntityCount/#description","title":"Description","text":"<p>Gets the count of the amount of entities of the given object type currently in the stage.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetEntityCount/#parameters","title":"Parameters","text":"<code>classID</code> <p>The class ID of the object to count the entities of.</p> <code>isActive</code> <p>If set to <code>true</code>, only entities that are currently active will be counted.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetEntityCount/#return-value","title":"Return Value","text":"<p>Returns the entity count as an <code>int32</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetEntityCount/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.GetEntityCount(uint16 classID, bool32 isActive);\n</code></pre> <pre><code>sVars-&gt;Count(bool32 isActive);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetEntityCount/#example","title":"Example","text":"CC++ <pre><code>int32 entityCount = RSDK.GetEntityCount(MyObject-&gt;classID, false);\n</code></pre> <pre><code>int32 entityCount = MyObject::sVars-&gt;Count(false);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetEntitySlot/","title":"GetEntitySlot","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetEntitySlot/#description","title":"Description","text":"<p>Gets the slot ID of an entity.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetEntitySlot/#parameters","title":"Parameters","text":"<code>entity</code> <p>The entity to retrieve the slot ID of.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetEntitySlot/#return-value","title":"Return Value","text":"<p>Returns the slot ID of the entity as an <code>int32</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetEntitySlot/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.GetEntitySlot(void *entity);\n</code></pre> <pre><code>entity-&gt;Slot();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/GetEntitySlot/#example","title":"Example","text":"CC++ <pre><code>int32 entitySlot = RSDK.GetEntitySlot(self);\n</code></pre> <pre><code>int32 entitySlot = this-&gt;Slot();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/INIT_ENTITY/","title":"INIT_ENTITY","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/INIT_ENTITY/#description","title":"Description","text":"<p>Initializes the <code>active</code>, <code>visible</code>, and <code>updateRange</code> values of the given entity.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/INIT_ENTITY/#parameters","title":"Parameters","text":"<code>entity</code> <p>The entity to initialize.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/INIT_ENTITY/#return-value","title":"Return Value","text":"<p>Sets <code>entity</code>'s <code>active</code> value to <code>ACTIVE_BOUNDS</code>, the <code>visible</code> value to <code>false</code>, and the <code>updateRange.x</code> and <code>updateRange.y</code> values to <code>TO_FIXED(128)</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/INIT_ENTITY/#syntax","title":"Syntax","text":"CC++ <pre><code>INIT_ENTITY(entity);\n</code></pre> <pre><code>entity-&gt;Init();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/INIT_ENTITY/#example","title":"Example","text":"CC++ <pre><code>INIT_ENTITY(self);\n</code></pre> <p>Note</p> <p>This is a macro, which is designed to make programming in RSDK easier. The underlying logic is: <pre><code>(entity)-&gt;active        = ACTIVE_BOUNDS;\n(entity)-&gt;visible       = false;\n(entity)-&gt;updateRange.x = TO_FIXED(128);\n(entity)-&gt;updateRange.y = TO_FIXED(128);\n</code></pre> The underlying logic should NEVER be used as it's less safe than the macro. This note is here for anyone wishing to learn about the internals or hoping to develop a wrapper for another language that doesn't support macros.</p> <pre><code>this-&gt;Init();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_GET_ENTITY/","title":"RSDK_GET_ENTITY","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_GET_ENTITY/#description","title":"Description","text":"<p>Gets the data of the given entity using the given object's entity struct.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_GET_ENTITY/#parameters","title":"Parameters","text":"<code>class</code> <p>The class of the object to use the entity struct from.</p> <code>slot</code> <p>The slot ID of the entity to return.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_GET_ENTITY/#return-value","title":"Return Value","text":"<p>Returns the data of entity <code>slot</code> using object <code>class</code>'s entity struct.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_GET_ENTITY/#syntax","title":"Syntax","text":"<pre><code>RSDK_GET_ENTITY(class, slot);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_GET_ENTITY/#example","title":"Example","text":"CC++ <pre><code>EntityMyObject *entity = RSDK_GET_ENTITY(MyObject, 12);\n</code></pre> <pre><code>MyObject *entity = RSDK_GET_ENTITY(MyObject, 12);\n</code></pre> <p>Note</p> <p>This is a macro, which is designed to make programming in RSDK easier. The underlying logic is:</p> CC++ <pre><code>((Entity##class *)RSDK.GetEntity(slot))\n</code></pre> <pre><code>(GameObject::Get&lt;class&gt;(slot))\n</code></pre> <p>The underlying logic should NEVER be used as it's less safe than the macro. This note is here for anyone wishing to learn about the internals or hoping to develop a wrapper for another language that doesn't support macros.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_GET_ENTITY_GEN/","title":"RSDK_GET_ENTITY_GEN","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_GET_ENTITY_GEN/#description","title":"Description","text":"<p>Gets the data of the given entity using a generic entity struct.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_GET_ENTITY_GEN/#parameters","title":"Parameters","text":"<code>slot</code> <p>The slot ID of the entity to return.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_GET_ENTITY_GEN/#return-value","title":"Return Value","text":"<p>Returns the data of entity <code>slot</code> using the generic <code>Entity</code> struct.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_GET_ENTITY_GEN/#syntax","title":"Syntax","text":"<pre><code>RSDK_GET_ENTITY_GEN(slot);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_GET_ENTITY_GEN/#example","title":"Example","text":"CC++ <pre><code>Entity *entity = RSDK_GET_ENTITY_GEN(12);\n</code></pre> <pre><code>GameObject::Entity *entity = RSDK_GET_ENTITY_GEN(12);\n</code></pre> <p>Note</p> <p>This is a macro, which is designed to make programming in RSDK easier. The underlying logic is:</p> CC++ <pre><code>((Entity *)RSDK.GetEntity(slot))\n</code></pre> <pre><code>(GameObject::Get(slot))\n</code></pre> <p>The underlying logic should NEVER be used as it's less safe than the macro. This note is here for anyone wishing to learn about the internals or hoping to develop a wrapper for another language that doesn't support macros.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_THIS/","title":"RSDK_THIS","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_THIS/#description","title":"Description","text":"<p>Defines local pointer <code>self</code> pointing to <code>sceneInfo-&gt;entity</code> using the given object's entity struct.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_THIS/#parameters","title":"Parameters","text":"<code>class</code> <p>The name of the object to use the entity struct for.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_THIS/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_THIS/#syntax","title":"Syntax","text":"<pre><code>RSDK_THIS(class);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_THIS/#example","title":"Example","text":"<pre><code>RSDK_THIS(MyObject);\n</code></pre> <p>Note</p> <p>This is a macro, which is designed to make programming in RSDK easier. The underlying logic is:</p> CC++ <pre><code>Entity##class *self = (Entity##class *)SceneInfo-&gt;entity\n</code></pre> <pre><code>auto *self = (class *)sceneInfo-&gt;entity\n</code></pre> <p>The underlying logic should NEVER be used as it's less safe than the macro. This note is here for anyone wishing to learn about the internals or hoping to develop a wrapper for another language that doesn't support macros.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_THIS_GEN/","title":"RSDK_THIS_GEN","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_THIS_GEN/#description","title":"Description","text":"<p>Defines local pointer <code>self</code> pointing to <code>sceneInfo-&gt;entity</code> using a generic entity struct.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_THIS_GEN/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_THIS_GEN/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/RSDK_THIS_GEN/#example","title":"Example","text":"<pre><code>RSDK_THIS_GEN();\n</code></pre> <p>Note</p> <p>This is a macro, which is designed to make programming in RSDK easier. The underlying logic is:</p> CC++ <pre><code>Entity *self = SceneInfo-&gt;entity\n</code></pre> <pre><code>GameObject::Entity *self = (GameObject::Entity *)sceneInfo-&gt;entity\n</code></pre> <p>The underlying logic should NEVER be used as it's less safe than the macro. This note is here for anyone wishing to learn about the internals or hoping to develop a wrapper for another language that doesn't support macros.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/ResetEntity/","title":"ResetEntity","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/ResetEntity/#description","title":"Description","text":"<p>Resets <code>entity</code> with the <code>classID</code> and <code>data</code> specified.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/ResetEntity/#parameters","title":"Parameters","text":"<code>entity</code> <p>The pointer of the entity to reset.</p> <code>classID</code> <p>The class ID of the object to reset the entity as.</p> <code>data</code> <p>The data to send to the entity's Create() function.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/ResetEntity/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/ResetEntity/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.ResetEntity(void *entity, uint16 classID, void *data);\n</code></pre> <pre><code>entity-&gt;Reset(uint16 classID, void *data);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/ResetEntity/#example","title":"Example","text":"CC++ <pre><code>RSDK.ResetEntity(self, MyObject-&gt;classID, NULL);\n</code></pre> <pre><code>this-&gt;Reset(MyObject::sVars-&gt;classID, nullptr);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/ResetEntitySlot/","title":"ResetEntitySlot","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/ResetEntitySlot/#description","title":"Description","text":"<p>Resets the entity in <code>slot</code> with the <code>classID</code> and <code>data</code> specified.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/ResetEntitySlot/#parameters","title":"Parameters","text":"<code>slot</code> <p>The slot of the entity to reset.</p> <code>classID</code> <p>The class ID of the object to reset the entity as.</p> <code>data</code> <p>The data to send to the entity's Create() function.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/ResetEntitySlot/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/ResetEntitySlot/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.ResetEntity(uint16 slot, uint16 classID, void *data);\n</code></pre> <pre><code>GameObject::Reset(uint16 slot, uint16 classID, void *data);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/ResetEntitySlot/#example","title":"Example","text":"CC++ <pre><code>RSDK.ResetEntity(30, MyObject-&gt;classID, NULL);\n</code></pre> <pre><code>GameObject::Reset(30, MyObject::sVars-&gt;classID, nullptr);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/SetDrawGroupProperties/","title":"SetDrawGroupProperties","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/SetDrawGroupProperties/#description","title":"Description","text":"<p>Sets the properties of <code>drawGroup</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/SetDrawGroupProperties/#parameters","title":"Parameters","text":"<code>drawGroup</code> <p>The draw group to set the properties of.</p> <code>sorted</code> <p>Determines whether the draw group should use <code>entity-&gt;zdepth</code> to sort the draw list or not.</p> <code>hookCB</code> <p>If set to a void function, it will be called before the drawGroup is drawn.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/SetDrawGroupProperties/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/SetDrawGroupProperties/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.SetDrawGroupProperties(uint8 drawGroup, bool32 sorted, void (*hookCB)(void));\n</code></pre> <pre><code>Graphics::SetDrawGroupProperties(uint8 drawGroup, bool32 sorted, void (*hookCB)(void));\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/SetDrawGroupProperties/#examples","title":"Examples","text":"CC++ <p><pre><code>RSDK.SetDrawGroupProperties(6, false, NULL);\n</code></pre> <pre><code>RSDK.SetDrawGroupProperties(3, true, MyObject_DrawGroupHookCB);\n</code></pre></p> <p><pre><code>Graphics::SetDrawGroupProperties(6, false, nullptr);\n</code></pre> <pre><code>Graphics::SetDrawGroupProperties(3, true, MyObject::DrawGroupHookCB);\n</code></pre></p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/SwapDrawListEntries/","title":"SwapDrawListEntries","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/SwapDrawListEntries/#description","title":"Description","text":"<p>Swaps the draw list positions of <code>slot1</code> and <code>slot2</code> in <code>drawGroup</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/SwapDrawListEntries/#parameters","title":"Parameters","text":"<code>drawGroup</code> <p>The draw group to swap the entries in.</p> <code>slot1</code> <p>The slot of the first entry in the draw list to swap.</p> <code>slot2</code> <p>The slot of the second entry in the draw list to swap.</p> <code>count</code> <p>Only the first entries within this value will be checked. If set to <code>0</code>, the function will check every entry in the draw list.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/SwapDrawListEntries/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/SwapDrawListEntries/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.SwapDrawListEntries(uint8 drawGroup, uint16 slot1, uint16 slot2, uint16 count);\n</code></pre> <pre><code>Graphics::SwapDrawListEntries(uint8 drawGroup, uint16 slot1, uint16 slot2, uint16 count);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/SwapDrawListEntries/#example","title":"Example","text":"CC++ <pre><code>RSDK.SwapDrawListEntries(4, 4, 16, 0);\n</code></pre> <pre><code>Graphics::SwapDrawListEntries(4, 4, 16, 0);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/destroyEntity/","title":"destroyEntity","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/destroyEntity/#description","title":"Description","text":"<p>Clears an entity's data.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/destroyEntity/#parameters","title":"Parameters","text":"<code>entity</code> <p>The pointer of the entity to destroy.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/destroyEntity/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/destroyEntity/#syntax","title":"Syntax","text":"CC++ <pre><code>destroyEntity(entity);\n</code></pre> <pre><code>entity-&gt;Destroy();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/destroyEntity/#example","title":"Example","text":"CC++ <pre><code>destroyEntity(self);\n</code></pre> <p>Note</p> <p>This is a macro, which is designed to make programming in RSDK easier. The underlying logic is: <pre><code>RSDK.ResetEntity(entity, TYPE_DEFAULTOBJECT, NULL)\n</code></pre> The underlying logic should NEVER be used as it's less safe than the macro. This note is here for anyone wishing to learn about the internals or hoping to develop a wrapper for another language that doesn't support macros.</p> <pre><code>this-&gt;Destroy();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/destroyEntitySlot/","title":"destroyEntitySlot","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/destroyEntitySlot/#description","title":"Description","text":"<p>Clears the entity of the given slot's data.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/destroyEntitySlot/#parameters","title":"Parameters","text":"<code>slot</code> <p>The slot of the entity to destroy.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/destroyEntitySlot/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/destroyEntitySlot/#syntax","title":"Syntax","text":"CC++ <pre><code>destroyEntitySlot(slot);\n</code></pre> <pre><code>GameObject::Destroy(int32 slot);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Objects/destroyEntitySlot/#example","title":"Example","text":"CC++ <pre><code>destroyEntitySlot(15);\n</code></pre> <p>Note</p> <p>This is a macro, which is designed to make programming in RSDK easier. The underlying logic is: <pre><code>RSDK.ResetEntitySlot(slot, TYPE_DEFAULTOBJECT, NULL)\n</code></pre> The underlying logic should NEVER be used as it's less safe than the macro. This note is here for anyone wishing to learn about the internals or hoping to develop a wrapper for another language that doesn't support macros.</p> <pre><code>GameObject::Destroy(15);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintFloat/","title":"PrintFloat","text":"<p>Note</p> <p>This function only exists in REV02 and above.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintFloat/#description","title":"Description","text":"<p>Prints a float value to the console.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintFloat/#parameters","title":"Parameters","text":"<code>mode</code> <p>The print mode of the message.</p> <code>message</code> <p>The label to call the float.</p> <code>fvalue</code> <p>The float value to print.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintFloat/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintFloat/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.PrintFloat(int32 mode, const char *message, float fvalue);\n</code></pre> <pre><code>Dev::PrintFloat(PrintModes mode, const char *message, float fvalue);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintFloat/#example","title":"Example","text":"CC++ <pre><code>RSDK.PrintFloat(PRINT_NORMAL, \"distance\", distanceFromGoal);\n</code></pre> <pre><code>Dev::PrintFloat(Dev::PRINT_NORMAL, \"distance\", distanceFromGoal);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintHitbox/","title":"PrintHitbox","text":"<p>Note</p> <p>This function only exists in REV02 and above.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintHitbox/#description","title":"Description","text":"<p>Prints a Hitbox variable to the console.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintHitbox/#parameters","title":"Parameters","text":"<code>mode</code> <p>The print mode of the message.</p> <code>message</code> <p>The label to call the hitbox.</p> <code>hitbox</code> <p>The hitbox to print.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintHitbox/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintHitbox/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.PrintHitbox(int32 mode, const char *message, Hitbox hitbox);\n</code></pre> <pre><code>Dev::PrintHitbox(PrintModes mode, const char *message, Hitbox hitbox);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintHitbox/#example","title":"Example","text":"CC++ <pre><code>RSDK.PrintHitbox(PRINT_NORMAL, \"playerHitbox\", &amp;self-&gt;hitbox);\n</code></pre> <pre><code>Dev::PrintHitbox(Dev::PRINT_NORMAL, \"playerHitbox\", &amp;this-&gt;hitbox);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintInt32/","title":"PrintInt32","text":"<p>Note</p> <p>This function only exists in REV02 and above.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintInt32/#description","title":"Description","text":"<p>Prints a signed integer to the console.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintInt32/#parameters","title":"Parameters","text":"<code>mode</code> <p>The print mode of the message.</p> <code>message</code> <p>The label to call the integer.</p> <code>integer</code> <p>The signed integer to print.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintInt32/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintInt32/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.PrintInt32(int32 mode, const char *message, int32 integer);\n</code></pre> <pre><code>Dev::PrintInt32(PrintModes mode, const char *message, int32 integer);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintInt32/#example","title":"Example","text":"CC++ <pre><code>RSDK.PrintInt32(PRINT_NORMAL, \"health\", self-&gt;health);\n</code></pre> <pre><code>Dev::PrintInt32(Dev::PRINT_NORMAL, \"health\", this-&gt;health);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintLog/","title":"PrintLog","text":"<p>Note</p> <p>This function only exists in REV02 and above.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintLog/#description","title":"Description","text":"<p>Prints a message to the console.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintLog/#parameters","title":"Parameters","text":"<code>mode</code> <p>The print mode of the message.</p> <code>message</code> <p>The message to print.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintLog/#using-variables","title":"Using Variables","text":"<p>You can add additional parameters when calling this function to use variables in the message. To do this, include one of the following flags in <code>message</code> to represent the variable depending on its data type:</p> <ul> <li><code>%d</code> for signed integers</li> <li><code>%u</code> for unsigned integers</li> <li><code>%f</code> for floats or doubles</li> <li><code>%c</code> for characters</li> <li><code>%s</code> for strings (const char)</li> </ul> <p>Then, include additional parameter(s) to the function call pointing to the variable(s) to print the value(s) of. Varaiables should be put in the order the corresponding flags appear in <code>message</code>.</p> <p>If you'd like use the <code>%</code> character in <code>message</code>, use the <code>%%</code> flag.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintLog/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintLog/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.PrintLog(int32 mode, const char *message, ...);\n</code></pre> <pre><code>Dev::Print(PrintModes mode, const char *message, ...);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintLog/#examples","title":"Examples","text":"CC++ <p><pre><code>RSDK.PrintLog(PRINT_NORMAL, \"This is a test message.\");\n</code></pre> <pre><code>RSDK.PrintLog(PRINT_NORMAL, \"Player has %d HP.\", self-&gt;health);\n</code></pre> <pre><code>RSDK.PrintLog(PRINT_NORMAL, \"Level %u is named %s.\", levelID, levelName);\n</code></pre></p> <p><pre><code>Dev::Print(Dev::PRINT_NORMAL, \"This is a test message.\");\n</code></pre> <pre><code>Dev::Print(Dev::PRINT_NORMAL, \"Player has %d HP.\", this-&gt;health);\n</code></pre> <pre><code>Dev::Print(Dev::PRINT_NORMAL, \"Level %u is named %s.\", levelID, levelName);\n</code></pre></p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintString/","title":"PrintString","text":"<p>Note</p> <p>This function only exists in REV02 and above.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintString/#description","title":"Description","text":"<p>Prints a String variable to the console.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintString/#parameters","title":"Parameters","text":"<code>mode</code> <p>The print mode of the message.</p> <code>message</code> <p>The String variable to print.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintString/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintString/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.PrintString(int32 mode, String *message);\n</code></pre> <pre><code>Dev::PrintString(PrintModes mode, String *message);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintString/#example","title":"Example","text":"CC++ <pre><code>RSDK.PrintString(PRINT_NORMAL, &amp;string);\n</code></pre> <pre><code>Dev::PrintString(Dev::PRINT_NORMAL, &amp;string);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintText/","title":"PrintText","text":"<p>Note</p> <p>This function only exists in REV02 and above.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintText/#description","title":"Description","text":"<p>Prints a <code>const char</code> string to the console.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintText/#parameters","title":"Parameters","text":"<code>mode</code> <p>The print mode of the message.</p> <code>message</code> <p>The <code>const char</code> value to print.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintText/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintText/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.PrintText(int32 mode, const char *message);\n</code></pre> <pre><code>RSDKTable-&gt;PrintText(int32 mode, const char *message);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintText/#example","title":"Example","text":"CC++ <pre><code>RSDK.PrintText(PRINT_NORMAL, \"This is a test message.\");\n</code></pre> <pre><code>RSDKTable-&gt;PrintText(Dev::PRINT_NORMAL, \"This is a test message.\");\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintUInt32/","title":"PrintUInt32","text":"<p>Note</p> <p>This function only exists in REV02 and above.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintUInt32/#description","title":"Description","text":"<p>Prints an unsigned integer to the console.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintUInt32/#parameters","title":"Parameters","text":"<code>mode</code> <p>The print mode of the message.</p> <code>message</code> <p>The label to call the integer.</p> <code>integer</code> <p>The unsigned integer to print.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintUInt32/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintUInt32/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.PrintUInt32(int32 mode, const char *message, uint32 integer);\n</code></pre> <pre><code>Dev::PrintUInt32(PrintModes mode, const char *message, uint32 integer);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintUInt32/#example","title":"Example","text":"CC++ <pre><code>RSDK.PrintUInt32(PRINT_NORMAL, \"health\", self-&gt;health);\n</code></pre> <pre><code>Dev::PrintUInt32(Dev::PRINT_NORMAL, \"health\", this-&gt;health);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintVector2/","title":"PrintVector2","text":"<p>Note</p> <p>This function only exists in REV02 and above.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintVector2/#description","title":"Description","text":"<p>Prints a Vector2 variable to the console.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintVector2/#parameters","title":"Parameters","text":"<code>mode</code> <p>The print mode of the message.</p> <code>message</code> <p>The label to call the Vector2.</p> <code>vector</code> <p>The Vector2 variable to print.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintVector2/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintVector2/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.PrintVector2(int32 mode, const char *message, Vector2 vector);\n</code></pre> <p><pre><code>Dev::PrintVector2(PrintModes mode, const char *message, Vector2 vector);\n</code></pre> <pre><code>Dev::PrintVector2(PrintModes mode, const char *message, int32 x, int32 y);\n</code></pre></p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Printing/PrintVector2/#example","title":"Example","text":"CC++ <pre><code>RSDK.PrintVector2(PRINT_NORMAL, \"position\", &amp;self-&gt;position);\n</code></pre> <p><pre><code>Dev::PrintVector2(Dev::PRINT_NORMAL, \"position\", &amp;this-&gt;position);\n</code></pre> <pre><code>Dev::PrintVector2(Dev::PRINT_NORMAL, \"velocity\", this-&gt;velocity.x, this-&gt;velocity.y);\n</code></pre></p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/SpriteSheets/LoadSpriteSheet/","title":"LoadSpriteSheet","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/SpriteSheets/LoadSpriteSheet/#description","title":"Description","text":"<p>Loads a spritesheet and returns the ID of it.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/SpriteSheets/LoadSpriteSheet/#parameters","title":"Parameters","text":"<code>path</code> <p>The file path of the spritesheet to load, relative to <code>Data/Sprites/</code>. Spritesheets may ONLY be in GIF format.</p> <code>scope</code> <p>The asset's scope. May be <code>SCOPE_GLOBAL</code> or <code>SCOPE_STAGE</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/SpriteSheets/LoadSpriteSheet/#return-value","title":"Return Value","text":"<p>Returns the ID of the loaded spritesheet as a <code>uint16</code>. The return value will be <code>-1</code> if the spritesheet failed to load.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/SpriteSheets/LoadSpriteSheet/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.LoadSpriteSheet(const char* path, Scopes scope);\n</code></pre> <pre><code>SpriteSheet.Load(const char* path, Scopes scope);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/SpriteSheets/LoadSpriteSheet/#example","title":"Example","text":"CC++ <pre><code>MyObject-&gt;mySheet = RSDK.LoadSpriteSheet(\"Test/Objects.gif\", SCOPE_STAGE);\n</code></pre> <pre><code>sVars-&gt;mySheet.Load(\"Test/Objects.gif\", SCOPE_STAGE);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/CheckSceneFolder/","title":"CheckSceneFolder","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/CheckSceneFolder/#description","title":"Description","text":"<p>Reads the name of the current stage's folder.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/CheckSceneFolder/#parameters","title":"Parameters","text":"<code>folderName</code> <p>The string to match.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/CheckSceneFolder/#return-value","title":"Return Value","text":"<p>Returns <code>true</code> as a <code>bool32</code> if the current folder's name matches <code>folderName</code>; otherwise, returns <code>false</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/CheckSceneFolder/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.CheckSceneFolder(const char *folderName);\n</code></pre> <pre><code>Stage::CheckSceneFolder(const char *folderName);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/CheckSceneFolder/#example","title":"Example","text":"CC++ <pre><code>RSDK.CheckSceneFolder(\"Menu\");\n</code></pre> <pre><code>Stage::CheckSceneFolder(\"Menu\");\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/CheckValidScene/","title":"CheckValidScene","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/CheckValidScene/#description","title":"Description","text":"<p>Checks if <code>SceneInfo-&gt;activeCategory</code> and <code>SceneInfo-&gt;listPos</code> point to a valid scene in the GameConfig.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/CheckValidScene/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/CheckValidScene/#return-value","title":"Return Value","text":"<p>Returns whether the current scene is valid as a <code>bool32</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/CheckValidScene/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.CheckValidScene();\n</code></pre> <pre><code>Stage::CheckValidScene();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/CheckValidScene/#example","title":"Example","text":"CC++ <pre><code>if (RSDK.CheckValidScene()) { /* do stuff */ }\n</code></pre> <pre><code>if (Stage::CheckValidScene()) { /* do stuff */ }\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/ForceHardReset/","title":"ForceHardReset","text":"<p>Note</p> <p>This function only exists in REV02 and above.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/ForceHardReset/#description","title":"Description","text":"<p>Sets whether the next stage reload should reload all assets.</p> <p>Note</p> <p>This function does not reload the scene by itself; you must call LoadScene() manually.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/ForceHardReset/#parameters","title":"Parameters","text":"<code>shouldHardReset</code> <p>If set to <code>false</code>, the stage will reload normally. If set to <code>true</code>, the stage will reload all assets when reloaded.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/ForceHardReset/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/ForceHardReset/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.ForceHardReset(bool32 shouldHardReset);\n</code></pre> <pre><code>Stage::ForceHardReset(bool32 shouldHardReset);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/ForceHardReset/#example","title":"Example","text":"CC++ <pre><code>RSDK.ForceHardReset(true);\n</code></pre> <pre><code>Stage::ForceHardReset(true);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/LoadScene/","title":"LoadScene","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/LoadScene/#description","title":"Description","text":"<p>Loads a stage based on <code>SceneInfo-&gt;activeCategory</code> and <code>SceneInfo-&gt;listPos</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/LoadScene/#parameters","title":"Parameters","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/LoadScene/#return-value","title":"Return Value","text":"<p>None.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/LoadScene/#example","title":"Example","text":"CC++ <pre><code>RSDK.LoadScene();\n</code></pre> <pre><code>Stage::LoadScene();\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/SetEngineState/","title":"SetEngineState","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/SetEngineState/#description","title":"Description","text":"<p>Sets the state of the engine.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/SetEngineState/#parameters","title":"Parameters","text":"<code>state</code> <p>The engine state to set the engine to.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/SetEngineState/#return-value","title":"Return Value","text":"<p>Sets <code>SceneInfo-&gt;state</code> to the given state, preserving step-over mode if it's enabled.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/SetEngineState/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.SetEngineState(uint8 state);\n</code></pre> <pre><code>Stage::SetEngineState(EngineStates state);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/SetEngineState/#example","title":"Example","text":"CC++ <pre><code>RSDK.SetEngineState(ENGINESTATE_FROZEN);\n</code></pre> <pre><code>Stage::SetEngineState(ENGINESTATE_FROZEN);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/SetScene/","title":"SetScene","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/SetScene/#description","title":"Description","text":"<p>Sets the scene category and list position to the matching scene entry in the GameConfig.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/SetScene/#parameters","title":"Parameters","text":"<code>categoryName</code> <p>The name of the stage category in the GameConfig.</p> <code>sceneName</code> <p>The name of the scene in the GameConfig.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/SetScene/#return-value","title":"Return Value","text":"<p>Sets <code>SceneInfo-&gt;activeCategory</code> and <code>SceneInfo-&gt;listPos</code> to the category and scene with names matching <code>categoryName</code> and <code>sceneName</code>, respectively. If the given name(s) aren't found in the GameConfig, the variables will not be set.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/SetScene/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.SetScene(const char *categoryName, const char *sceneName);\n</code></pre> <pre><code>Stage::SetScene(const char *categoryName, const char *sceneName);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Stages/SetScene/#example","title":"Example","text":"CC++ <pre><code>RSDK.SetScene(\"Presentation\", \"Title Screen\");\n</code></pre> <pre><code>Stage::SetScene(\"Presentation\", \"Title Screen\");\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Videos/LoadImage/","title":"LoadImage","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Videos/LoadImage/#description","title":"Description","text":"<p>Loads and displays an image.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Videos/LoadImage/#parameters","title":"Parameters","text":"<code>filename</code> <p>The file path of the image to load, relative to <code>Data/Images/</code>. Images may ONLY be in PNG format and MUST have a resolution of 1024x512 pixels.</p> <p>Note</p> <p>Prior to REV02, RSDKv5 used the TGA format for images instead of PNG.</p> <code>displayLength</code> <p>The amount of time, in seconds, to show the image on-screen (excluding the time during fading in/out).</p> <code>fadeSpeed</code> <p>The amount of time, in seconds, to take for the image to fade in/out.</p> <code>skipCallback</code> <p>The function that will be called every frame the image is shown to determine if it should be skipped. The function must return a <code>bool32</code> value. Setting this to <code>NULL</code> will make the image unskippable.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Videos/LoadImage/#return-value","title":"Return Value","text":"<p>Returns <code>true</code> as a <code>bool32</code> if the image loaded successfully; otherwise, returns <code>false</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Videos/LoadImage/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.LoadImage(const char *filename, double displayLength, double fadeSpeed, bool32 (*skipCallback)())\n</code></pre> <pre><code>Video::LoadImage(const char *filename, double displayLength, double fadeSpeed, bool32 (*skipCallback)())\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Videos/LoadImage/#example","title":"Example","text":"CC++ <pre><code>RSDK.LoadImage(\"Image.png\", 32.0, 1.0, MyObject_ImageSkipCB);\n</code></pre> <pre><code>Video::LoadImage(\"Image.png\", 32.0, 1.0, ImageSkipCB);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Videos/LoadVideo/","title":"LoadVideo","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Videos/LoadVideo/#description","title":"Description","text":"<p>Loads and plays a video.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Videos/LoadVideo/#parameters","title":"Parameters","text":"<code>filename</code> <p>The file path of the video to load, relative to <code>Data/Videos/</code>. Videos may ONLY be in OGV format.</p> <code>startDelay</code> <p>The amount of time, in seconds, to wait before playing the video after loading it.</p> <code>skipCallback</code> <p>The function that will be called every frame during the video to determine if it should be skipped. The function must return a <code>bool32</code> value. Setting this to <code>NULL</code> will make the video unskippable.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Videos/LoadVideo/#return-value","title":"Return Value","text":"<p>Returns <code>true</code> as a <code>bool32</code> if the video loaded successfully; otherwise, returns <code>false</code>.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Videos/LoadVideo/#syntax","title":"Syntax","text":"CC++ <pre><code>RSDK.LoadVideo(const char *filename, double startDelay, bool32 (*skipCallback)());\n</code></pre> <pre><code>Video::LoadVideo(const char *filename, double startDelay, bool32 (*skipCallback)());\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Functions/Videos/LoadVideo/#example","title":"Example","text":"CC++ <pre><code>RSDK.LoadVideo(\"Opening.ogv\", 0.0, MyObject_VideoSkipCB);\n</code></pre> <pre><code>Video::LoadVideo(\"Opening.ogv\", 0.0, VideoSkipCB);\n</code></pre>","tags":["RSDKv5"]},{"location":"RSDKv5/Overview/","title":"RSDKv5 Overview","text":"<p>TODO: this</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Overview/DevMenu/","title":"Dev Menu","text":"<p>The Dev Menu is a debug menu included with RSDKv5, disabled by default. The menu includes several features useful for debugging games in the engine. When the Dev Menu is enabled, other developer features are accessible as well.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Overview/DevMenu/#enabling","title":"Enabling","text":"<p>The Dev Menu can be enabled by adding the line <code>devMenu=y</code> under the <code>Game</code> category of the engine's settings.ini file, like so:</p> <pre><code>; Retro Engine Config File\n\n[Game]\ndevMenu=y ; (1)!\nlanguage=0\n\n...\n</code></pre> <ol> <li>The setting names in settings.ini are case-sensitive; the Dev Menu setting will not apply if the capitalization is incorrect.</li> </ol> <p>Alternatively, running the game in Data Folder Mode will automatically enable the Dev Menu.</p> <p>Note</p> <p>The entirety of the Dev Menu is removed in Sonic Origins; as such, it's not possible to enable it normally. However, you can use the OriginsDevMode mod to restore it. Read the mod's description for more information and known issues.</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Overview/DevMenu/#debug-controls","title":"Debug Controls","text":"","tags":["RSDKv5"]},{"location":"RSDKv5/Overview/DevMenu/#general","title":"General","text":"Key Command Esc Opens/closes the Dev Menu. Backspace While held down, speeds up the game to 8x speed. F12 / Pause Toggles step-over mode. F11 / Ins If in step-over mode, steps over to the next frame.","tags":["RSDKv5"]},{"location":"RSDKv5/Overview/DevMenu/#decomp-only","title":"Decomp Only","text":"Key Command F1 Loads the previous scene in the scene list. If pressed in the first scene, it will load the last one. F2 Loads the next scene in the scene list. If pressed in the last scene, it will load the first one. F4 Toggles displaying object info for visible entities. Not available in v5U's Legacy Modes. F5 Reloads the current scene. Holding Ctrl while pressing this will also reload all active mods. F6 Decrements the screen count by 1. F7 Increments the screen count by 1. F8 Toggles visualizing update ranges for visible entities. Not available in v5U's Legacy Modes. F9 Toggles visualizing active hitboxes. F10 Toggles displaying the currently loaded palettes.","tags":["RSDKv5"]},{"location":"RSDKv5/Overview/DevMenu/#menu","title":"Menu","text":"<p>You can open the Dev Menu at any time in-game by pressing Esc. In the RSDKv5(U) Decompilation, you can also tap/click the top left corner of the screen.</p> <p>TODO: explain each submenu</p>","tags":["RSDKv5"]},{"location":"RSDKv5/Overview/DevMenu/#other-effects","title":"Other Effects","text":"<p>When the Dev Menu is enabled, <code>SceneInfo-&gt;debugMode</code> is set to <code>true</code> upon engine initialization.</p>","tags":["RSDKv5"]},{"location":"Tools/GraphicsGale/","title":"GraphicsGale","text":"<p>GraphicsGale (also known as Gale) is an image editing program tailored towards pixel art, written by HUMANBALANCE Ltd. The software includes features such as onion skin, real-time preview for GIF animations, batch conversion, and editing Windows icon (ICO) and cursor (CUR) files. GraphicsGale was originally released as paid software in 2004 before being released as freeware in 2017.</p> <p> Download  Website</p>"},{"location":"Tools/GraphicsGale/#retro-engine","title":"Retro Engine","text":"<p>GraphicsGale was used by Christian Whitehead for handling most graphic assets when working with Retro Engine games, and is still a common choice for sprite editing among RSDK modders. The main reason for this is that, unlike most other graphics editors, GraphicsGale supports indexed color palettes for GIF files, with palette optimization being disabled by default. This allows for easily modifying palettes for spritesheets and saving files without the palettes getting scrambled or merged.</p> Original color palette Palette after savedthrough GraphicsGale Palette after savedthrough paint.net"},{"location":"Tools/RSDK-Anim-Editor/","title":"RSDK Animation Editor","text":"<p>This program is able to edit the various .ani and .bin files stored with the spritesheets. TODO: maybe write more and show images</p> <p> Download  Source Code</p>"},{"location":"Tools/RetroED/","title":"RetroED","text":"<p>Multi-purpose tool for editing levels, animations, config files and others from all versions of the Retro Engine.</p> <p>TODO: more</p> <p> Download  Experimental Releases  Source Code</p>"},{"location":"Tools/S3KOEditorLink/","title":"S3KOEditorLink","text":"<p>S3KOEditorLink is an RSDKv5U logic file that allows accessing editor renders and variables from Sonic Origins's Sonic 3 &amp; Knuckles remaster in an RSDK editor program such as RetroED.</p> <p>Warning</p> <p>S3KOEditorLink is only compatible with Windows and requires owning the Steam version of Sonic Origins.</p> <p>Note</p> <p>S3KOEditorLink only works with RSDK editor programs; it does not allow playing Sonic 3 &amp; Knuckles in the RSDKv5U Decompilation.</p> <p> Download  Source Code</p>"},{"location":"Tools/S3KOEditorLink/#tutorials","title":"Tutorials","text":"<ul> <li>Using S3KOEditorLink with RetroED</li> </ul>"},{"location":"blog/","title":"Blog","text":""}]}